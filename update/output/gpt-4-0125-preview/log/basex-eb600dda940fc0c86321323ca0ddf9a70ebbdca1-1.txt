--------------------------------------------------------------------------------------------------------------------------------
new state
3
----------------------------------------------------------------
new description
测试通过，覆盖率：0.0
----------------------------------------------------------------
new message

--------------------------------------------------------------------------------------------------------------------------------
old state
3
----------------------------------------------------------------
old description
测试通过，覆盖率：0.0
----------------------------------------------------------------
old message

--------------------------------------------------------------------------------------------------------------------------------
old product
private static void error(final String query, final QNm error, final QueryError qe) {
    final String q = "import module namespace geo='http://expath.org/ns/geo'; " +
        "declare namespace gml='http://www.opengis.net/gml';" + query;

    try(final QueryProcessor qp = new QueryProcessor(q, context)) {
      final String res = qp.value().serialize().toString().replaceAll("(\\r|\\n) *", "");
      fail("Query did not fail:\n" + query + "\n[E] " + error + "...\n[F] " + res);
    } catch(final QueryException ex) {
      final QueryError qerr = ex.error();
      if(qe != null && qerr != null && qe != qerr) {
        Util.stack(ex);
        final StringBuilder sb = new StringBuilder("Wrong error code:\n[E] ");
        fail(sb.append(qe.name()).append("\n[F] ").append(qerr.name()).toString());
      } else if(!ex.qname().eq(error)) {
        Util.stack(ex);
        final StringBuilder sb = new StringBuilder("Wrong error code:\n[E] ");
        fail(sb.append(error).append("\n[F] ").append(ex.qname()).toString());
      }
    } catch(final Exception ex) {
      Util.stack(ex);
      fail(ex.toString());
    }
  }
----------------------------------------------------------------
old test
@Test
  public void error() throws Exception {
    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
      assertEquals("404", qp.value().serialize().toString());
    }
  }
----------------------------------------------------------------
new product
private static void error(final String query, final QNm error, final QueryError qe) {
    final String q = "import module namespace geo='http://expath.org/ns/geo'; " +
        "declare namespace gml='http://www.opengis.net/gml';" + query;

    try(QueryProcessor qp = new QueryProcessor(q, context)) {
      final String res = qp.value().serialize().toString().replaceAll("(\\r|\\n) *", "");
      fail("Query did not fail:\n" + query + "\n[E] " + error + "...\n[F] " + res);
    } catch(final QueryException ex) {
      final QueryError qerr = ex.error();
      if(qe != null && qerr != null && qe != qerr) {
        Util.stack(ex);
        final StringBuilder sb = new StringBuilder("Wrong error code:\n[E] ");
        fail(sb.append(qe.name()).append("\n[F] ").append(qerr.name()).toString());
      } else if(!ex.qname().eq(error)) {
        Util.stack(ex);
        final StringBuilder sb = new StringBuilder("Wrong error code:\n[E] ");
        fail(sb.append(error).append("\n[F] ").append(ex.qname()).toString());
      }
    } catch(final Exception ex) {
      Util.stack(ex);
      fail(ex.toString());
    }
  }
----------------------------------------------------------------
new test
@Test
  public void error() throws Exception {
    try(QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
      assertEquals("404", qp.value().serialize().toString());
    }
  }
----------------------------------------------------------------
diff product
diff --git a/old_product.java b/new_product.java
index 9a9a3a9..2f38562 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,7 +2,7 @@ private static void error(final String query, final QNm error, final QueryError
     final String q = "import module namespace geo='http://expath.org/ns/geo'; " +
         "declare namespace gml='http://www.opengis.net/gml';" + query;
 
-    try(final QueryProcessor qp = new QueryProcessor(q, context)) {
+    try(QueryProcessor qp = new QueryProcessor(q, context)) {
       final String res = qp.value().serialize().toString().replaceAll("(\\r|\\n) *", "");
       fail("Query did not fail:\n" + query + "\n[E] " + error + "...\n[F] " + res);
     } catch(final QueryException ex) {

----------------------------------------------------------------
diff test
diff --git a/old_test.java b/new_test.java
index e6b834c..d1a4cc8 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,6 +1,6 @@
 @Test
   public void error() throws Exception {
-    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
+    try(QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
         "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
       assertEquals("404", qp.value().serialize().toString());
     }

--------------------------------------------------------------------------------------------------------------------------------
sample diff product
diff --git a/old_product.java b/new_product.java
index 1581c0c..75b8464 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,15 +2,12 @@ private static void error(final String query, final QNm error) {
     final String q = "import module namespace geo='http://expath.org/ns/geo'; " +
         "declare namespace gml='http://www.opengis.net/gml';" + query;
 
-    final QueryProcessor qp = new QueryProcessor(q, context);
-    try {
+    try(final QueryProcessor qp = new QueryProcessor(q, context)) {
       final String res = qp.execute().toString().replaceAll("(\\r|\\n) *", "");
       fail("Query did not fail:\n" + query + "\n[E] " +
           error + "...\n[F] " + res);
     } catch(final QueryException ex) {
       if(!ex.qname().eq(error))
         fail("Wrong error code:\n[E] " + error + "\n[F] " + ex.qname());
-    } finally {
-      qp.close();
     }
   }
\ No newline at end of file

----------------------------------------------------------------
sample diff test
diff --git a/old_test.java b/new_test.java
index 3f84cb8..8b3dae9 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,7 +1,7 @@
 @Test
   public void error() throws QueryException {
-    final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
-        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx);
-    assertEquals("404", qp.execute().toString());
-    qp.close();
+    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
+        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
+      assertEquals("404", qp.execute().toString());
+    }
   }
\ No newline at end of file

----------------------------------------------------------------
coverage
0.0
--------------------------------------------------------------------------------------------------------------------------------
当前次数：1
----------------------------------------------------------------
LLM输出
<new_test>
@Test
  public void error() throws Exception {
    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
    }
  }
</new_test>
----------------------------------------------------------------
测试代码

@Test
  public void error() throws Exception {
    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
    }
  }

----------------------------------------------------------------
改动
--- 

+++ 

@@ -1,7 +1,9 @@

+
 @Test
   public void error() throws Exception {
     try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
         "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
-      assertEquals("404", qp.value().serialize().toString());
+      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
     }
   }
+

----------------------------------------------------------------
state
3
----------------------------------------------------------------
description
测试通过，覆盖率：0.0
----------------------------------------------------------------
message

--------------------------------------------------------------------------------------------------------------------------------
总次数：1
----------------------------------------------------------------
generated test

@Test
  public void error() throws Exception {
    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
        "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
    }
  }

----------------------------------------------------------------
diff old generated test
--- 

+++ 

@@ -1,7 +1,9 @@

+
 @Test
   public void error() throws Exception {
     try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
         "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
-      assertEquals("404", qp.value().serialize().toString());
+      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
     }
   }
+

----------------------------------------------------------------
diff generated new test
--- 

+++ 

@@ -1,9 +1,7 @@

-
 @Test
   public void error() throws Exception {
-    try(final QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
+    try(QueryProcessor qp = new QueryProcessor(_HTTP_SEND_REQUEST.args(
         "<http:request method='get'/>", RESTURL + "unknown") + "[1]/@status/data()", ctx)) {
-      assertEquals("404", qp.value().serialize().toString().replaceAll("(\\r|\\n) *", ""));
+      assertEquals("404", qp.value().serialize().toString());
     }
   }
-

--------------------------------------------------------------------------------------------------------------------------------
