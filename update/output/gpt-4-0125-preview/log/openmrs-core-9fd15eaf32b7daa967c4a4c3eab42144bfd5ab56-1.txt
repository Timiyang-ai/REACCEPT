--------------------------------------------------------------------------------------------------------------------------------
new state
3
----------------------------------------------------------------
new description
测试通过，覆盖率：0.9370629370629371
----------------------------------------------------------------
new message

--------------------------------------------------------------------------------------------------------------------------------
old state
0
----------------------------------------------------------------
old description
编译报错
----------------------------------------------------------------
old message
COMPILATION ERROR : 
\0\openmrs-core\api\src\test\java\org\openmrs\api\OrderServiceTest.java:[612,38] 找不到符号
Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:testCompile (default-testCompile) on project openmrs-api: Compilation failure
\0\openmrs-core\api\src\test\java\org\openmrs\api\OrderServiceTest.java:[612,38] 找不到符号
符号： 方法 getStartDate()
位置： 类 org.openmrs.Order
-> [Help 1]

To see the full stack trace of the errors, re-run Maven with the -e switch.
Re-run Maven using the -X switch to enable full debug logging.

For more information about the errors and possible solutions, please read the following articles:
[Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

After correcting the problems, you can resume the build with the command
  mvn <goals> -rf :openmrs-api

--------------------------------------------------------------------------------------------------------------------------------
old product
@Override
	public Order discontinueOrder(Order orderToDiscontinue, Concept reasonCoded, Date discontinueDate, Provider orderer,
	        Encounter encounter) throws Exception {
		stopOrder(orderToDiscontinue, discontinueDate);
		Order newOrder = orderToDiscontinue.cloneForDiscontinuing();
		newOrder.setOrderReason(reasonCoded);
		newOrder.setOrderer(orderer);
		newOrder.setEncounter(encounter);
		if (discontinueDate == null) {
			discontinueDate = new Date();
		}
		newOrder.setStartDate(discontinueDate);
		return saveOrderInternal(newOrder, null);
	}
----------------------------------------------------------------
old test
@Test
	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
		
		Order order = orderService.getOrderByOrderNumber("111");
		Encounter encounter = encounterService.getEncounter(3);
		Provider orderer = providerService.getProvider(1);
		Date discontinueDate = new Date();
		Concept concept = Context.getConceptService().getConcept(1);
		
		Order discontinueOrder = orderService.discontinueOrder(order, concept, discontinueDate, orderer, encounter);
		
		Assert.assertEquals(order.getDateStopped(), discontinueDate);
		Assert.assertNotNull(discontinueOrder);
		Assert.assertNotNull(discontinueOrder.getId());
		Assert.assertEquals(discontinueOrder.getStartDate(), discontinueOrder.getAutoExpireDate());
		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
	}
----------------------------------------------------------------
new product
@Override
	public Order discontinueOrder(Order orderToDiscontinue, Concept reasonCoded, Date discontinueDate, Provider orderer,
	        Encounter encounter) throws Exception {
		stopOrder(orderToDiscontinue, discontinueDate);
		Order newOrder = orderToDiscontinue.cloneForDiscontinuing();
		newOrder.setOrderReason(reasonCoded);
		newOrder.setOrderer(orderer);
		newOrder.setEncounter(encounter);
		if (discontinueDate == null) {
			discontinueDate = new Date();
		}
		newOrder.setDateActivated(discontinueDate);
		return saveOrderInternal(newOrder, null);
	}
----------------------------------------------------------------
new test
@Test
	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
		
		Order order = orderService.getOrderByOrderNumber("111");
		Encounter encounter = encounterService.getEncounter(3);
		Provider orderer = providerService.getProvider(1);
		Date discontinueDate = new Date();
		Concept concept = Context.getConceptService().getConcept(1);
		
		Order discontinueOrder = orderService.discontinueOrder(order, concept, discontinueDate, orderer, encounter);
		
		Assert.assertEquals(order.getDateStopped(), discontinueDate);
		Assert.assertNotNull(discontinueOrder);
		Assert.assertNotNull(discontinueOrder.getId());
		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
	}
----------------------------------------------------------------
diff product
diff --git a/old_product.java b/new_product.java
index 0294524..d436ffa 100644
--- a/old_product.java
+++ b/new_product.java
@@ -9,6 +9,6 @@
 		if (discontinueDate == null) {
 			discontinueDate = new Date();
 		}
-		newOrder.setStartDate(discontinueDate);
+		newOrder.setDateActivated(discontinueDate);
 		return saveOrderInternal(newOrder, null);
 	}
\ No newline at end of file

----------------------------------------------------------------
diff test
diff --git a/old_test.java b/new_test.java
index 9ae5de8..e6c8d3c 100644
--- a/old_test.java
+++ b/new_test.java
@@ -13,7 +13,7 @@
 		Assert.assertEquals(order.getDateStopped(), discontinueDate);
 		Assert.assertNotNull(discontinueOrder);
 		Assert.assertNotNull(discontinueOrder.getId());
-		Assert.assertEquals(discontinueOrder.getStartDate(), discontinueOrder.getAutoExpireDate());
+		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
 		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
 		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
 		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);

--------------------------------------------------------------------------------------------------------------------------------
sample diff product
diff --git a/old_product.java b/new_product.java
index 48c2f5c..31c40a5 100644
--- a/old_product.java
+++ b/new_product.java
@@ -9,6 +9,6 @@
 		if (discontinueDate == null) {
 			discontinueDate = new Date();
 		}
-		newOrder.setStartDate(discontinueDate);
+		newOrder.setDateActivated(discontinueDate);
 		return saveOrderInternal(newOrder, null);
 	}
\ No newline at end of file

----------------------------------------------------------------
sample diff test
diff --git a/old_test.java b/new_test.java
index 9ae5de8..e6c8d3c 100644
--- a/old_test.java
+++ b/new_test.java
@@ -13,7 +13,7 @@
 		Assert.assertEquals(order.getDateStopped(), discontinueDate);
 		Assert.assertNotNull(discontinueOrder);
 		Assert.assertNotNull(discontinueOrder.getId());
-		Assert.assertEquals(discontinueOrder.getStartDate(), discontinueOrder.getAutoExpireDate());
+		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
 		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
 		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
 		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);

----------------------------------------------------------------
coverage
0.9370629370629371
--------------------------------------------------------------------------------------------------------------------------------
当前次数：1
----------------------------------------------------------------
LLM输出
<new_test>
@Test
	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
		
		Order order = orderService.getOrderByOrderNumber("111");
		Encounter encounter = encounterService.getEncounter(3);
		Provider orderer = providerService.getProvider(1);
		Date discontinueDate = new Date();
		Concept concept = Context.getConceptService().getConcept(1);
		
		Order discontinueOrder = orderService.discontinueOrder(order, concept, discontinueDate, orderer, encounter);
		
		Assert.assertEquals(order.getDateStopped(), discontinueDate);
		Assert.assertNotNull(discontinueOrder);
		Assert.assertNotNull(discontinueOrder.getId());
		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
	}
</new_test>
----------------------------------------------------------------
测试代码

@Test
	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
		
		Order order = orderService.getOrderByOrderNumber("111");
		Encounter encounter = encounterService.getEncounter(3);
		Provider orderer = providerService.getProvider(1);
		Date discontinueDate = new Date();
		Concept concept = Context.getConceptService().getConcept(1);
		
		Order discontinueOrder = orderService.discontinueOrder(order, concept, discontinueDate, orderer, encounter);
		
		Assert.assertEquals(order.getDateStopped(), discontinueDate);
		Assert.assertNotNull(discontinueOrder);
		Assert.assertNotNull(discontinueOrder.getId());
		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
	}

----------------------------------------------------------------
改动
--- 

+++ 

@@ -1,3 +1,4 @@

+
 @Test
 	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
 		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
@@ -13,8 +14,9 @@

 		Assert.assertEquals(order.getDateStopped(), discontinueDate);
 		Assert.assertNotNull(discontinueOrder);
 		Assert.assertNotNull(discontinueOrder.getId());
-		Assert.assertEquals(discontinueOrder.getStartDate(), discontinueOrder.getAutoExpireDate());
+		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
 		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
 		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
 		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
 	}
+

----------------------------------------------------------------
state
3
----------------------------------------------------------------
description
测试通过，覆盖率：0.9370629370629371
----------------------------------------------------------------
message

--------------------------------------------------------------------------------------------------------------------------------
总次数：1
----------------------------------------------------------------
generated test

@Test
	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
		
		Order order = orderService.getOrderByOrderNumber("111");
		Encounter encounter = encounterService.getEncounter(3);
		Provider orderer = providerService.getProvider(1);
		Date discontinueDate = new Date();
		Concept concept = Context.getConceptService().getConcept(1);
		
		Order discontinueOrder = orderService.discontinueOrder(order, concept, discontinueDate, orderer, encounter);
		
		Assert.assertEquals(order.getDateStopped(), discontinueDate);
		Assert.assertNotNull(discontinueOrder);
		Assert.assertNotNull(discontinueOrder.getId());
		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
	}

----------------------------------------------------------------
diff old generated test
--- 

+++ 

@@ -1,3 +1,4 @@

+
 @Test
 	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
 		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
@@ -13,8 +14,9 @@

 		Assert.assertEquals(order.getDateStopped(), discontinueDate);
 		Assert.assertNotNull(discontinueOrder);
 		Assert.assertNotNull(discontinueOrder.getId());
-		Assert.assertEquals(discontinueOrder.getStartDate(), discontinueOrder.getAutoExpireDate());
+		Assert.assertEquals(discontinueOrder.getDateActivated(), discontinueOrder.getAutoExpireDate());
 		Assert.assertEquals(discontinueOrder.getAction(), Action.DISCONTINUE);
 		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
 		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
 	}
+

----------------------------------------------------------------
diff generated new test
--- 

+++ 

@@ -1,4 +1,3 @@

-
 @Test
 	public void discontinueOrder_shouldSetCorrectAttributesOnTheDiscontinueAndDiscontinuedOrders() throws Exception {
 		executeDataSet("org/openmrs/api/include/OrderServiceTest-discontinueReason.xml");
@@ -19,4 +18,3 @@

 		Assert.assertEquals(discontinueOrder.getOrderReason(), concept);
 		Assert.assertEquals(discontinueOrder.getPreviousOrder(), order);
 	}
-

--------------------------------------------------------------------------------------------------------------------------------
