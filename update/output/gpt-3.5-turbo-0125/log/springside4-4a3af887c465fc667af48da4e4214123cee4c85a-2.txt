--------------------------------------------------------------------------------------------------------------------------------
new state
3
----------------------------------------------------------------
new description
测试通过，覆盖率：0.0
----------------------------------------------------------------
new message

--------------------------------------------------------------------------------------------------------------------------------
old state
3
----------------------------------------------------------------
old description
测试通过，覆盖率：0.0
----------------------------------------------------------------
old message

--------------------------------------------------------------------------------------------------------------------------------
old product
IdResponse createUser(@WebParam(name = "user") UserDTO user);
----------------------------------------------------------------
old test
@Test
	public void createUser() {
		User user = UserData.randomUser();
		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);

		IdResponse response = accountWebServiceClient.createUser(userDTO);
		assertNotNull(response.getId());
		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
	}
----------------------------------------------------------------
new product
IdResult createUser(@WebParam(name = "user") UserDTO user);
----------------------------------------------------------------
new test
@Test
	public void createUser() {
		User user = UserData.randomUser();
		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);

		IdResult response = accountWebServiceClient.createUser(userDTO);
		assertNotNull(response.getId());
		GetUserResult response2 = accountWebServiceClient.getUser(response.getId());
		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
	}
----------------------------------------------------------------
diff product
diff --git a/old_product.java b/new_product.java
index 001ff3c..3bbb862 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1 +1 @@
-IdResponse createUser(@WebParam(name = "user") UserDTO user);
\ No newline at end of file
+IdResult createUser(@WebParam(name = "user") UserDTO user);
\ No newline at end of file

----------------------------------------------------------------
diff test
diff --git a/old_test.java b/new_test.java
index 3aa1a74..4640219 100644
--- a/old_test.java
+++ b/new_test.java
@@ -3,8 +3,8 @@
 		User user = UserData.randomUser();
 		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);
 
-		IdResponse response = accountWebServiceClient.createUser(userDTO);
+		IdResult response = accountWebServiceClient.createUser(userDTO);
 		assertNotNull(response.getId());
-		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
+		GetUserResult response2 = accountWebServiceClient.getUser(response.getId());
 		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
 	}
\ No newline at end of file

--------------------------------------------------------------------------------------------------------------------------------
sample diff product
diff --git a/old_product.java b/new_product.java
index 3bbb862..001ff3c 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1 +1 @@
-IdResult createUser(@WebParam(name = "user") UserDTO user);
\ No newline at end of file
+IdResponse createUser(@WebParam(name = "user") UserDTO user);
\ No newline at end of file

----------------------------------------------------------------
sample diff test
diff --git a/old_test.java b/new_test.java
index af6b4fc..4b829b4 100644
--- a/old_test.java
+++ b/new_test.java
@@ -7,6 +7,6 @@
 		userDTO.setName(user.getName());
 		userDTO.setEmail(user.getEmail());
 
-		IdResult result = accountWebServiceClient.createUser(userDTO);
+		IdResponse result = accountWebServiceClient.createUser(userDTO);
 		assertNotNull(result.getId());
 	}
\ No newline at end of file

----------------------------------------------------------------
coverage
0.0
--------------------------------------------------------------------------------------------------------------------------------
当前次数：1
----------------------------------------------------------------
LLM输出
<new_test>
@Test
	public void createUser() {
		User user = UserData.randomUser();
		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);

		IdResponse response = accountWebServiceClient.createUser(userDTO);
		assertNotNull(response.getId());
		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
	}
</new_test>
----------------------------------------------------------------
测试代码

@Test
	public void createUser() {
		User user = UserData.randomUser();
		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);

		IdResponse response = accountWebServiceClient.createUser(userDTO);
		assertNotNull(response.getId());
		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
	}

----------------------------------------------------------------
改动
--- 

+++ 

@@ -1,3 +1,4 @@

+
 @Test
 	public void createUser() {
 		User user = UserData.randomUser();
@@ -8,3 +9,4 @@

 		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
 		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
 	}
+

----------------------------------------------------------------
state
3
----------------------------------------------------------------
description
测试通过，覆盖率：0.0
----------------------------------------------------------------
message

--------------------------------------------------------------------------------------------------------------------------------
总次数：1
----------------------------------------------------------------
generated test

@Test
	public void createUser() {
		User user = UserData.randomUser();
		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);

		IdResponse response = accountWebServiceClient.createUser(userDTO);
		assertNotNull(response.getId());
		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
	}

----------------------------------------------------------------
diff old generated test
--- 

+++ 

@@ -1,3 +1,4 @@

+
 @Test
 	public void createUser() {
 		User user = UserData.randomUser();
@@ -8,3 +9,4 @@

 		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
 		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
 	}
+

----------------------------------------------------------------
diff generated new test
--- 

+++ 

@@ -1,12 +1,10 @@

-
 @Test
 	public void createUser() {
 		User user = UserData.randomUser();
 		UserDTO userDTO = BeanMapper.map(user, UserDTO.class);
 
-		IdResponse response = accountWebServiceClient.createUser(userDTO);
+		IdResult response = accountWebServiceClient.createUser(userDTO);
 		assertNotNull(response.getId());
-		GetUserResponse response2 = accountWebServiceClient.getUser(response.getId());
+		GetUserResult response2 = accountWebServiceClient.getUser(response.getId());
 		assertEquals(user.getLoginName(), response2.getUser().getLoginName());
 	}
-

--------------------------------------------------------------------------------------------------------------------------------
