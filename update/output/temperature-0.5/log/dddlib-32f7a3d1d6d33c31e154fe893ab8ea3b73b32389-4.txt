--------------------------------------------------------------------------------------------------------------------------------
new state
3
----------------------------------------------------------------
new description
测试通过，覆盖率：1.0
----------------------------------------------------------------
new message

--------------------------------------------------------------------------------------------------------------------------------
old state
0
----------------------------------------------------------------
old description
编译报错
----------------------------------------------------------------
old message
COMPILATION ERROR : 
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[264,53] 找不到符号
Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile (default-testCompile) on project dddlib-domain: Compilation failure
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[264,53] 找不到符号
符号： 方法 getQueryCriterions()
位置： 类 org.dayatang.domain.CriteriaQuery
-> [Help 1]

To see the full stack trace of the errors, re-run Maven with the -e switch.
Re-run Maven using the -X switch to enable full debug logging.

For more information about the errors and possible solutions, please read the following articles:
[Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

After correcting the problems, you can resume the build with the command
  mvn <goals> -rf :dddlib-domain

--------------------------------------------------------------------------------------------------------------------------------
old product
public CriteriaQuery containsText(String propName, String value) {
        addCriterion(criterionBuilder.containsText(propName, value));
        return this;
    }
----------------------------------------------------------------
old test
@Test
    public void testContainsText() {
        assertTrue(instance.containsText("name", "a").getQueryCriterions()
                .contains(new ContainsTextCriterion("name", "a")));
    }
----------------------------------------------------------------
new product
public CriteriaQuery containsText(String propName, String value) {
        criterion = criterion.and(criterionBuilder.containsText(propName, value));
        return this;
    }
----------------------------------------------------------------
new test
@Test
    public void testContainsText() {
    	assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
    }
----------------------------------------------------------------
diff product
diff --git a/old_product.java b/new_product.java
index f4b8ba5..4b6bbb8 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,4 @@
 public CriteriaQuery containsText(String propName, String value) {
-        addCriterion(criterionBuilder.containsText(propName, value));
+        criterion = criterion.and(criterionBuilder.containsText(propName, value));
         return this;
     }
\ No newline at end of file

----------------------------------------------------------------
diff test
diff --git a/old_test.java b/new_test.java
index bda8d18..e951782 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,5 +1,4 @@
 @Test
     public void testContainsText() {
-        assertTrue(instance.containsText("name", "a").getQueryCriterions()
-                .contains(new ContainsTextCriterion("name", "a")));
+    	assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
     }
\ No newline at end of file

--------------------------------------------------------------------------------------------------------------------------------
sample diff product
diff --git a/old_product.java b/new_product.java
index 4b6bbb8..6cd9271 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,4 @@
 public CriteriaQuery containsText(String propName, String value) {
-        criterion = criterion.and(criterionBuilder.containsText(propName, value));
+        criterion = criterion.and(Criteria.containsText(propName, value));
         return this;
     }
\ No newline at end of file

----------------------------------------------------------------
sample diff test
diff --git a/old_test.java b/new_test.java
index e951782..fa82a5d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,4 +1,4 @@
 @Test
     public void testContainsText() {
-    	assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
+    	assertEquals(Criteria.containsText("name", "a"), instance.containsText("name", "a").getQueryCriterion());
     }
\ No newline at end of file

----------------------------------------------------------------
coverage
1.0
--------------------------------------------------------------------------------------------------------------------------------
当前次数：1
----------------------------------------------------------------
LLM输出
<new_test>
@Test
    public void testContainsText() {
        assertTrue(instance.containsText("name", "a").getQueryCriterions()
                .contains(Criteria.containsText("name", "a")));
    }
</new_test>
----------------------------------------------------------------
测试代码

@Test
    public void testContainsText() {
        assertTrue(instance.containsText("name", "a").getQueryCriterions()
                .contains(Criteria.containsText("name", "a")));
    }

----------------------------------------------------------------
改动
--- 

+++ 

@@ -1,5 +1,7 @@

+
 @Test
     public void testContainsText() {
         assertTrue(instance.containsText("name", "a").getQueryCriterions()
-                .contains(new ContainsTextCriterion("name", "a")));
+                .contains(Criteria.containsText("name", "a")));
     }
+

----------------------------------------------------------------
state
0
----------------------------------------------------------------
description
编译报错
----------------------------------------------------------------
message
COMPILATION ERROR : 
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[266,26] 找不到符号
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[265,53] 找不到符号
Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile (default-testCompile) on project dddlib-domain: Compilation failure: Compilation failure:
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[266,26] 找不到符号
符号： 变量 Criteria
位置： 类 org.dayatang.domain.repository.CriteriaQueryTest
E:\1\dddlib\dddlib-domain\src\test\java\org\dayatang\domain\repository\CriteriaQueryTest.java:[265,53] 找不到符号
符号： 方法 getQueryCriterions()
位置： 类 org.dayatang.domain.CriteriaQuery
-> [Help 1]

To see the full stack trace of the errors, re-run Maven with the -e switch.
Re-run Maven using the -X switch to enable full debug logging.

For more information about the errors and possible solutions, please read the following articles:
[Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

After correcting the problems, you can resume the build with the command
  mvn <goals> -rf :dddlib-domain

--------------------------------------------------------------------------------------------------------------------------------
当前次数：2
----------------------------------------------------------------
LLM输出
<new_test>
@Test
    public void testContainsText() {
        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
    }
</new_test>
----------------------------------------------------------------
测试代码

@Test
    public void testContainsText() {
        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
    }

----------------------------------------------------------------
改动
--- 

+++ 

@@ -1,7 +1,6 @@

 
 @Test
     public void testContainsText() {
-        assertTrue(instance.containsText("name", "a").getQueryCriterions()
-                .contains(Criteria.containsText("name", "a")));
+        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
     }
 

----------------------------------------------------------------
state
3
----------------------------------------------------------------
description
测试通过，覆盖率：1.0
----------------------------------------------------------------
message

--------------------------------------------------------------------------------------------------------------------------------
总次数：2
----------------------------------------------------------------
generated test

@Test
    public void testContainsText() {
        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
    }

----------------------------------------------------------------
diff old generated test
--- 

+++ 

@@ -1,5 +1,6 @@

+
 @Test
     public void testContainsText() {
-        assertTrue(instance.containsText("name", "a").getQueryCriterions()
-                .contains(new ContainsTextCriterion("name", "a")));
+        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
     }
+

----------------------------------------------------------------
diff generated new test
--- 

+++ 

@@ -1,6 +1,4 @@

-
 @Test
     public void testContainsText() {
-        assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
+    	assertEquals(new ContainsTextCriterion("name", "a"), instance.containsText("name", "a").getQueryCriterion());
     }
-

--------------------------------------------------------------------------------------------------------------------------------
