--------------------------------------------------------------------------------------------------------------------------------
new state: 3
----------------------------------------------------------------
new description: 测试通过，覆盖率：0.8917748917748918
----------------------------------------------------------------
new message

--------------------------------------------------------------------------------------------------------------------------------
old state: 0
----------------------------------------------------------------
old description: 编译报错
----------------------------------------------------------------
old message
COMPILATION ERROR : 
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[204,43] 找不到符号
  符号:   变量 FILE_NF
  位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[205,42] 找不到符号
  符号:   变量 FILE_ID
  位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[208,54] 找不到符号
  符号:   变量 FILE_UE
  位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[211,43] 找不到符号
  符号:   变量 FILE_IE
  位置: 类 org.basex.query.util.Err
Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:testCompile (default-testCompile) on project basex: Compilation failure: Compilation failure:
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[204,43] 找不到符号
符号:   变量 FILE_NF
位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[205,42] 找不到符号
符号:   变量 FILE_ID
位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[208,54] 找不到符号
符号:   变量 FILE_UE
位置: 类 org.basex.query.util.Err
/E:/1/basex/basex-core/src/test/java/org/basex/query/func/FNFileTest.java:[211,43] 找不到符号
符号:   变量 FILE_IE
位置: 类 org.basex.query.util.Err
-> [Help 1]

To see the full stack trace of the errors, re-run Maven with the -e switch.
Re-run Maven using the -X switch to enable full debug logging.

For more information about the errors and possible solutions, please read the following articles:
[Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

After correcting the problems, you can resume the build with the command
  mvn <goals> -rf :basex

--------------------------------------------------------------------------------------------------------------------------------
old product
private StrStream readText(final QueryContext ctx) throws QueryException {
    final File path = checkFile(0, ctx);
    final String enc = encoding(1, FILE_UE, ctx);
    if(!path.exists()) throw FILE_NF.get(info, path.getAbsolutePath());
    if(path.isDirectory()) throw FILE_ID.get(info, path.getAbsolutePath());
    return new StrStream(new IOFile(path), enc, FILE_IE, ctx);
  }
----------------------------------------------------------------
old test
@Test
  public void readText() {
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NF);
    error(_FILE_READ_TEXT.args(PATH), Err.FILE_ID);
    query(_FILE_WRITE.args(PATH1, "a\u00e4"));
    query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UE);
    assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
    query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IE);
    query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
    query(_FILE_DELETE.args(PATH1));
  }
----------------------------------------------------------------
new product
private StrStream readText(final QueryContext ctx) throws QueryException {
    final Path path = checkPath(0, ctx);
    final String enc = encoding(1, FILE_UNKNOWN_ENCODING, ctx);
    if(!Files.exists(path)) throw FILE_NOT_FOUND.get(info, path);
    if(Files.isDirectory(path)) throw FILE_IS_DIR.get(info, path);
    return new StrStream(new IOFile(path.toFile()), enc, FILE_IO_ERROR, ctx);
  }
----------------------------------------------------------------
new test
@Test
  public void readText() {
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
    query(_FILE_WRITE.args(PATH1, "a\u00e4"));
    query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
    assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
    query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
    query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
    query(_FILE_DELETE.args(PATH1));
  }
----------------------------------------------------------------
diff product
diff --git a/old_product.java b/new_product.java
index a93e8eb..0a4bcdf 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,7 @@
 private StrStream readText(final QueryContext ctx) throws QueryException {
-    final File path = checkFile(0, ctx);
-    final String enc = encoding(1, FILE_UE, ctx);
-    if(!path.exists()) throw FILE_NF.get(info, path.getAbsolutePath());
-    if(path.isDirectory()) throw FILE_ID.get(info, path.getAbsolutePath());
-    return new StrStream(new IOFile(path), enc, FILE_IE, ctx);
+    final Path path = checkPath(0, ctx);
+    final String enc = encoding(1, FILE_UNKNOWN_ENCODING, ctx);
+    if(!Files.exists(path)) throw FILE_NOT_FOUND.get(info, path);
+    if(Files.isDirectory(path)) throw FILE_IS_DIR.get(info, path);
+    return new StrStream(new IOFile(path.toFile()), enc, FILE_IO_ERROR, ctx);
   }
\ No newline at end of file

----------------------------------------------------------------
diff test
diff --git a/old_test.java b/new_test.java
index 4b717ac..8ad59ba 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,13 +1,13 @@
 @Test
   public void readText() {
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NF);
-    error(_FILE_READ_TEXT.args(PATH), Err.FILE_ID);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
+    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
     query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
-    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UE);
+    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
     assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
     query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IE);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
     query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
     query(_FILE_DELETE.args(PATH1));
   }
\ No newline at end of file

--------------------------------------------------------------------------------------------------------------------------------
sample diff product
diff --git a/old_product.java b/new_product.java
index 6e441d0..a93e8eb 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,7 @@
 private StrStream readText(final QueryContext ctx) throws QueryException {
     final File path = checkFile(0, ctx);
-    final String enc = encoding(1, FILE_ENCODING, ctx);
-    if(!path.exists()) throw FILE_WHICH.get(info, path.getAbsolutePath());
-    if(path.isDirectory()) throw FILE_DIR.get(info, path.getAbsolutePath());
-    return new StrStream(new IOFile(path), enc, FILE_IO, ctx);
+    final String enc = encoding(1, FILE_UE, ctx);
+    if(!path.exists()) throw FILE_NF.get(info, path.getAbsolutePath());
+    if(path.isDirectory()) throw FILE_ID.get(info, path.getAbsolutePath());
+    return new StrStream(new IOFile(path), enc, FILE_IE, ctx);
   }
\ No newline at end of file

----------------------------------------------------------------
sample diff test
diff --git a/old_test.java b/new_test.java
index d886971..4b717ac 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,13 +1,13 @@
 @Test
   public void readText() {
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_WHICH);
-    error(_FILE_READ_TEXT.args(PATH), Err.FILE_DIR);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NF);
+    error(_FILE_READ_TEXT.args(PATH), Err.FILE_ID);
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
     query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
-    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_ENCODING);
+    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UE);
     assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
     query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IE);
     query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
     query(_FILE_DELETE.args(PATH1));
   }
\ No newline at end of file

----------------------------------------------------------------
coverage: 0.8917748917748918
--------------------------------------------------------------------------------------------------------------------------------
now time: 1
----------------------------------------------------------------
llm output
<new_test>
@Test
public void readText() {
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
    query(_FILE_WRITE.args(PATH1, "a\u00e4"));
    query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
    assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
    query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
    query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
    query(_FILE_DELETE.args(PATH1));
}
</new_test>
----------------------------------------------------------------
generated test
@Test
public void readText() {
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
    query(_FILE_WRITE.args(PATH1, "a\u00e4"));
    query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
    assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
    query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
    query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
    query(_FILE_DELETE.args(PATH1));
}
----------------------------------------------------------------
last generated diff test
--- 

+++ 

@@ -1,13 +1,13 @@

 @Test
-  public void readText() {
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NF);
-    error(_FILE_READ_TEXT.args(PATH), Err.FILE_ID);
+public void readText() {
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
+    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
     query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
-    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UE);
+    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
     assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
     query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IE);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
     query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
     query(_FILE_DELETE.args(PATH1));
-  }
+}

----------------------------------------------------------------
state: 3
----------------------------------------------------------------
description: 测试通过，覆盖率：0.8917748917748918
----------------------------------------------------------------
message

--------------------------------------------------------------------------------------------------------------------------------
total times: 1
----------------------------------------------------------------
generated test
@Test
public void readText() {
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
    query(_FILE_WRITE.args(PATH1, "a\u00e4"));
    query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
    assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
    query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
    query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
    query(_FILE_DELETE.args(PATH1));
}
----------------------------------------------------------------
old generated diff test
--- 

+++ 

@@ -1,13 +1,13 @@

 @Test
-  public void readText() {
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NF);
-    error(_FILE_READ_TEXT.args(PATH), Err.FILE_ID);
+public void readText() {
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
+    error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
     query(_FILE_READ_TEXT.args(PATH1), "a\u00e4");
-    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UE);
+    error(_FILE_READ_TEXT.args(PATH1, "UNKNOWN"), Err.FILE_UNKNOWN_ENCODING);
     assertEquals(3, query(_FILE_READ_TEXT.args(PATH1, "CP1252")).length());
     query(_FILE_WRITE_BINARY.args(PATH1, "xs:hexBinary('00')"));
-    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IE);
+    error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
     query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
     query(_FILE_DELETE.args(PATH1));
-  }
+}

----------------------------------------------------------------
generated new diff test
--- 

+++ 

@@ -1,5 +1,5 @@

 @Test
-public void readText() {
+  public void readText() {
     error(_FILE_READ_TEXT.args(PATH1), Err.FILE_NOT_FOUND);
     error(_FILE_READ_TEXT.args(PATH), Err.FILE_IS_DIR);
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
@@ -10,4 +10,4 @@

     error(_FILE_READ_TEXT.args(PATH1), Err.FILE_IO_ERROR);
     query("declare option db:checkstrings 'off';" + _FILE_READ_TEXT.args(PATH1), "&#x0;");
     query(_FILE_DELETE.args(PATH1));
-}
+  }

----------------------------------------------------------------
state: 3
----------------------------------------------------------------
description: 测试通过，覆盖率：0.8917748917748918
--------------------------------------------------------------------------------------------------------------------------------
