diff --git a/old_product.java b/new_product.java
index f821460..e52c11e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -9,14 +9,14 @@ final ItemList eval(final QueryContext qc, final String query, final String path
     // allow limited number of nested calls
     QueryContext qcAnc = qc;
     for(int c = 5; qcAnc != null && c > 0; c--) qcAnc = qcAnc.parent;
-    if(qcAnc != null) throw BXXQ_NESTED.get(info);
+    if(qcAnc != null) throw XQUERY_NESTED.get(info);
 
     final User user = qc.context.user();
     final Perm tmp = user.perm("");
     Timer to = null;
 
     final Perm perm = Perm.get(opts.get(XQueryOptions.PERMISSION).toString());
-    if(!user.has(perm)) throw BXXQ_PERM2_X.get(info, perm);
+    if(!user.has(perm)) throw XQUERY_PERMISSION2_X.get(info, perm);
     user.perm(perm);
 
     try(QueryContext qctx = new QueryContext(qc)) {
@@ -61,9 +61,9 @@ final ItemList eval(final QueryContext qc, final String query, final String path
 
         if(updating) {
           if(!sc.mixUpdates && !qctx.updating && !qctx.root.expr.isVacuous())
-            throw BXXQ_NOUPDATE.get(info);
+            throw XQUERY_UPDATE2.get(info);
         } else {
-          if(qctx.updating) throw BXXQ_UPDATING.get(info);
+          if(qctx.updating) throw XQUERY_UPDATE1.get(info);
         }
 
         final ItemList cache = new ItemList();
@@ -75,11 +75,14 @@ final ItemList eval(final QueryContext qc, final String query, final String path
         }
         return cache;
       } catch(final JobException ex) {
-        if(qctx.state == JobState.TIMEOUT) throw BXXQ_TIMEOUT.get(info);
-        if(qctx.state == JobState.MEMORY)  throw BXXQ_MEMORY.get(info);
+        if(qctx.state == JobState.TIMEOUT) throw XQUERY_TIMEOUT.get(info);
+        if(qctx.state == JobState.MEMORY)  throw XQUERY_MEMORY.get(info);
         throw ex;
       } catch(final QueryException ex) {
-        if(ex.error() == BASX_PERM_X) throw BXXQ_PERM_X.get(info, ex.getLocalizedMessage());
+        if(ex.error() == BASX_PERM_X) {
+          Util.debug(ex);
+          throw XQUERY_PERMISSION1_X.get(info, ex.getLocalizedMessage());
+        }
         if(!opts.get(XQueryOptions.PASS)) ex.info(info);
         throw ex;
       }
