diff --git a/old_product.java b/new_product.java
index b3ca221..7de1a08 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,11 +3,11 @@ private byte[] number() throws QueryIOException {
 
     // integral part
     int ch = consume();
-    tb.addByte((byte) ch);
+    add(ch);
     if(ch == '-') {
       ch = consume();
       if(ch < '0' || ch > '9') throw error("Number expected after '-'");
-      tb.addByte((byte) ch);
+      add(ch);
     }
 
     final boolean zero = ch == '0';
@@ -25,7 +25,7 @@ private byte[] number() throws QueryIOException {
         case '7':
         case '8':
         case '9':
-          tb.addByte((byte) ch);
+          add(ch);
           pos++;
           ch = curr();
           break;
@@ -40,11 +40,11 @@ private byte[] number() throws QueryIOException {
     }
 
     if(consume('.')) {
-      tb.addByte((byte) '.');
+      add('.');
       ch = curr();
       if(ch < '0' || ch > '9') throw error("Number expected after '.'");
       do {
-        tb.addByte((byte) ch);
+        add(ch);
         pos++;
         ch = curr();
       } while(ch >= '0' && ch <= '9');
@@ -55,15 +55,15 @@ private byte[] number() throws QueryIOException {
     }
 
     // 'e' or 'E'
-    tb.addByte((byte) consume());
+    add(consume());
     ch = curr();
     if(ch == '-' || ch == '+') {
-      tb.addByte((byte) consume());
+      add(consume());
       ch = curr();
     }
 
     if(ch < '0' || ch > '9') throw error("Exponent expected");
-    do tb.addByte((byte) consume());
+    do add(consume());
     while((ch = curr()) >= '0' && ch <= '9');
     skipWs();
     return tb.toArray();
