diff --git a/old_test.java b/new_test.java
index ba35f60..814b535 100644
--- a/old_test.java
+++ b/new_test.java
@@ -11,7 +11,7 @@
     execute(new RepoInstall(REPO + "pkg3.xar", null));
 
     // check if pkg3 is registered in the repo
-    assertTrue(context.repo.pkgDict().contains(token(PKG3ID)));
+    assertTrue(context.repo.pkgDict().containsKey(PKG3ID));
 
     // check if pkg3 was correctly unzipped
     final String pkg3Dir = normalize(PKG3ID);
@@ -24,7 +24,7 @@
     // install another package (pkg4) with a dependency to pkg3
     execute(new RepoInstall(REPO + "pkg4.xar", null));
     // check if pkg4 is registered in the repo
-    assertTrue(context.repo.pkgDict().contains(token(PKG4ID)));
+    assertTrue(context.repo.pkgDict().containsKey(PKG4ID));
     // check if pkg4 was correctly unzipped
     final String pkg4Dir = normalize(PKG4ID);
     assertTrue(isDir(pkg4Dir));
@@ -43,14 +43,14 @@
     // try to delete pkg4 (use package name)
     execute(new RepoDelete(PKG4, null));
     // check if pkg4 is unregistered from the repo
-    assertFalse(context.repo.pkgDict().contains(token(PKG4ID)));
+    assertFalse(context.repo.pkgDict().containsKey(PKG4ID));
 
     // check if pkg4 directory was deleted
     assertFalse(isDir(pkg4Dir));
     // try to delete pkg3 (use package dir)
     execute(new RepoDelete(PKG3ID, null));
     // check if pkg3 is unregistered from the repo
-    assertFalse(context.repo.pkgDict().contains(token(PKG3ID)));
+    assertFalse(context.repo.pkgDict().containsKey(PKG3ID));
     // check if pkg3 directory was deleted
     assertFalse(isDir(pkg3Dir));
   }
\ No newline at end of file
