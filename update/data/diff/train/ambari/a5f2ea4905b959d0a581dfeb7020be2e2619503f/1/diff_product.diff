diff --git a/old_product.java b/new_product.java
index 6673fea..1095c45 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,31 +1,37 @@
 public UpgradeSummary getUpgradeSummary() {
     UpgradeSummary summary = new UpgradeSummary();
     summary.direction = m_direction;
-    summary.type = m_type;
-    summary.orchestration = m_orchestration;
     summary.isRevert = m_isRevert;
+    summary.serviceGroups = new HashMap<>();
 
-    summary.services = new HashMap<>();
+    for (ServiceGroup serviceGroup : m_serviceGroups.keySet()) {
+      MpackChangeSummary changeSummary = m_serviceGroups.get(serviceGroup);
 
-    for (String serviceName : m_services) {
-      RepositoryVersionEntity sourceRepositoryVersion = m_sourceRepositoryMap.get(serviceName);
-      RepositoryVersionEntity targetRepositoryVersion = m_targetRepositoryMap.get(serviceName);
-      if (null == sourceRepositoryVersion || null == targetRepositoryVersion) {
-        LOG.warn("Unable to get the source/target repositories for {} for the upgrade summary",
-            serviceName);
-        continue;
-      }
+      UpgradeServiceGroupSummary serviceGroupSummary = new UpgradeServiceGroupSummary();
+      serviceGroupSummary.type = m_type;
+      serviceGroupSummary.sourceMpackId = changeSummary.getSource().getResourceId();
+      serviceGroupSummary.sourceStack = changeSummary.getSource().getStackId().getStackId();
+      serviceGroupSummary.targetMpackId = changeSummary.getTarget().getRegistryId();
+      serviceGroupSummary.targetStack = changeSummary.getTarget().getStackId().getStackId();
+      serviceGroupSummary.services = new LinkedHashMap<>();
+
+      summary.serviceGroups.put(serviceGroup.getServiceGroupName(), serviceGroupSummary);
 
-      UpgradeServiceSummary serviceSummary = new UpgradeServiceSummary();
-      serviceSummary.sourceRepositoryId = sourceRepositoryVersion.getId();
-      serviceSummary.sourceStackId = sourceRepositoryVersion.getStackId().getStackId();
-      serviceSummary.sourceVersion = sourceRepositoryVersion.getVersion();
+      for( ModuleVersionChange moduleVersionChange : changeSummary.getModuleVersionChanges() ) {
+        UpgradeServiceSummary upgradeServiceSummary = new UpgradeServiceSummary();
+        upgradeServiceSummary.sourceVersion = moduleVersionChange.getSource().getVersion();
+        upgradeServiceSummary.targetVersion = moduleVersionChange.getTarget().getVersion();
+        upgradeServiceSummary.components = new LinkedHashMap<>();
+        serviceGroupSummary.services.put(moduleVersionChange.getSource().getName(), upgradeServiceSummary);
 
-      serviceSummary.targetRepositoryId = targetRepositoryVersion.getId();
-      serviceSummary.targetStackId = targetRepositoryVersion.getStackId().getStackId();
-      serviceSummary.targetVersion = targetRepositoryVersion.getVersion();
+        for( ModuleComponentVersionChange componentVersionChange : moduleVersionChange.getComponentChanges() ) {
+          UpgradeComponentSummary componentSummary = new UpgradeComponentSummary();
+          componentSummary.sourceVersion = componentVersionChange.getSource().getVersion();
+          componentSummary.targetVersion = componentVersionChange.getTarget().getVersion();
 
-      summary.services.put(serviceName, serviceSummary);
+          upgradeServiceSummary.components.put(componentVersionChange.getSource().getName(), componentSummary);
+        }
+      }
     }
 
     return summary;
