diff --git a/old_product.java b/new_product.java
index f4c673c..e5e6534 100644
--- a/old_product.java
+++ b/new_product.java
@@ -14,30 +14,37 @@ public boolean isValidCCN(String rawCCN) {
         }
 
         final String cannonicalCCN;
-        if (separator == null) {
-            cannonicalCCN = rawCCN;
+        String[] splitCCN;
+        if (separator != null) {
+            //there is a seperator, strip if for canoncial form of CCN
+            cannonicalCCN = CharMatcher.anyOf(separator.toString()).removeFrom(rawCCN);
+            splitCCN = rawCCN.split(separator.toString());
         } else {
-            //if there is a seperator, strip if for canoncial form of CCN
-            cannonicalCCN = CharMatcher.anyOf(" -").removeFrom(rawCCN);
-
-            //and validate digit grouping
-            if (cannonicalCCN.length() == 16) {
-                String[] splitCCN = rawCCN.split(separator.toString());
-                if (Arrays.stream(splitCCN).anyMatch(s -> s.length() != 4)
-                        || splitCCN.length != 4) {
+            //else use 'defualt'values
+            cannonicalCCN = rawCCN;
+            splitCCN = new String[]{cannonicalCCN};
+        }
+        
+        // validate digit grouping
+        switch (cannonicalCCN.length()) {
+            case 15:
+                if (false == isValid15DigitGrouping(splitCCN)) {
                     return false;
                 }
-            }
-            if (cannonicalCCN.length() == 15
-                    && (cannonicalCCN.startsWith("34") || cannonicalCCN.startsWith("37"))) {
-                String[] splitCCN = rawCCN.split(separator.toString());
-
-                if (splitCCN.length != 3) {
+                break;
+            case 16:
+                if (false == isValid16DigitGrouping(splitCCN)) {
                     return false;
-                } else if (false == (splitCCN[0].length() == 4 && splitCCN[1].length() == 6 && splitCCN[2].length() == 5)) {
+                }
+                break;
+            case 19:
+                if (false == isValid19DigitGrouping(splitCCN)) {
                     return false;
                 }
-            }
+                break;
+            default:
+                return false;
         }
+
         return CREDIT_CARD_NUM_LUHN_CHECK.isValid(cannonicalCCN);
     }
\ No newline at end of file
