diff --git a/old_product.java b/new_product.java
index fa4ad34..c8406b8 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,11 +1,11 @@
-public static Class[] getParameterizedClassArguments(DeclaringClassInterfacePair p) {
+public static Class[] getParameterizedClassArguments(final DeclaringClassInterfacePair p) {
         if (p.genericInterface instanceof ParameterizedType) {
             ParameterizedType pt = (ParameterizedType) p.genericInterface;
-            Type[] as = pt.getActualTypeArguments();
-            Class[] cas = new Class[as.length];
+            final Type[] as = pt.getActualTypeArguments();
+            final Class[] cas = new Class[as.length];
 
             for (int i = 0; i < as.length; i++) {
-                Type a = as[i];
+                final Type a = as[i];
                 if (a instanceof Class) {
                     cas[i] = (Class) a;
                 } else if (a instanceof ParameterizedType) {
@@ -13,11 +13,11 @@ public static Class[] getParameterizedClassArguments(DeclaringClassInterfacePair
                     cas[i] = (Class) pt.getRawType();
                 } else if (a instanceof TypeVariable) {
                     final TypeVariable tv = (TypeVariable) a;
-                    ClassTypePair ctp = resolveTypeVariable(p.concreteClass, p.declaringClass, tv);
+                    final ClassTypePair ctp = resolveTypeVariable(p.concreteClass, p.declaringClass, tv);
                     cas[i] = (ctp != null) ? ctp.rawClass() : (Class<?>) (tv.getBounds()[0]);
                 } else if (a instanceof GenericArrayType) {
                     final GenericArrayType gat = (GenericArrayType) a;
-                    Type t = gat.getGenericComponentType();
+                    final Type t = gat.getGenericComponentType();
                     if (t instanceof Class) {
                         cas[i] = getArrayForComponentType((Class<?>) t);
                     }
