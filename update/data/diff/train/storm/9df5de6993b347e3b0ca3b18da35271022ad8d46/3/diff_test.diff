diff --git a/old_test.java b/new_test.java
index 310088a..65246d6 100644
--- a/old_test.java
+++ b/new_test.java
@@ -8,12 +8,11 @@
 
         Map<String, LSWorkerHeartbeat> idToHb = Collections.singletonMap("42", hb);
         int nowSecs = 2;
-        File unexpectedDir1 = new MockDirectoryBuilder().setDirName("dir1").build();
-        File expectedDir2 = new MockDirectoryBuilder().setDirName("dir2").build();
-        File expectedDir3 = new MockDirectoryBuilder().setDirName("dir3").build();
-        Set<File> logDirs = Sets.newSet(unexpectedDir1, expectedDir2, expectedDir3);
-
-        try {
+        try (TmpPath testDir = new TmpPath()) {
+            Path unexpectedDir1 = createDir(testDir.getFile().toPath(), "dir1");
+            Path expectedDir2 = createDir(testDir.getFile().toPath(), "dir2");
+            Path expectedDir3 = createDir(testDir.getFile().toPath(), "dir3");
+            Set<Path> logDirs = Sets.newSet(unexpectedDir1, expectedDir2, expectedDir3);
             SupervisorUtils mockedSupervisorUtils = mock(SupervisorUtils.class);
             SupervisorUtils.setInstance(mockedSupervisorUtils);
 
@@ -21,15 +20,15 @@
             StormMetricsRegistry metricRegistry = new StormMetricsRegistry();
             WorkerLogs stubbedWorkerLogs = new WorkerLogs(conf, null, metricRegistry) {
                 @Override
-                public SortedSet<File> getLogDirs(Set<File> logDirs, Predicate<String> predicate) {
-                    TreeSet<File> ret = new TreeSet<>();
+                public SortedSet<Path> getLogDirs(Set<Path> logDirs, Predicate<String> predicate) {
+                    TreeSet<Path> ret = new TreeSet<>();
                     if (predicate.test("42")) {
                         ret.add(unexpectedDir1);
                     }
                     if (predicate.test("007")) {
                         ret.add(expectedDir2);
                     }
-                    if(predicate.test("")) {
+                    if (predicate.test("")) {
                         ret.add(expectedDir3);
                     }
 
@@ -39,7 +38,7 @@
 
             LogCleaner logCleaner = new LogCleaner(conf, stubbedWorkerLogs, new DirectoryCleaner(metricRegistry), null, metricRegistry);
 
-            when(mockedSupervisorUtils.readWorkerHeartbeatsImpl(anyMapOf(String.class, Object.class))).thenReturn(idToHb);
+            when(mockedSupervisorUtils.readWorkerHeartbeatsImpl(anyMap())).thenReturn(idToHb);
             assertEquals(Sets.newSet(expectedDir2, expectedDir3), logCleaner.getDeadWorkerDirs(nowSecs, logDirs));
         } finally {
             SupervisorUtils.resetInstance();
