diff --git a/old_product.java b/new_product.java
index ebbbf81..7a35885 100644
--- a/old_product.java
+++ b/new_product.java
@@ -6,7 +6,7 @@ public Response listLogFiles(String user, Integer port, String topologyId, Strin
             } else {
                 fileResults = new ArrayList<>();
 
-                File[] logRootFiles = new File(logRoot).listFiles();
+                File[] logRootFiles = logRoot.toFile().listFiles();
                 if (logRootFiles != null) {
                     for (File topoDir : logRootFiles) {
                         File[] topoDirFiles = topoDir.listFiles();
@@ -24,9 +24,12 @@ public Response listLogFiles(String user, Integer port, String topologyId, Strin
             if (port == null) {
                 fileResults = new ArrayList<>();
 
-                File topoDir = new File(logRoot, topologyId);
-                if (topoDir.exists()) {
-                    File[] topoDirFiles = topoDir.listFiles();
+                Path topoDir = logRoot.resolve(topologyId).toAbsolutePath().normalize();
+                if (!topoDir.startsWith(logRoot)) {
+                    return LogviewerResponseBuilder.buildSuccessJsonResponse(Collections.emptyList(), callback, origin);
+                }
+                if (topoDir.toFile().exists()) {
+                    File[] topoDirFiles = topoDir.toFile().listFiles();
                     if (topoDirFiles != null) {
                         for (File portDir : topoDirFiles) {
                             fileResults.addAll(directoryCleaner.getFilesForDir(portDir.toPath()));
@@ -35,7 +38,10 @@ public Response listLogFiles(String user, Integer port, String topologyId, Strin
                 }
 
             } else {
-                File portDir = ConfigUtils.getWorkerDirFromRoot(logRoot, topologyId, port);
+                File portDir = ConfigUtils.getWorkerDirFromRoot(logRoot.toString(), topologyId, port).getCanonicalFile();
+                if (!portDir.getPath().startsWith(logRoot.toString())) {
+                    return LogviewerResponseBuilder.buildSuccessJsonResponse(Collections.emptyList(), callback, origin);
+                }
                 if (portDir.exists()) {
                     fileResults = directoryCleaner.getFilesForDir(portDir.toPath());
                 }
