diff --git a/old_test.java b/new_test.java
index ba26e62..e66488f 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,37 +4,39 @@
 		GrowQueue_I8 syndromes = new GrowQueue_I8();
 		GrowQueue_I8 errorLocator = new GrowQueue_I8();
 		GrowQueue_I32 locations = new GrowQueue_I32();
-		int nsyn = 10;
+		int nsyn = 10; // should be able to recover from 4 errors
+
+		ReidSolomonCodes alg = new ReidSolomonCodes(8,primitive8);
+		alg.generator(nsyn);
 
-		int locationsFailed = 0;
 		for (int i = 0; i < 2000; i++) {
 			GrowQueue_I8 message = randomMessage(100);
 			GrowQueue_I8 corrupted = message.copy();
 
 			// apply noise to the message
-			int numErrors = rand.nextInt(6);
+			int numErrors = 4;//rand.nextInt(6);
+			int eccErrors = 0;
 
 			for (int j = 0; j < numErrors; j++) {
-				int selected = rand.nextInt(100);
+				int selected = rand.nextInt(message.size);
 				corrupted.data[selected] ^= (0x12+j); // make sure it changes even if the same number is selected twice
 			}
 
-			ReidSolomonCodes alg = new ReidSolomonCodes(8,primitive8);
-			alg.generator(nsyn);
 			alg.computeECC(message,ecc);
 
+			// TODO turn this code back on once everything else is working correctly
 			// corrupt the ecc code
-			if( numErrors != 5 && rand.nextInt(5) < 1 ) {
-				ecc.data[rand.nextInt(ecc.size)] ^= 0x13;
-			}
+//			if( numErrors < 5 && rand.nextInt(5) < 1 ) {
+//				numErrors++;
+//				ecc.data[rand.nextInt(ecc.size)] ^= 0x13;
+//			}
 
 			int N = message.size+ecc.size;
 
 			alg.computeSyndromes(corrupted,ecc,syndromes);
 			alg.findErrorLocatorPolynomialBM(syndromes,errorLocator);
 			if( !alg.findErrorLocations_BruteForce(errorLocator,N,locations)) {
-				locationsFailed++;
-				continue;
+				fail("can't determine error locations. "+numErrors+" "+eccErrors);
 			}
 
 			alg.correctErrors(corrupted,N,syndromes,errorLocator,locations);
@@ -44,7 +46,4 @@
 				assertEquals(corrupted.get(j),message.get(j));
 			}
 		}
-		// I'm not sure if it should be ever failing...
-		if( locationsFailed > 10 )
-			fail("Too many errors");
 	}
\ No newline at end of file
