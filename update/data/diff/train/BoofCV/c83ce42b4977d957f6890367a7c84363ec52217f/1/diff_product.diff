diff --git a/old_product.java b/new_product.java
index 2778181..3a4d89a 100644
--- a/old_product.java
+++ b/new_product.java
@@ -16,8 +16,7 @@ void considerConnect(SquareNode node0, SquareNode node1) {
 		double side0 = node0.sideLengths[intersection0];
 		double side1 = node1.sideLengths[intersection1];
 
-		// it shuold intersect about in the middle of the line
-
+		// it should intersect about in the middle of the line
 		double sideLoc0 = connectLine.a.distance(node0.square.get(intersection0))/side0;
 		double sideLoc1 = connectLine.b.distance(node1.square.get(intersection1))/side1;
 
@@ -28,7 +27,8 @@ void considerConnect(SquareNode node0, SquareNode node1) {
 //		System.out.println("lineA "+lineA.getLength()+"  connectLine "+connectLine.getLength());
 
 		// see if the spacing makes sense
-		double distanceApart = connectLine.getLength()*spaceToSquareRatio;
+		double spaceDistance = connectLine.getLength();
+//		double distanceApart = spaceDistance*spaceToSquareRatio;
 
 //		if( distanceApart*1.2 < Math.min(side0,side1) )
 //			return;
@@ -86,5 +86,5 @@ void considerConnect(SquareNode node0, SquareNode node1) {
 //				node1.corners.get(intersection1),node1.corners.get(add(intersection1,-1)))) {
 //			return;
 //		}
-		graph.checkConnect(node0,intersection0,node1,intersection1,distanceApart);
+		graph.checkConnect(node0,intersection0,node1,intersection1,spaceDistance);
 	}
\ No newline at end of file
