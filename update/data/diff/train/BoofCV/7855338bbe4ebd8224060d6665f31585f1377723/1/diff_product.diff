diff --git a/old_product.java b/new_product.java
index 8e5524b..74c5c29 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,29 +2,27 @@ void correctErrors( GrowQueue_I8 message ,
 						int length_msg_ecc,
 						GrowQueue_I8 syndromes,
 						GrowQueue_I8 errorLocator ,
-						GrowQueue_I32 errorLocations ,
-						GrowQueue_I8 corrected )
+						GrowQueue_I32 errorLocations)
 	{
-
-		GrowQueue_I8 err_eval = new GrowQueue_I8();
+		GrowQueue_I8 err_eval = new GrowQueue_I8(); // TODO avoid new
 		findErrorEvaluator(syndromes,errorLocator,err_eval);
 
 		// Compute error positions
-		GrowQueue_I8 X = GrowQueue_I8.zeros(errorLocations.size);
+		GrowQueue_I8 X = GrowQueue_I8.zeros(errorLocations.size); // TODO avoid new
 		for (int i = 0; i < errorLocations.size; i++) {
 			int coef_pos = (length_msg_ecc-errorLocations.data[i]-1);
 			X.data[i] = (byte)math.power(2,coef_pos);
 		}
 
-		// storage for error magnitude polynomial
-		GrowQueue_I8 E = GrowQueue_I8.zeros(message.size); // todo is this even needed? Can message be modified directly?
+		GrowQueue_I8 err_loc_prime_tmp = new GrowQueue_I8(X.size);
 
+		// storage for error magnitude polynomial
 		for (int i = 0; i < X.size; i++) {
 			int Xi = X.data[i]&0xFF;
 			int Xi_inv = math.inverse(Xi);
 
 			// Compute the polynomial derivative
-			GrowQueue_I8 err_loc_prime_tmp = new GrowQueue_I8(X.size);
+			err_loc_prime_tmp.size = 0;
 			for (int j = 0; j < X.size; j++) {
 				if( i == j )
 					continue;
@@ -43,9 +41,9 @@ void correctErrors( GrowQueue_I8 message ,
 			// Compute the magnitude
 			int magnitude = math.divide(y,err_loc_prime);
 
-			E.data[errorLocations.get(i)] = (byte)magnitude; // todo what happens if an error is in ECC?
+			// only apply a correction if it's part of the message and not the ECC
+			int loc = errorLocations.get(i);
+			if( loc < message.size )
+				message.data[loc] = (byte)((message.data[loc]&0xFF) ^ magnitude);
 		}
-
-		// apply the correction
-		math.polyAdd(message,E,corrected); // todo replace with an inplace modification of message
 	}
\ No newline at end of file
