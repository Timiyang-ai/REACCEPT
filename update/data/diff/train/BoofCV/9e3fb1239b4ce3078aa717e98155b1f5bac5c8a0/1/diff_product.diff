diff --git a/old_product.java b/new_product.java
index 08491c9..297c668 100644
--- a/old_product.java
+++ b/new_product.java
@@ -27,7 +27,7 @@ public void prunePoints(int neighbors , double distance ) {
 			// distance is squared
 			nn.findNearest(cloud.get(pointId),distance*distance,neighbors+1,resultsNN);
 
-			// always finds itself
+			// Don't prune if it has enough neighbors. Remember that it will always find itself.
 			if( resultsNN.size() > neighbors ) {
 				oldToNew[pointId] = pointId-prunePointID.size;
 				continue;
@@ -37,9 +37,12 @@ public void prunePoints(int neighbors , double distance ) {
 
 			// Remove observations of this point
 			for (int viewIdx = 0; viewIdx < structureP.views.size; viewIdx++) {
-				BundleAdjustmentObservations.View v = observations.getView(structureP.views.get(viewIdx));
+				BundleAdjustmentObservations.View v = observations.getView(structureP.views.data[viewIdx]);
 
 				int pointIdx = v.point.indexOf(pointId);
+				if( pointIdx < 0 )
+					throw new RuntimeException("Bad structure. Point not found in view's observation " +
+							"which was in its structure");
 				v.remove(pointIdx);
 			}
 		}
