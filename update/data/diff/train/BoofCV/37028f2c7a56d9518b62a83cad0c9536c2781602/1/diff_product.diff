diff --git a/old_product.java b/new_product.java
index c5a17dc..5a81fa8 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,4 @@
-void computeCostInnerD(GrayU16 costXD, int idxCost, int idxLrPrev, int minLrPrev, int lengthLocalD ) {
+void computeCostInnerD(GrayU16 costXD, int idxCost, int idxLrPrev, int lengthLocalD ) {
 		idxLrPrev += 1; // start at d=1
 		for (int d = 1; d < lengthLocalD-1; d++, idxLrPrev++) {
 			int cost = costXD.data[idxCost+d] & 0xFFFF; // C(p,d)
@@ -16,11 +16,13 @@ void computeCostInnerD(GrayU16 costXD, int idxCost, int idxLrPrev, int minLrPrev
 				a = b;
 			if( c < a )
 				a = c;
-			if( minLrPrev + penalty2 < a )
-				a = minLrPrev + penalty2;
+			if( penalty2 < a )
+				a = penalty2;
 
 			// minCostPrev is done to reduce the rate at which the cost increases
-			workCostLr[idxLrPrev+this.lengthD] = (short)(cost + a - minLrPrev);
+			if( cost + a > Short.MAX_VALUE )
+				throw new RuntimeException("Egads");
+			workCostLr[idxLrPrev+this.lengthD] = (short)(cost + a);
 			// Lr(p,d) = above
 		}
 	}
\ No newline at end of file
