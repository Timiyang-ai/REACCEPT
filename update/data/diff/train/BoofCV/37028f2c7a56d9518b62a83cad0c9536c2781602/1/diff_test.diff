diff --git a/old_test.java b/new_test.java
index f1775a1..77758fa 100644
--- a/old_test.java
+++ b/new_test.java
@@ -16,10 +16,9 @@
 
 		int idxCost = costXD.getIndex(0,x); // x=row, d=col
 		int idxWork = alg.lengthD*pathI;
-		int minCostPrev = 6;
 
 		// Compute the cost using this algorithm
-		alg.computeCostInnerD(costXD,idxCost,idxWork,minCostPrev, rangeD);
+		alg.computeCostInnerD(costXD,idxCost,idxWork, rangeD);
 
 		// Now compare it to a brute force solution
 		for (int d = 1; d < rangeD-1; d++) {
@@ -28,11 +27,11 @@
 			int l0 = workArray(alg,pathI,d);
 			int l1 = workArray(alg,pathI,d-1) + alg.penalty1;
 			int l2 = workArray(alg,pathI,d+1) + alg.penalty1;
-			int l3 = minCostPrev+alg.penalty2;
+			int l3 = alg.penalty2;
 
 			int v = min(min(min(l0,l1),l2),l3);
 
-			int expected = cost_p_d + v - minCostPrev;
+			int expected = cost_p_d + v;
 			int found = workArray(alg,pathI+1,d);
 
 			assertEquals(expected,found);
