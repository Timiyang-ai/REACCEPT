diff --git a/old_product.java b/new_product.java
index 1772e35..f9d5182 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,21 +1,21 @@
 public static BufferedImage convertTo( ImageBase src, BufferedImage dst, boolean orderRgb ) {
-		if( src instanceof ImageSingleBand ) {
-			if( ImageUInt8.class == src.getClass() ) {
-				return convertTo((ImageUInt8)src,dst);
-			} else if( ImageInt16.class.isInstance(src) ) {
-				return convertTo((ImageInt16)src,dst);
-			} else if( ImageFloat32.class == src.getClass() ) {
-				return convertTo((ImageFloat32)src,dst);
+		if( src instanceof ImageGray) {
+			if( GrayU8.class == src.getClass() ) {
+				return convertTo((GrayU8)src,dst);
+			} else if( GrayI16.class.isInstance(src) ) {
+				return convertTo((GrayI16)src,dst);
+			} else if( GrayF32.class == src.getClass() ) {
+				return convertTo((GrayF32)src,dst);
 			} else {
 				throw new IllegalArgumentException("ImageSingleBand type is not yet supported: "+src.getClass().getSimpleName());
 			}
-		} else if( src instanceof MultiSpectral ) {
-			MultiSpectral ms = (MultiSpectral)src;
+		} else if( src instanceof Planar) {
+			Planar ms = (Planar)src;
 
-			if( ImageUInt8.class == ms.getBandType() ) {
-				return convertTo_U8((MultiSpectral<ImageUInt8>) ms, dst, orderRgb);
-			} else if( ImageFloat32.class == ms.getBandType() ) {
-				return convertTo_F32((MultiSpectral<ImageFloat32>) ms, dst, orderRgb);
+			if( GrayU8.class == ms.getBandType() ) {
+				return convertTo_U8((Planar<GrayU8>) ms, dst, orderRgb);
+			} else if( GrayF32.class == ms.getBandType() ) {
+				return convertTo_F32((Planar<GrayF32>) ms, dst, orderRgb);
 			} else {
 				throw new IllegalArgumentException("MultiSpectral type is not yet supported: "+ ms.getBandType().getSimpleName());
 			}
