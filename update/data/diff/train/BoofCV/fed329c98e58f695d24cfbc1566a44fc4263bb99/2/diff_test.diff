diff --git a/old_test.java b/new_test.java
index fe6b21a..9cf26da 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,5 +1,29 @@
 @Test
 	public void transformPixelToRectNorm_F64() {
-		transformPixelToRectNorm_F64(true);
-		transformPixelToRectNorm_F64(false);
+		IntrinsicParameters param = new IntrinsicParameters().
+						fsetK(300, 320, 0, 150, 130, width, height).fsetRadial(0.1,1e-4);
+
+		DenseMatrix64F rect = new DenseMatrix64F(3,3,true,1.1,0,0,0,2,0,0.1,0,3);
+		DenseMatrix64F rectK = PerspectiveOps.calibrationMatrix(param, null);
+
+		DenseMatrix64F rectK_inv = new DenseMatrix64F(3,3);
+		CommonOps.invert(rectK,rectK_inv);
+
+		PointTransform_F32 tranRect = RectifyImageOps.transformPixelToRect_F32(param, rect);
+		PointTransform_F64 alg = RectifyImageOps.transformPixelToRectNorm_F64(param, rect, rectK);
+
+		double x=10,y=20;
+
+		// compute expected results
+		Point2D_F32 rectified = new Point2D_F32();
+		tranRect.compute((float)x,(float)y,rectified);
+		Point2D_F64 expected = new Point2D_F64();
+		GeometryMath_F64.mult(rectK_inv,new Point2D_F64(rectified.x,rectified.y),expected);
+
+		// compute the 'found' results
+		Point2D_F64 found = new Point2D_F64();
+		alg.compute(x,y,found);
+
+		assertEquals(expected.x, found.x, 1e-4);
+		assertEquals(expected.y, found.y, 1e-4);
 	}
\ No newline at end of file
