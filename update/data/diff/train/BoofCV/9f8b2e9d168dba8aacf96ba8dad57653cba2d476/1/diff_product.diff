diff --git a/old_product.java b/new_product.java
index 3638b72..ea4206d 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,7 @@
 public static PointTransform_F32 allInside( IntrinsicParameters param,
-												IntrinsicParameters paramAdj ) {
-		PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true,true);
-		PointTransform_F32 add_p_to_p = distortTransform(param).distort_F32(true, true);
+												IntrinsicParameters paramAdj ,
+												boolean forwardTransform ) {
+		PointTransform_F32 remove_p_to_p = distortTransform(param).undistort_F32(true, true);
 
 		RectangleLength2D_F32 bound = LensDistortionOps.boundBoxInside(param.width, param.height,
 				new PointToPixelTransform_F32(remove_p_to_p));
@@ -21,5 +21,11 @@ public static PointTransform_F32 allInside( IntrinsicParameters param,
 		// adjustment matrix
 		DenseMatrix64F A = new DenseMatrix64F(3,3,true,scale,0,deltaX,0,scale,deltaY,0,0,1);
 
-		return PerspectiveOps.adjustIntrinsic_F32(add_p_to_p, false, param, A, paramAdj);
+		if( forwardTransform ) {
+			PointTransform_F32 add_p_to_p = distortTransform(param).distort_F32(true, true);
+			return PerspectiveOps.adjustIntrinsic_F32(add_p_to_p, true, param, A, paramAdj);
+		} else {
+			CommonOps.invert(A);
+			return PerspectiveOps.adjustIntrinsic_F32(remove_p_to_p, false, param, A, paramAdj);
+		}
 	}
\ No newline at end of file
