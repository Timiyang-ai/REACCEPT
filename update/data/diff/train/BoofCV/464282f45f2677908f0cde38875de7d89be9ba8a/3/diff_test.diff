diff --git a/old_test.java b/new_test.java
index db962bd..33b997a 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,40 +1,29 @@
 @Test
 	public void splitPixels() {
-		SplitMergeLineFitLoop alg = new SplitMergeLineFitLoop(2.99,100,100);
+		SplitMergeLineFitLoop alg = new SplitMergeLineFitLoop(0.01,1,100);
 		alg.contour = new ArrayList<Point2D_I32>();
 		for( int i = 0; i < 10; i++ )
 			alg.contour.add( new Point2D_I32(i,0));
 		alg.N = alg.contour.size();
-		alg.contour.get(4).y = 3;// set it just above the threshold
+		alg.contour.get(4).y = 6;// set it just above the threshold
 
-		// tests which require no looping
+		// tests which require splits on recursive calls
 		alg.splitPixels(0,3);
-		assertEquals(0,alg.splits.size);
-		alg.splitPixels(0,4);  // points before will be within threshold
-		assertEquals(0,alg.splits.size);
-		alg.splitPixels(0,5);
-		assertEquals(1,alg.splits.size);
-		assertEquals(4,alg.splits.data[0]);
-		alg.splits.reset();
-		alg.splitPixels(0,9);
-		assertEquals(1,alg.splits.size);
-		assertEquals(4,alg.splits.data[0]);
-
-		// tests which require looping
-		// Note: That multiple hits will be encountered since the line is more distance from points in this direction
-		alg.splits.reset();
-		alg.splitPixels(5, 7);
 		assertEquals(0, alg.splits.size);
-		alg.splitPixels(6, 9);// the line has a steep slope.  I guess two splits is reasonable
-		assertEquals(2,alg.splits.size);
-		assertEquals(4, alg.splits.data[1]);
+		alg.splitPixels(0, 4);
+		assertEquals(1, alg.splits.size);
+		assertEquals(3,alg.splits.data[0]);
+
+		// will get a hit from its recursive call.
+		// gets split on both sides of the impulse because the impulse is so far from all the other lines
 		alg.splits.reset();
-		alg.splitPixels(9, 4);
-		assertEquals(0, alg.splits.size);
-		alg.splitPixels(9, 5);
-		assertEquals(1,alg.splits.size);
+		alg.splitPixels(0, 9);
+		assertEquals(3, alg.splits.size);
+		assertEquals(3,alg.splits.data[0]);
+		assertEquals(4,alg.splits.data[1]);
+		assertEquals(5,alg.splits.data[2]);
 
-		// see if it handles these cases
+		// Test a few edge cases
 		alg.splits.reset();
 		alg.splitPixels(0,1);
 		assertEquals(0,alg.splits.size);
