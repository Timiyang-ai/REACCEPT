diff --git a/old_product.java b/new_product.java
index edd904a..30a1498 100644
--- a/old_product.java
+++ b/new_product.java
@@ -8,6 +8,8 @@ void computeRawDescriptor(double c_x, double c_y, double sigma, double orientati
 
 		double sampleToPixels = sigma*sigmaToPixels;
 
+		Deriv image = (Deriv)imageDerivX.getImage();
+
 		for (int sampleY = 0; sampleY < sampleWidth; sampleY++) {
 			float subY = sampleY/widthSubregion;
 			double y = sampleToPixels*(sampleY-sampleRadius);
@@ -25,10 +27,10 @@ void computeRawDescriptor(double c_x, double c_y, double sigma, double orientati
 				int pixelY = (int)(x*s + y*c + c_y + 0.5);
 
 				// skip pixels outside of the image
-				if( imageDerivX.isInBounds(pixelX,pixelY) ) {
+				if( image.isInBounds(pixelX,pixelY) ) {
 					// spacial image derivative at this point
-					float spacialDX = imageDerivX.unsafe_get(pixelX, pixelY);
-					float spacialDY = imageDerivY.unsafe_get(pixelX, pixelY);
+					float spacialDX = imageDerivX.unsafe_getF(pixelX, pixelY);
+					float spacialDY = imageDerivY.unsafe_getF(pixelX, pixelY);
 
 					double adjDX =  c*spacialDX + s*spacialDY;
 					double adjDY = -s*spacialDX + c*spacialDY;
