diff --git a/old_product.java b/new_product.java
index 22e850d..a0c5d00 100644
--- a/old_product.java
+++ b/new_product.java
@@ -7,8 +7,11 @@ void computeHistogram(int c_x, int c_y, double sigma) {
 		bound.x1 = c_x + r + 1;
 		bound.y1 = c_y + r + 1;
 
+		ImageSingleBand rawDX = derivX.getImage();
+		ImageSingleBand rawDY = derivY.getImage();
+
 		// make sure it is contained in the image bounds
-		BoofMiscOps.boundRectangleInside(derivX,bound);
+		BoofMiscOps.boundRectangleInside(rawDX,bound);
 
 		// clear the histogram
 		Arrays.fill(histogramMag,0);
@@ -18,12 +21,12 @@ void computeHistogram(int c_x, int c_y, double sigma) {
 		// construct the histogram
 		for( int y = bound.y0; y < bound.y1; y++ ) {
 			// iterate through the raw array for speed
-			int indexDX = derivX.startIndex + y*derivX.stride + bound.x0;
-			int indexDY = derivY.startIndex + y*derivY.stride + bound.x0;
+			int indexDX = rawDX.startIndex + y*rawDX.stride + bound.x0;
+			int indexDY = rawDY.startIndex + y*rawDY.stride + bound.x0;
 
 			for( int x = bound.x0; x < bound.x1; x++ ) {
-				float dx = derivX.data[indexDX++];
-				float dy = derivY.data[indexDY++];
+				float dx = derivX.getF(indexDX++);
+				float dy = derivY.getF(indexDY++);
 
 				// edge intensity and angle
 				double magnitude = Math.sqrt(dx*dx + dy*dy);
