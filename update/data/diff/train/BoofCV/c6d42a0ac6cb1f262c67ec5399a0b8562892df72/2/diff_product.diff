diff --git a/old_product.java b/new_product.java
index cbfda5c..09b58e2 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,32 +1,31 @@
-private void computePointsAndWeights(float slopeX, float slopeY, float x0, float y0, float tanX, float tanY) {
+protected void computePointsAndWeights(float slopeX, float slopeY, float x0, float y0, float tanX, float tanY) {
 		float centerX = (float)center.x;
 		float centerY = (float)center.y;
 
-		for (int i = 0; i < numSamples; i++) {
-			// find point on line
-			float frac = i/(float)(numSamples-1);
-			float x = x0 + slopeX*frac;
-			float y = y0 + slopeY*frac;
+		for (int i = 0; i < lineSamples; i++ ) {
+			// find point on line and shift it over to the first sample point
+			float frac = i/(float)(lineSamples -1);
+			float x = x0 + slopeX*frac + sampleRadius*tanX;
+			float y = y0 + slopeY*frac + sampleRadius*tanY;
 
-			// compute sample point one pixel to the left of the line where the color should be different
-			float leftX = x + tanX;
-			float leftY = y + tanY;
-			float rightX = x;
-			float rightY = y;
+			int indexPts = i*(values.length-1);
+
+			values[0] = interpolate.get(x,y);
+			for (int j = 1; j < values.length; j++) {
+				x -= tanX;
+				y -= tanY;
 
-			for (int j = 0; j < numTangent; j++) {
 				// sample the value
-				float valueLeft = interpolate.get(leftX,leftY);
-				float valueLine = interpolate.get(rightX,rightY);
+				values[j] = interpolate.get(x,y);
 
 				// add the point to the list and convert into local coordinates
-				samplePts.get(i).set(x-centerX,y-centerY);
-				weights[i] = Math.max(0,sign*(valueLeft-valueLine));
+				samplePts.get(indexPts+j-1).set(x-centerX,y-centerY);
+			}
 
-				leftX += tanX;
-				leftY += tanY;
-				rightX -= tanX;
-				rightY -= tanY;
+			// compute the weights using the difference between adjacent sample points
+			// the weight should be maximized if the right sample point is inside the square
+			for (int j = 0; j < values.length-1; j++) {
+				weights[indexPts+j] = Math.max(0,sign*(values[j]-values[j+1]));
 			}
 		}
 	}
\ No newline at end of file
