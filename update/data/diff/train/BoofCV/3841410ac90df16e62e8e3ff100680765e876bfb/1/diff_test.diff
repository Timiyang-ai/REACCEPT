diff --git a/old_test.java b/new_test.java
index 2f0a620..5b5f3b5 100644
--- a/old_test.java
+++ b/new_test.java
@@ -2,21 +2,22 @@
 	public void optimizedParam_noisy() {
 
 		List<Point2D_F64> grid = GenericCalibrationGrid.standardLayout();
-		Zhang99ParamAll initial = GenericCalibrationGrid.createStandardParam(true,2,true,3,rand);
-		Zhang99ParamAll expected = initial.copy();
-		Zhang99ParamAll found = new Zhang99ParamAll(true,2,true,3);
+		Zhang99AllParam initial = GenericCalibrationGrid.createStandardParam(true,2,true,3,rand);
+		Zhang99AllParam expected = initial.copy();
+		Zhang99AllParam found = new Zhang99AllParam(new CalibParamPinholeRadial(true,2,true),3);
 
 		List<CalibrationObservation> observations = GenericCalibrationGrid.createObservations(initial,grid);
 
 		// add a tinny bit of noise
-		initial.a += rand.nextDouble()*0.01*Math.abs(initial.a);
-		initial.b += rand.nextDouble()*0.01*Math.abs(initial.b);
-		initial.c += rand.nextDouble()*0.01*Math.abs(initial.c);
-		initial.x0 += rand.nextDouble()*0.01*Math.abs(initial.x0);
-		initial.y0 += rand.nextDouble()*0.01*Math.abs(initial.y0);
+		CameraPinholeRadial intrinsic = initial.getIntrinsic().getCameraModel();
+		intrinsic.fx += rand.nextDouble()*0.01*Math.abs(intrinsic.fx);
+		intrinsic.fy += rand.nextDouble()*0.01*Math.abs(intrinsic.fy);
+		intrinsic.skew += rand.nextDouble()*0.01*Math.abs(intrinsic.skew);
+		intrinsic.cx += rand.nextDouble()*0.01*Math.abs(intrinsic.cx);
+		intrinsic.cy += rand.nextDouble()*0.01*Math.abs(intrinsic.cy);
 
-		for( int i = 0; i < expected.radial.length; i++ ) {
-			initial.radial[i] = rand.nextGaussian()*expected.radial[i]*0.1;
+		for( int i = 0; i < intrinsic.radial.length; i++ ) {
+			intrinsic.radial[i] = rand.nextGaussian()*intrinsic.radial[i]*0.1;
 		}
 
 		CalibrationPlanarGridZhang99 alg = new CalibrationPlanarGridZhang99(grid,true,2,true);
