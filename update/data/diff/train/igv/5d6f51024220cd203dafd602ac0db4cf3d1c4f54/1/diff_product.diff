diff --git a/old_product.java b/new_product.java
index ce65b71..782ae20 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,44 +1,52 @@
-public List<AlignmentInterval.Row> packAlignments(
+public Map<String, List<AlignmentInterval.Row>> packAlignments(
             Iterator<Alignment> iter,
             int end,
             boolean pairAlignments,
-            AlignmentTrack.SortOption groupBy,
+            AlignmentTrack.GroupOption groupBy,
             int maxLevels) {
 
+        Map<String, List<AlignmentInterval.Row>> packedAlignments = new HashMap<String, List<Row>>();
 
-        List<Row> alignmentRows = new ArrayList(1000);
         if (iter == null || !iter.hasNext()) {
-            return alignmentRows;
+            return packedAlignments;
         }
 
         if (groupBy == null) {
+            List<Row> alignmentRows = new ArrayList(10000);
             pack(iter, end, pairAlignments, lengthComparator, alignmentRows, maxLevels);
+            packedAlignments.put("", alignmentRows);
         } else {
-            // Separate by group
+            // Separate alignments into groups.
             List<Alignment> nullGroup = new ArrayList();
             HashMap<String, List<Alignment>> groupedAlignments = new HashMap();
             while (iter.hasNext()) {
-                Alignment al = iter.next();
-                String groupKey = getGroupValue(al, groupBy);
-                if (groupKey == null) nullGroup.add(al);
+                Alignment alignment = iter.next();
+                String groupKey = getGroupValue(alignment, groupBy);
+                if (groupKey == null) nullGroup.add(alignment);
                 else {
                     List<Alignment> group = groupedAlignments.get(groupKey);
                     if (group == null) {
                         group = new ArrayList(1000);
                         groupedAlignments.put(groupKey, group);
                     }
-                    group.add(al);
+                    group.add(alignment);
                 }
             }
+
+            // Now alphabetize (sort) and pack the groups
             List<String> keys = new ArrayList(groupedAlignments.keySet());
             Collections.sort(keys);
             for (String key : keys) {
+                List<Row> alignmentRows = new ArrayList(10000);
                 List<Alignment> group = groupedAlignments.get(key);
                 pack(group.iterator(), end, pairAlignments, lengthComparator, alignmentRows, maxLevels);
+                packedAlignments.put(key, alignmentRows);
             }
+            List<Row> alignmentRows = new ArrayList(10000);
             pack(nullGroup.iterator(), end, pairAlignments, lengthComparator, alignmentRows, maxLevels);
+            packedAlignments.put("", alignmentRows);
         }
 
-        return alignmentRows;
+        return packedAlignments;
 
     }
\ No newline at end of file
