diff --git a/old_test.java b/new_test.java
index d9a18ef..244d31e 100644
--- a/old_test.java
+++ b/new_test.java
@@ -3,24 +3,24 @@
         final Cluster cluster1 = constructClusterDTO(null);
         clusterClient.createCluster(cluster1);
 
-        final Cluster cluster2 = clusterClient.getCluster(cluster1.getId());
+        final Cluster cluster2 = clusterClient.getCluster(cluster1.getId().orElseThrow(IllegalArgumentException::new));
         Assert.assertEquals(cluster2.getName(), cluster1.getName());
 
         final Cluster cluster3 = new
             Cluster.Builder("newname", "newuser", "new version", ClusterStatus.OUT_OF_SERVICE)
-            .withId(cluster1.getId())
+            .withId(cluster1.getId().orElseThrow(IllegalArgumentException::new))
             .build();
 
-        clusterClient.updateCluster(cluster1.getId(), cluster3);
+        clusterClient.updateCluster(cluster1.getId().orElseThrow(IllegalArgumentException::new), cluster3);
 
-        final Cluster cluster4 = clusterClient.getCluster(cluster1.getId());
+        final Cluster cluster4 = clusterClient.getCluster(cluster1.getId().orElseThrow(IllegalArgumentException::new));
 
         Assert.assertEquals("newname", cluster4.getName());
         Assert.assertEquals("newuser", cluster4.getUser());
         Assert.assertEquals("new version", cluster4.getVersion());
         Assert.assertEquals(ClusterStatus.OUT_OF_SERVICE, cluster4.getStatus());
-        Assert.assertEquals(null, cluster4.getSetupFile());
-        Assert.assertEquals(null, cluster4.getDescription());
+        Assert.assertFalse(cluster4.getSetupFile().isPresent());
+        Assert.assertFalse(cluster4.getDescription().isPresent());
         Assert.assertEquals(Collections.emptySet(), cluster4.getConfigs());
         Assert.assertEquals(cluster4.getTags().contains("foo"), false);
     }
\ No newline at end of file
