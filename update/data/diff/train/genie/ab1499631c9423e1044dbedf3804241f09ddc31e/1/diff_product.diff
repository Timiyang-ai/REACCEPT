diff --git a/old_product.java b/new_product.java
index 466fdf2..42dbecc 100644
--- a/old_product.java
+++ b/new_product.java
@@ -34,6 +34,15 @@ public String coordinateJob(
             .withId(jobRequest.getId())
             .withTags(jobRequest.getTags());
 
+        final JobExecution jobExecution = new JobExecution.Builder(
+            this.hostName,
+            JobExecution.DEFAULT_PROCESS_ID,
+            JobExecution.DEFAULT_CHECK_DELAY,
+            JobExecution.DEFAULT_TIMEOUT
+        )
+            .withId(jobRequest.getId())
+            .build();
+
         synchronized (this) {
             log.info("Checking if can run job {} on this node", jobRequest.getId());
             final int numActiveJobs = this.jobCountService.getNumJobs();
@@ -48,7 +57,7 @@ public String coordinateJob(
                     .withStatus(JobStatus.INIT)
                     .withStatusMsg("Job Accepted and in initialization phase.");
                 // TODO: if this throws exception the job will never be marked failed
-                this.jobPersistenceService.createJob(jobBuilder.build());
+                this.jobPersistenceService.createJobAndJobExecution(jobBuilder.build(), jobExecution);
                 try {
                     log.info("Scheduling job {} for submission", jobRequest.getId());
                     final Future<?> task = this.taskExecutor.submit(
@@ -68,7 +77,7 @@ public String coordinateJob(
                 jobBuilder
                     .withStatus(JobStatus.FAILED)
                     .withStatusMsg("Unable to run job due to host being too busy during request.");
-                this.jobPersistenceService.createJob(jobBuilder.build());
+                this.jobPersistenceService.createJobAndJobExecution(jobBuilder.build(), jobExecution);
                 throw new GenieServerUnavailableException(
                     "Running ("
                         + numActiveJobs
