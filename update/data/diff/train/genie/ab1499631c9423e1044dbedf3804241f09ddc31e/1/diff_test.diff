diff --git a/old_test.java b/new_test.java
index 33cbc88..44fee2e 100644
--- a/old_test.java
+++ b/new_test.java
@@ -47,13 +47,17 @@
         Mockito.verify(this.taskExecutor, Mockito.times(1)).submit(Mockito.any(JobLauncher.class));
         Mockito.verify(this.eventPublisher, Mockito.times(1)).publishEvent(Mockito.any(JobScheduledEvent.class));
 
-        final ArgumentCaptor<Job> argument = ArgumentCaptor.forClass(Job.class);
-        Mockito.verify(this.jobPersistenceService).createJob(argument.capture());
-
-        Assert.assertEquals(JOB_1_ID, argument.getValue().getId());
-        Assert.assertEquals(JOB_1_NAME, argument.getValue().getName());
-        Assert.assertEquals(JOB_1_USER, argument.getValue().getUser());
-        Assert.assertEquals(JOB_1_VERSION, argument.getValue().getVersion());
-        Assert.assertEquals(JobStatus.INIT, argument.getValue().getStatus());
-        Assert.assertEquals(description, argument.getValue().getDescription());
+        final ArgumentCaptor<Job> jobArgumentCaptor = ArgumentCaptor.forClass(Job.class);
+        final ArgumentCaptor<JobExecution> jobExecutionArgumentCaptor = ArgumentCaptor.forClass(JobExecution.class);
+        Mockito.verify(this.jobPersistenceService).createJobAndJobExecution(
+            jobArgumentCaptor.capture(),
+            jobExecutionArgumentCaptor.capture()
+        );
+
+        Assert.assertEquals(JOB_1_ID, jobArgumentCaptor.getValue().getId());
+        Assert.assertEquals(JOB_1_NAME, jobArgumentCaptor.getValue().getName());
+        Assert.assertEquals(JOB_1_USER, jobArgumentCaptor.getValue().getUser());
+        Assert.assertEquals(JOB_1_VERSION, jobArgumentCaptor.getValue().getVersion());
+        Assert.assertEquals(JobStatus.INIT, jobArgumentCaptor.getValue().getStatus());
+        Assert.assertEquals(description, jobArgumentCaptor.getValue().getDescription());
     }
\ No newline at end of file
