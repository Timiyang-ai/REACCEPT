diff --git a/old_test.java b/new_test.java
index a175233..59b83a7 100644
--- a/old_test.java
+++ b/new_test.java
@@ -2,7 +2,7 @@
     public void testSetApplications() throws GeniePreconditionException {
         Assert.assertNotNull(this.c.getApplications());
         Assert.assertTrue(this.c.getApplications().isEmpty());
-        final Set<ApplicationEntity> applicationEntities = new HashSet<>();
+        final List<ApplicationEntity> applicationEntities = new ArrayList<>();
         final ApplicationEntity one = new ApplicationEntity();
         one.setId("one");
         final ApplicationEntity two = new ApplicationEntity();
@@ -11,8 +11,8 @@
         applicationEntities.add(two);
         this.c.setApplications(applicationEntities);
         Assert.assertEquals(2, this.c.getApplications().size());
-        Assert.assertTrue(this.c.getApplications().contains(one));
-        Assert.assertTrue(this.c.getApplications().contains(two));
+        Assert.assertTrue(this.c.getApplications().get(0).equals(one));
+        Assert.assertTrue(this.c.getApplications().get(1).equals(two));
         Assert.assertTrue(one.getCommands().contains(this.c));
         Assert.assertTrue(two.getCommands().contains(this.c));
 
@@ -20,7 +20,7 @@
         applicationEntities.add(two);
         this.c.setApplications(applicationEntities);
         Assert.assertEquals(1, this.c.getApplications().size());
-        Assert.assertTrue(this.c.getApplications().contains(two));
+        Assert.assertTrue(this.c.getApplications().get(0).equals(two));
         Assert.assertFalse(one.getCommands().contains(this.c));
         Assert.assertTrue(two.getCommands().contains(this.c));
         this.c.setApplications(null);
