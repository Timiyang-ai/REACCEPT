diff --git a/old_product.java b/new_product.java
index 165272b..3c70ed6 100644
--- a/old_product.java
+++ b/new_product.java
@@ -11,16 +11,25 @@ public static Specification<ClusterEntity> findByClusterAndCommandCriteria(
             predicates.add(cb.equal(root.get(ClusterEntity_.status), ClusterStatus.UP));
 
             if (commandCriteria != null) {
-                for (final String tag : commandCriteria) {
-                    predicates.add(cb.isMember(tag, commands.get(CommandEntity_.tags)));
-
-                }
+                final StringBuilder builder = new StringBuilder();
+                builder.append("%");
+                commandCriteria.stream()
+                        .filter(StringUtils::isNotBlank)
+                        .map(String::toLowerCase)
+                        .sorted()
+                        .forEach(tag -> builder.append(tag).append("%"));
+                predicates.add(cb.like(commands.get(CommandEntity_.sortedTags), builder.toString()));
             }
 
             if (clusterCriteria != null) {
-                for (final String tag : clusterCriteria.getTags()) {
-                    predicates.add(cb.isMember(tag, root.get(ClusterEntity_.tags)));
-                }
+                final StringBuilder builder = new StringBuilder();
+                builder.append("%");
+                clusterCriteria.getTags().stream()
+                        .filter(StringUtils::isNotBlank)
+                        .map(String::toLowerCase)
+                        .sorted()
+                        .forEach(tag -> builder.append(tag).append("%"));
+                predicates.add(cb.like(root.get(ClusterEntity_.sortedTags), builder.toString()));
             }
 
             return cb.and(predicates.toArray(new Predicate[predicates.size()]));
