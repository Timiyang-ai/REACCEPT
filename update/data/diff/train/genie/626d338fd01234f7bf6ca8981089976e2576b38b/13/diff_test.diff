diff --git a/old_test.java b/new_test.java
index a2103a9..18f6407 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,38 +1,39 @@
 @Test
     public void testUpdateCommand() throws GenieException {
         final Command command = this.service.getCommand(COMMAND_1_ID);
-        Assert.assertEquals(COMMAND_1_USER, command.getUser());
-        Assert.assertEquals(CommandStatus.ACTIVE, command.getStatus());
-        Assert.assertEquals(5, command.getTags().size());
+        Assert.assertEquals(COMMAND_1_USER, command.getMetadata().getUser());
+        Assert.assertEquals(CommandStatus.ACTIVE, command.getMetadata().getStatus());
+        Assert.assertEquals(3, command.getMetadata().getTags().size());
         Assert.assertFalse(command.getMemory().isPresent());
         final Set<String> tags = Sets.newHashSet("yarn", "hadoop");
-        tags.addAll(command.getTags());
+        tags.addAll(command.getMetadata().getTags());
 
         final int memory = 1_024;
-        final Command.Builder updateCommand = new Command.Builder(
-            command.getName(),
-            COMMAND_2_USER,
-            command.getVersion(),
-            CommandStatus.INACTIVE,
+        final Command updateCommand = new Command(
+            command.getId(),
+            command.getCreated(),
+            command.getUpdated(),
+            command.getResources(),
+            new CommandMetadata.Builder(
+                command.getMetadata().getName(),
+                COMMAND_2_USER,
+                CommandStatus.INACTIVE
+            )
+                .withVersion(command.getMetadata().getVersion().orElse(null))
+                .withMetadata(command.getMetadata().getMetadata().orElse(null))
+                .withDescription(command.getMetadata().getDescription().orElse(null))
+                .withTags(tags)
+                .build(),
             command.getExecutable(),
+            memory,
             command.getCheckDelay()
-        )
-            .withId(command.getId().orElseThrow(IllegalArgumentException::new))
-            .withCreated(command.getCreated().orElseThrow(IllegalArgumentException::new))
-            .withUpdated(command.getUpdated().orElseThrow(IllegalArgumentException::new))
-            .withTags(tags)
-            .withConfigs(command.getConfigs())
-            .withDependencies(command.getDependencies())
-            .withMemory(memory);
+        );
 
-        command.getDescription().ifPresent(updateCommand::withDescription);
-        command.getSetupFile().ifPresent(updateCommand::withSetupFile);
-
-        this.service.updateCommand(COMMAND_1_ID, updateCommand.build());
+        this.service.updateCommand(COMMAND_1_ID, updateCommand);
 
         final Command updated = this.service.getCommand(COMMAND_1_ID);
-        Assert.assertEquals(COMMAND_2_USER, updated.getUser());
-        Assert.assertEquals(CommandStatus.INACTIVE, updated.getStatus());
-        Assert.assertEquals(7, updated.getTags().size());
+        Assert.assertEquals(COMMAND_2_USER, updated.getMetadata().getUser());
+        Assert.assertEquals(CommandStatus.INACTIVE, updated.getMetadata().getStatus());
+        Assert.assertEquals(5, updated.getMetadata().getTags().size());
         Assert.assertThat(updated.getMemory().orElse(memory + 1), Matchers.is(memory));
     }
\ No newline at end of file
