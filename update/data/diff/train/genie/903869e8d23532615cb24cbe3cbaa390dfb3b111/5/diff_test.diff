diff --git a/old_test.java b/new_test.java
index 66b7a19..6c17623 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,29 +1,35 @@
 @Test
     public void testUpdateApplication() throws GenieException {
         final Application getApp = this.appService.getApplication(APP_1_ID);
-        Assert.assertEquals(APP_1_USER, getApp.getUser());
-        Assert.assertEquals(ApplicationStatus.INACTIVE, getApp.getStatus());
-        Assert.assertEquals(3, getApp.getTags().size());
-        final Instant updateTime = getApp.getUpdated().orElseThrow(IllegalArgumentException::new);
+        Assert.assertEquals(APP_1_USER, getApp.getMetadata().getUser());
+        Assert.assertEquals(ApplicationStatus.INACTIVE, getApp.getMetadata().getStatus());
+        Assert.assertEquals(1, getApp.getMetadata().getTags().size());
+        final Instant updateTime = getApp.getUpdated();
 
         final Set<String> tags = Sets.newHashSet("prod", "tez", "yarn", "hadoop");
-        tags.addAll(getApp.getTags());
-        final Application.Builder updateApp = new Application
-            .Builder(getApp.getName(), APP_2_USER, getApp.getVersion(), ApplicationStatus.ACTIVE)
-            .withId(getApp.getId().orElseThrow(IllegalArgumentException::new))
-            .withCreated(getApp.getCreated().orElseThrow(IllegalArgumentException::new))
-            .withUpdated(getApp.getUpdated().orElseThrow(IllegalArgumentException::new))
-            .withTags(tags)
-            .withConfigs(getApp.getConfigs())
-            .withDependencies(getApp.getDependencies());
+        tags.addAll(getApp.getMetadata().getTags());
+        final Application updateApp = new Application(
+            getApp.getId(),
+            getApp.getCreated(),
+            getApp.getUpdated(),
+            getApp.getResources(),
+            new ApplicationMetadata.Builder(
+                getApp.getMetadata().getName(),
+                APP_2_USER,
+                ApplicationStatus.ACTIVE
+            )
+                .withVersion(getApp.getMetadata().getVersion().orElse(null))
+                .withDescription(getApp.getMetadata().getDescription().orElse(null))
+                .withType(getApp.getMetadata().getType().orElse(null))
+                .withTags(tags)
+                .build()
+        );
 
-        getApp.getDescription().ifPresent(updateApp::withDescription);
-        getApp.getSetupFile().ifPresent(updateApp::withSetupFile);
-        this.appService.updateApplication(APP_1_ID, updateApp.build());
+        this.appService.updateApplication(APP_1_ID, updateApp);
 
         final Application updated = this.appService.getApplication(APP_1_ID);
         Assert.assertNotEquals(updated.getUpdated(), Matchers.is(updateTime));
-        Assert.assertEquals(APP_2_USER, updated.getUser());
-        Assert.assertEquals(ApplicationStatus.ACTIVE, updated.getStatus());
-        Assert.assertEquals(6, updated.getTags().size());
+        Assert.assertEquals(APP_2_USER, updated.getMetadata().getUser());
+        Assert.assertEquals(ApplicationStatus.ACTIVE, updated.getMetadata().getStatus());
+        Assert.assertEquals(tags, updated.getMetadata().getTags());
     }
\ No newline at end of file
