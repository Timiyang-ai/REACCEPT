diff --git a/old_product.java b/new_product.java
index 63df5d2..83618f9 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,26 +1,11 @@
-public void writeToZooKeeper(ZooKeeper zk, ServerConfiguration conf, Version version)
-            throws KeeperException, InterruptedException, UnknownHostException {
-        List<ACL> zkAcls = ZkUtils.getACLs(conf);
-        String bookieCookiePath = conf.getZkLedgersRootPath() + "/"
-                + BookKeeperConstants.COOKIE_NODE;
-        String zkPath = getZkPath(conf);
-        byte[] data = toString().getBytes(UTF_8);
-        if (Version.NEW == version) {
-            if (zk.exists(bookieCookiePath, false) == null) {
-                try {
-                    zk.create(bookieCookiePath, new byte[0],
-                            zkAcls, CreateMode.PERSISTENT);
-                } catch (KeeperException.NodeExistsException nne) {
-                    LOG.info("More than one bookie tried to create {} at once. Safe to ignore",
-                            bookieCookiePath);
-                }
-            }
-            zk.create(zkPath, data,
-                    zkAcls, CreateMode.PERSISTENT);
-        } else {
-            if (!(version instanceof LongVersion)) {
-                throw new IllegalArgumentException("Invalid version type, expected ZkVersion type");
-            }
-            zk.setData(zkPath, data, (int) ((LongVersion) version).getLongVersion());
+public void writeToRegistrationManager(RegistrationManager rm, ServerConfiguration conf, Version version)
+            throws BookieException {
+        BookieSocketAddress address = null;
+        try {
+            address = Bookie.getBookieAddress(conf);
+        } catch (UnknownHostException e) {
+            throw new UnknownBookieIdException(e);
         }
+        byte[] data = toString().getBytes(UTF_8);
+        rm.writeCookie(address.toString(), new Versioned<>(data, version));
     }
\ No newline at end of file
