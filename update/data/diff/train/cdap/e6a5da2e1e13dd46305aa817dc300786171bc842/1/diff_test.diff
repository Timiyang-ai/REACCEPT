diff --git a/old_test.java b/new_test.java
index 27921e9..60df5dc 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,32 +4,32 @@
     // argument combinations that should return success
     String[][] goodArgsList = {
         { "--help" }, // print help
-
-        { "read", "--key", "cat" }, // simple key
-        { "read", "--key", "k\u00eby", "--encoding", "Latin1" }, // non-ascii
-                                                   // key with latin1 encoding
-        { "read", "--key", "636174", "--hex" }, // "cat" in hex notation
-        { "read", "--key", "6beb79", "--hex" }, // non-Ascii "këy" in hex
-                                                // notation
-        { "read", "--key", "cat", "--base",
-            "http://localhost:" + port + prefix + path }, // explicit base url
-        { "read", "--key", "cat", "--host", "localhost" }, // correct hostname
-        { "read", "--key", "cat", "--connector", name }, // valid connector name
-
-        { "list" },
-        { "list", "--url" },
-        { "list", "--hex" },
-        { "list", "--encoding", "Latin1" },
-
-        { "write", "--key", "pfunk", "--value", "the cat" },
-        { "write", "--key", "c\u00e4t", "--value",
-                "pf\u00fcnk", "--encoding", "Latin1" }, // non-Ascii cät=pfünk
-        { "write", "--key", "cafebabe", "--value", "deadbeef", "--hex" }, // hex
-
-        // delete the value just written
-        { "delete", "--key", "pfunk" },
-        { "delete", "--key", "c\u00e4t", "--encoding", "Latin1" },
-        { "delete", "--key", "cafebabe", "--hex" },
+        { "clear", "--all" }
+//        { "read", "--key", "cat" }, // simple key
+//        { "read", "--key", "k\u00eby", "--encoding", "Latin1" }, // non-ascii
+//                                                   // key with latin1 encoding
+//        { "read", "--key", "636174", "--hex" }, // "cat" in hex notation
+//        { "read", "--key", "6beb79", "--hex" }, // non-Ascii "këy" in hex
+//                                                // notation
+//        { "read", "--key", "cat", "--base",
+//            "http://localhost:" + port + prefix + path }, // explicit base url
+//        { "read", "--key", "cat", "--host", "localhost" }, // correct hostname
+//        { "read", "--key", "cat", "--connector", name }, // valid connector name
+//
+//        { "list" },
+//        { "list", "--url" },
+//        { "list", "--hex" },
+//        { "list", "--encoding", "Latin1" },
+//
+//        { "write", "--key", "pfunk", "--value", "the cat" },
+//        { "write", "--key", "c\u00e4t", "--value",
+//                "pf\u00fcnk", "--encoding", "Latin1" }, // non-Ascii cät=pfünk
+//        { "write", "--key", "cafebabe", "--value", "deadbeef", "--hex" }, // hex
+//
+//        // delete the value just written
+//        { "delete", "--key", "pfunk" },
+//        { "delete", "--key", "c\u00e4t", "--encoding", "Latin1" },
+//        { "delete", "--key", "cafebabe", "--hex" },
 
     };
 
@@ -80,17 +80,17 @@
     // test each good combination
     for (String[] args : goodArgsList) {
       LOG.info("Testing: " + Arrays.toString(args));
-      Assert.assertNotNull(new DataClient().execute(addAuth(args), configuration));
+      Assert.assertNotNull(new DataClient().disallowSSL().execute(addAuth(args), configuration));
     }
     // test each bad combination
     for (String[] args : badArgsList) {
       LOG.info("Testing: " + Arrays.toString(args));
-      Assert.assertNull(new DataClient().execute(addAuth(args), configuration));
+      Assert.assertNull(new DataClient().disallowSSL().execute(addAuth(args), configuration));
     }
     // test each good combination, but without authentication (should fail)
     for (String[] args : goodArgsList) {
       LOG.info("Testing: " + Arrays.toString(args));
-      String result = new DataClient().execute(args, configuration);
+      String result = new DataClient().disallowSSL().execute(args, configuration);
       Assert.assertTrue(result == null || result.isEmpty());
     }
   }
\ No newline at end of file
