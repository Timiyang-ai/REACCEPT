diff --git a/old_test.java b/new_test.java
index 1c23862..0aa727b 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,32 +4,32 @@
     MetaDataEntry meta = new MetaDataEntry("u", "q", "tbd", "whatever");
     meta.addField("text", "some text");
     meta.addField("binary", new byte[] { 'b', 'i', 'n' });
-    mds.add(meta);
+    mds.add(context, meta);
 
     // verify it was written
-    Assert.assertEquals(meta, mds.get("u", "q", "tbd", "whatever"));
+    Assert.assertEquals(meta, mds.get(context, "u", "q", "tbd", "whatever"));
 
     // delete it
-    mds.delete("u", "q", "tbd", "whatever");
+    mds.delete(context, "u", "q", "tbd", "whatever");
 
     // verify it's gone
-    Assert.assertNull(mds.get("u", "q", "tbd", "whatever"));
-    Assert.assertFalse(mds.list("u", null, "tbd", null).contains(meta));
+    Assert.assertNull(mds.get(context, "u", "q", "tbd", "whatever"));
+    Assert.assertFalse(mds.list(context, "u", null, "tbd", null).contains(meta));
 
     // add another entry with same name and type
     MetaDataEntry meta1 = new MetaDataEntry("u", "q", "tbd", "whatever");
     meta1.addField("other", "other text");
     // add should succeed, update should fail
     try {
-      mds.update(meta1);
+      mds.update(context, meta1);
       Assert.fail("update should fail");
     } catch (MetaDataException e) {
       //expected
     }
-    mds.add(meta1);
+    mds.add(context, meta1);
 
     // read back entry and verify that it does not contain spurious
     // fields from the old meta data entry
     // verify it was written
-    Assert.assertEquals(meta1, mds.get("u", "q", "tbd", "whatever"));
+    Assert.assertEquals(meta1, mds.get(context, "u", "q", "tbd", "whatever"));
   }
\ No newline at end of file
