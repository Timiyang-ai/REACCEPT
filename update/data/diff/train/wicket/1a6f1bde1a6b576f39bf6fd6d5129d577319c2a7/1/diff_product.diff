diff --git a/old_product.java b/new_product.java
index b8703fd..0affccd 100644
--- a/old_product.java
+++ b/new_product.java
@@ -5,11 +5,24 @@ protected final CharSequence renderAjaxAttributes(final Component component,
 
 		try
 		{
+			String formId = attributes.getFormId();
+			if (Strings.isEmpty(formId) == false)
+			{
+				attributesJson.put(AjaxAttributeName.FORM_ID.jsonName(), formId);
+			}
 			attributesJson.put(AjaxAttributeName.URL.jsonName(), getCallbackUrl());
-			Method method = attributes.getMethod();
-			if (Method.POST == method)
+
+			String[] eventNames = attributes.getEventNames();
+			if (eventNames.length == 1)
 			{
-				attributesJson.put(AjaxAttributeName.METHOD.jsonName(), method);
+				attributesJson.put(AjaxAttributeName.EVENT_NAME.jsonName(), eventNames[0]);
+			}
+			else
+			{
+				for (String eventName : eventNames)
+				{
+					attributesJson.append(AjaxAttributeName.EVENT_NAME.jsonName(), eventName);
+				}
 			}
 
 			if (component instanceof Page == false)
@@ -18,12 +31,6 @@ protected final CharSequence renderAjaxAttributes(final Component component,
 				attributesJson.put(AjaxAttributeName.MARKUP_ID.jsonName(), componentId);
 			}
 
-			String formId = attributes.getFormId();
-			if (Strings.isEmpty(formId) == false)
-			{
-				attributesJson.put(AjaxAttributeName.FORM_ID.jsonName(), formId);
-			}
-
 			if (attributes.isMultipart())
 			{
 				attributesJson.put(AjaxAttributeName.IS_MULTIPART.jsonName(), true);
@@ -39,8 +46,7 @@ protected final CharSequence renderAjaxAttributes(final Component component,
 			CharSequence childSelector = attributes.getChildSelector();
 			if (Strings.isEmpty(childSelector) == false)
 			{
-				attributesJson.put(AjaxAttributeName.CHILD_SELECTOR.jsonName(),
-						childSelector);
+				attributesJson.put(AjaxAttributeName.CHILD_SELECTOR.jsonName(), childSelector);
 			}
 
 			String indicatorId = findIndicatorId();
@@ -113,19 +119,6 @@ protected final CharSequence renderAjaxAttributes(final Component component,
 				attributesJson.put(AjaxAttributeName.IS_ASYNC.jsonName(), false);
 			}
 
-			String[] eventNames = attributes.getEventNames();
-			if (eventNames.length == 1)
-			{
-				attributesJson.put(AjaxAttributeName.EVENT_NAME.jsonName(), eventNames[0]);
-			}
-			else
-			{
-				for (String eventName : eventNames)
-				{
-					attributesJson.append(AjaxAttributeName.EVENT_NAME.jsonName(), eventName);
-				}
-			}
-
 			AjaxChannel channel = attributes.getChannel();
 			if (channel != null && channel.equals(AjaxChannel.DEFAULT) == false)
 			{
@@ -137,6 +130,12 @@ protected final CharSequence renderAjaxAttributes(final Component component,
 				attributesJson.put(AjaxAttributeName.IS_ALLOW_DEFAULT.jsonName(), true);
 			}
 
+			Method method = attributes.getMethod();
+			if (Method.POST == method)
+			{
+				attributesJson.put(AjaxAttributeName.METHOD.jsonName(), method);
+			}
+
 			if (AjaxRequestAttributes.EventPropagation.BUBBLE.equals(attributes.getEventPropagation()))
 			{
 				attributesJson.put(AjaxAttributeName.EVENT_PROPAGATION.jsonName(), "bubble");
