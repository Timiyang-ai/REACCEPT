diff --git a/old_product.java b/new_product.java
index b588f7b..9b75367 100644
--- a/old_product.java
+++ b/new_product.java
@@ -73,27 +73,33 @@ public void validate(Object obj, Errors errors) throws APIException, DuplicateCo
 						errors.reject("Concept.error.multipleShortNames");
 					}
 				}
-				if (nameInLocale.isLocalePreferred() || nameInLocale.isFullySpecifiedName()) {
-					List<Concept> conceptsWithPossibleDuplicateNames = Context.getConceptService().getConceptsByName(
-					    nameInLocale.getName());
-					if (conceptsWithPossibleDuplicateNames.size() > 0) {
-						for (Concept concept : conceptsWithPossibleDuplicateNames) {
-							//skip past the concept being edited and retired ones
-							if (concept.isRetired()
-							        || (conceptToValidate.getConceptId() != null && conceptToValidate.getConceptId().equals(
-							            concept.getConceptId())))
-								continue;
-							//should be a unique name amongst all preferred and fully specified names in its locale system wide
-							if ((concept.getFullySpecifiedName(conceptNameLocale) != null && concept.getFullySpecifiedName(
-							    conceptNameLocale).getName().equalsIgnoreCase(nameInLocale.getName()))
-							        || (concept.getPreferredName(conceptNameLocale) != null && concept.getPreferredName(
-							            conceptNameLocale).getName().equalsIgnoreCase(nameInLocale.getName()))) {
-								throw new DuplicateConceptNameException("'" + nameInLocale.getName()
-								        + "' is a duplicate name in locale '" + conceptNameLocale.toString() + "'");
+				
+				//find duplicate names for a non-retired concept
+				if (!conceptToValidate.isRetired()) {
+					if (nameInLocale.isLocalePreferred() || nameInLocale.isFullySpecifiedName()) {
+						List<Concept> conceptsWithPossibleDuplicateNames = Context.getConceptService().getConceptsByName(
+						    nameInLocale.getName());
+						if (conceptsWithPossibleDuplicateNames.size() > 0) {
+							for (Concept concept : conceptsWithPossibleDuplicateNames) {
+								//skip past the concept being edited and retired ones
+								if (concept.isRetired()
+								        || (conceptToValidate.getConceptId() != null && conceptToValidate.getConceptId()
+								                .equals(concept.getConceptId())))
+									continue;
+								//should be a unique name amongst all preferred and fully specified names in its locale system wide
+								if ((concept.getFullySpecifiedName(conceptNameLocale) != null && concept
+								        .getFullySpecifiedName(conceptNameLocale).getName().equalsIgnoreCase(
+								            nameInLocale.getName()))
+								        || (concept.getPreferredName(conceptNameLocale) != null && concept.getPreferredName(
+								            conceptNameLocale).getName().equalsIgnoreCase(nameInLocale.getName()))) {
+									throw new DuplicateConceptNameException("'" + nameInLocale.getName()
+									        + "' is a duplicate name in locale '" + conceptNameLocale.toString() + "'");
+								}
 							}
 						}
 					}
 				}
+				
 				//
 				if (errors.hasErrors()) {
 					log.debug("Concept name '" + nameInLocale.getName() + "' for locale '" + conceptNameLocale
