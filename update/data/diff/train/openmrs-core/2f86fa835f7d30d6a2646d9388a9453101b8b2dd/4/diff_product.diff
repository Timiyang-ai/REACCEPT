diff --git a/old_product.java b/new_product.java
index 4b46b97..c00f384 100644
--- a/old_product.java
+++ b/new_product.java
@@ -77,15 +77,22 @@ public void validate(Object obj, Errors errors) throws APIException, DuplicateCo
 				//find duplicate names for a non-retired concept
 				if (!conceptToValidate.isRetired()) {
 					if (nameInLocale.isLocalePreferred() || nameInLocale.isFullySpecifiedName()) {
+						//must be unique among all country specific locals
+						Locale languageLocale = new Locale(nameInLocale.getLocale().getLanguage());
+						
 						List<Concept> conceptsWithPossibleDuplicateNames = Context.getConceptService().getConceptsByName(
-						    nameInLocale.getName());
+						    nameInLocale.getName(), languageLocale);
 						if (conceptsWithPossibleDuplicateNames.size() > 0) {
 							for (Concept concept : conceptsWithPossibleDuplicateNames) {
-								//skip past the concept being edited and retired ones
-								if (concept.isRetired()
-								        || (conceptToValidate.getConceptId() != null && conceptToValidate.getConceptId()
-								                .equals(concept.getConceptId())))
+								//skip retired
+								if (concept.isRetired())
+									continue;
+								
+								//skip same
+								if (conceptToValidate.getConceptId() != null
+								        && conceptToValidate.getConceptId().equals(concept.getConceptId()))
 									continue;
+								
 								//should be a unique name amongst all preferred and fully specified names in its locale system wide
 								if ((concept.getFullySpecifiedName(conceptNameLocale) != null && concept
 								        .getFullySpecifiedName(conceptNameLocale).getName().equalsIgnoreCase(
@@ -156,7 +163,7 @@ public void validate(Object obj, Errors errors) throws APIException, DuplicateCo
 					    "The concept map type is required for a concept map");
 					return;
 				}*/
-
+				
 				//don't proceed to the next maps since the current one already has errors
 				if (errors.hasErrors())
 					return;
