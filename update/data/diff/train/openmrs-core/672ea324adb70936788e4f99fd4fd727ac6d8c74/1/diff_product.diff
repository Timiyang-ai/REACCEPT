diff --git a/old_product.java b/new_product.java
index 752ca57..a87231f 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,7 @@
 public void validate(Object obj, Errors errors) {
 		Order order = (Order) obj;
 		if (order == null) {
-			errors.rejectValue("order", "error.general");
+			errors.reject("error.general");
 		} else {
 			if (order.getEncounter() != null && order.getPatient() != null) {
 				if (!order.getEncounter().getPatient().equals(order.getPatient()))
@@ -13,6 +13,7 @@ public void validate(Object obj, Errors errors) {
 			ValidationUtils.rejectIfEmpty(errors, "voided", "error.null");
 			ValidationUtils.rejectIfEmpty(errors, "concept", "Concept.noConceptSelected");
 			ValidationUtils.rejectIfEmpty(errors, "patient", "error.null");
+			ValidationUtils.rejectIfEmptyOrWhitespace(errors, "orderNumber", "error.null");
 			
 			Date startDate = order.getStartDate();
 			if (startDate != null) {
@@ -34,14 +35,27 @@ public void validate(Object obj, Errors errors) {
 			} else if (order.getDiscontinued()) {
 				ValidationUtils.rejectIfEmpty(errors, "discontinuedDate", "Order.error.discontinueNeedsDateAndPerson");
 				ValidationUtils.rejectIfEmpty(errors, "discontinuedBy", "Order.error.discontinueNeedsDateAndPerson");
+				ValidationUtils
+				        .rejectIfEmptyOrWhitespace(errors, "discontinuedReason", "Order.error.discontinueNeedsReason");
 				if (order.getDiscontinuedDate() != null) {
 					// must be <= now(), and <= autoExpireDate
 					if (OpenmrsUtil.compare(order.getDiscontinuedDate(), new Date()) > 0)
 						errors.rejectValue("discontinuedDate", "Order.error.discontinuedDateInFuture");
 					if (order.getAutoExpireDate() != null
-					        && OpenmrsUtil.compare(order.getDiscontinuedDate(), order.getAutoExpireDate()) > 0)
+					        && OpenmrsUtil.compare(order.getDiscontinuedDate(), order.getAutoExpireDate()) > 0) {
+						errors.rejectValue("autoExpireDate", "Order.error.discontinuedAfterAutoExpireDate");
 						errors.rejectValue("discontinuedDate", "Order.error.discontinuedAfterAutoExpireDate");
+					}
 				}
+			} else if (!order.getDiscontinued()) {
+				if (order.getDiscontinuedDate() != null)
+					errors.rejectValue("discontinuedDate", "Order.error.notDiscontinuedShouldHaveNoDate");
+				
+				if (order.getDiscontinuedBy() != null)
+					errors.rejectValue("discontinuedBy", "Order.error.notDiscontinuedShouldHaveNoBy");
+				
+				if (order.getDiscontinuedReason() != null)
+					errors.rejectValue("discontinuedReason", "Order.error.notDiscontinuedShouldHaveNoReason");
 			}
 		}
 	}
\ No newline at end of file
