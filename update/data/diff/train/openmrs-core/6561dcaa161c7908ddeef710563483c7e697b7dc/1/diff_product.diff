diff --git a/old_product.java b/new_product.java
index 4a2ad06..f1fa120 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,23 +2,33 @@ public Order saveOrder(Order order, OrderContext orderContext) throws APIExcepti
 		if (order.getOrderId() != null) {
 			throw new APIException("Cannot edit an existing order, you need to revise it instead");
 		}
-		
+		if (order.getStartDate() == null) {
+			order.setStartDate(new Date());
+		}
+		Order prevOrder = order.getPreviousOrder();
 		if (order.getOrderType() == null) {
-			OrderType orderType = getOrderTypeByConcept(order.getConcept());
-			if (orderType == null && orderContext != null) {
+			OrderType orderType = null;
+			if (orderContext != null) {
 				orderType = orderContext.getOrderType();
 			}
 			if (orderType == null) {
-				throw new APIException("No order type matches the concept class");
+				orderType = getOrderTypeByConcept(order.getConcept());
+			}
+			//this order's order type should match that of the previous
+			if (orderType == null || (prevOrder != null && !orderType.equals(prevOrder.getOrderType()))) {
+				throw new APIException("Cannot determine the order type of the order");
 			}
 			order.setOrderType(orderType);
 		}
 		if (order.getCareSetting() == null) {
-			if (orderContext != null && orderContext.getCareSetting() != null) {
-				order.setCareSetting(orderContext.getCareSetting());
-			} else {
-				throw new APIException("CareSetting is required for an order");
+			CareSetting careSetting = null;
+			if (orderContext != null) {
+				careSetting = orderContext.getCareSetting();
+			}
+			if (careSetting == null || (prevOrder != null && !careSetting.equals(prevOrder.getCareSetting()))) {
+				throw new APIException("Cannot determine the care setting of the order");
 			}
+			order.setCareSetting(careSetting);
 		}
 		
 		if (Order.Action.REVISE.equals(order.getAction())) {
@@ -58,13 +68,19 @@ public Order saveOrder(Order order, OrderContext orderContext) throws APIExcepti
 			boolean isDrugOrderAndHasADrug = DrugOrder.class.isAssignableFrom(order.getClass())
 			        && ((DrugOrder) order).getDrug() != null;
 			if (!order.getConcept().equals(previousOrder.getConcept())) {
-				throw new APIException("The concept of the previous order and the new revised order don't match");
+				throw new APIException("The concept of the previous order and the new one order don't match");
 			} else if (isDrugOrderAndHasADrug) {
 				DrugOrder drugOrder1 = (DrugOrder) order;
 				DrugOrder drugOrder2 = (DrugOrder) previousOrder;
 				if (!OpenmrsUtil.nullSafeEquals(drugOrder1.getDrug(), drugOrder2.getDrug())) {
-					throw new APIException("The drug of the previous order and the new revised order don't match");
+					throw new APIException("The drug of the previous order and the new one order don't match");
 				}
+			} else if (!order.getOrderType().equals(previousOrder.getOrderType())) {
+				throw new APIException("The order type does not match that of the previous order");
+			} else if (!order.getCareSetting().equals(previousOrder.getCareSetting())) {
+				throw new APIException("The care setting does not match that of the previous order");
+			} else if (!order.getClass().equals(previousOrder.getClass())) {
+				throw new APIException("The class does not match that of the previous order");
 			}
 		}
 		
