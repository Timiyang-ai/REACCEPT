diff --git a/old_test.java b/new_test.java
index 453518a..967aff3 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,18 +1,15 @@
 @Test
-	@Verifies(value = "should return orders with the given concept", method = "getOrderHistoryByConcept(Patient,Concept)")
-	public void getOrderHistoryByConcept_shouldReturnOrdersWithTheGivenConcept() throws Exception {
-		//We should have two orders with this concept.
-		Concept concept = Context.getConceptService().getConcept(88);
-		Patient patient = Context.getPatientService().getPatient(2);
-		List<Order> orders = Context.getOrderService().getOrderHistoryByConcept(patient, concept);
-		Assert.assertEquals(2, orders.size());
-		for (Order order : orders)
-			Assert.assertTrue(order.getOrderId() == 4 || order.getOrderId() == 5);
+	@Verifies(value = "when saving a discontinuedReasonNonCoded parameter the value is correctly stored to the database", method = "saveOrder(Order)")
+	public void saveOrder_shouldSaveDiscontinuedReasonNonCoded() throws Exception {
+		String uuid = "921de0a3-05c4-444a-be03-e01b4c4b9142";
+		Order order = Context.getOrderService().getOrderByUuid(uuid);
+		String discontinuedReasonNonCoded = "Non coded discontinued reason";
 		
-		//We should two different orders with this concept
-		concept = Context.getConceptService().getConcept(792);
-		orders = Context.getOrderService().getOrderHistoryByConcept(patient, concept);
-		Assert.assertEquals(2, orders.size());
-		for (Order order : orders)
-			Assert.assertTrue(order.getOrderId() == 2 || order.getOrderId() == 3);
+		order.setDiscontinuedReasonNonCoded(discontinuedReasonNonCoded);
+		OrderService orderService = Context.getOrderService();
+		orderService.saveOrder(order);
+		
+		order = Context.getOrderService().getOrderByUuid(uuid);
+		
+		Assert.assertEquals(discontinuedReasonNonCoded, order.getDiscontinuedReasonNonCoded());
 	}
\ No newline at end of file
