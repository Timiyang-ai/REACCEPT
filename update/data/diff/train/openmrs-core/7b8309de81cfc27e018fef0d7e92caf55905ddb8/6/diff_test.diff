diff --git a/old_test.java b/new_test.java
index 5167fee..9b2ef80 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,29 +1,14 @@
 @Test
-	@Verifies(value = "should discontinue and return the old order", method = "discontinueOrder(Order,String,User,Date)")
-	public void discontinueOrder_shouldDiscontinueAndReturnTheOldOrder() throws Exception {
-		int originalCount = service.getOrders(Order.class, null, null, null, null, null, null, null).size();
-		Order order = service.getOrder(3);
+	@Verifies(value = "should set autoExpireDate if the discontinue date is in future", method = "discontinueOrder(Order order, Concept discontinueReason, Date discontinueDate)")
+	public void discontinueOrder_shouldSetAutoExpireDateIfTheDiscontinueDateIsInFuture() throws Exception {
+		String uuid = "921de0a3-05c4-444a-be03-e01b4c4b9142";
+		Order order = Context.getOrderService().getOrderByUuid(uuid);
+		Concept discontinudReason = Context.getConceptService().getConcept(1107);
+		Calendar cal = Calendar.getInstance();
+		cal.add(Calendar.DATE, 10);
+		Date autoExpireDate = cal.getTime();
+		Order updatedOrder = Context.getOrderService().discontinueOrder(order, discontinudReason, autoExpireDate);
 		
-		Assert.assertFalse(order.getDiscontinued());
-		Assert.assertNull(order.getDiscontinuedDate());
-		Assert.assertNull(order.getDiscontinuedBy());
-		Assert.assertNull(order.getDiscontinuedReason());
-		Order returnedOrder = service.discontinueOrder(order, "Testing");
-		Assert.assertEquals(order, returnedOrder);
-		Assert.assertTrue(order.getDiscontinued());
-		Assert.assertEquals("Testing", returnedOrder.getDiscontinuedReason());
-		Assert.assertNotNull(returnedOrder.getDiscontinuedDate());
-		Assert.assertNotNull(returnedOrder.getDiscontinuedBy());
-		//should have created a discontinue order
-		Assert.assertEquals(originalCount + 1, service.getOrders(Order.class, null, null, null, null, null, null, null)
-		        .size());
-		//find the newly created order and make ensure that its action is DISCONTINUE
-		Order discontinueOrder = null;
-		for (Order o : service.getOrders(Order.class, null, null, null, null, null, null, null)) {
-			if (OpenmrsUtil.nullSafeEquals(o.getPreviousOrderNumber(), order.getOrderNumber()))
-				discontinueOrder = o;
-		}
+		Assert.assertEquals(autoExpireDate, updatedOrder.getAutoExpireDate());
 		
-		Assert.assertNotNull(discontinueOrder);
-		Assert.assertEquals(OrderAction.DISCONTINUE, discontinueOrder.getOrderAction());
 	}
\ No newline at end of file
