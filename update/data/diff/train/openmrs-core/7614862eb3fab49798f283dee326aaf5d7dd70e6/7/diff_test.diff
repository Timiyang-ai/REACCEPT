diff --git a/old_test.java b/new_test.java
index 224488a..d7c66ef 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,20 +1,15 @@
 @Test
-	@Verifies(value = "should only allow one preferred name", method = "setPreferredName(Locale,ConceptName)")
+	@Verifies(value = "should only allow one preferred name", method = "setPreferredName(ConceptName)")
 	public void setPreferredName_shouldOnlyAllowOnePreferredName() throws Exception {
 		Locale primaryLocale = Locale.US;
 		Concept testConcept = createMockConcept(1, primaryLocale);
-		ConceptNameTag preferredTag = ConceptNameTag.preferredCountryTagFor(primaryLocale);
 		
-		ConceptName initialPreferred = testConcept.getPreferredName(primaryLocale);
-		ConceptName expectedPreferred = ConceptNameTest.createMockConceptName(initialPreferred.getConceptNameId() + 10,
-		    primaryLocale);
-		testConcept.setPreferredName(primaryLocale, expectedPreferred);
+		ConceptName initialPreferred = ConceptNameTest.createMockConceptName(3, primaryLocale, null, true);
+		testConcept.addName(initialPreferred);
+		Assert.assertEquals(true, initialPreferred.isLocalePreferred());
+		ConceptName newPreferredName = ConceptNameTest.createMockConceptName(4, primaryLocale, null, false);
+		testConcept.setPreferredName(newPreferredName);
 		
-		ConceptName actualPreferred = testConcept.getPreferredName(primaryLocale);
-		
-		assertNotSame(initialPreferred, actualPreferred);
-		assertSame(expectedPreferred, actualPreferred);
-		
-		assertFalse(initialPreferred.hasTag(preferredTag));
-		assertTrue(expectedPreferred.hasTag(preferredTag));
+		assertEquals(false, initialPreferred.isLocalePreferred());
+		assertEquals(true, newPreferredName.isLocalePreferred());
 	}
\ No newline at end of file
