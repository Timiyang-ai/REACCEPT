diff --git a/old_product.java b/new_product.java
index 5a800c2..9f8f36b 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,9 +1,10 @@
-@SuppressWarnings( { "rawtypes" })
+@SuppressWarnings({ "rawtypes" })
 	@Override
 	public List<ConceptSearchResult> getConcepts(String phrase, List<Locale> locales, boolean includeRetired,
-	        List<ConceptClass> requireClasses, List<ConceptClass> excludeClasses, List<ConceptDatatype> requireDatatypes,
-	        List<ConceptDatatype> excludeDatatypes, Concept answersToConcept, Integer start, Integer size)
-	        throws DAOException {
+	                                             List<ConceptClass> requireClasses, List<ConceptClass> excludeClasses,
+	                                             List<ConceptDatatype> requireDatatypes,
+	                                             List<ConceptDatatype> excludeDatatypes, Concept answersToConcept,
+	                                             Integer start, Integer size) throws DAOException {
 		if (StringUtils.isBlank(phrase)) {
 			phrase = "%"; // match all
 		}
@@ -15,12 +16,15 @@
 		
 		if (searchCriteria != null) {
 			ProjectionList pl = Projections.projectionList();
-			pl.add(Projections.property("cw1.concept"));
-			//this will result in duplicate concepts if two concept names for the same concept match the phrase
-			pl.add(Projections.groupProperty("cw1.conceptName"));
-			pl.add(Projections.property("cw1.word"));
+			pl.add(Projections.distinct(Projections.groupProperty("cw1.concept")));
+			pl.add(Projections.groupProperty("cw1.word"));
 			//if we have multiple words for the same concept, get the one with a highest weight
 			pl.add(Projections.max("cw1.weight"), "maxWeight");
+			//TODO In case a concept has multiple names that contains words that match the search phrase, 
+			//setting this to min or max will select the concept name that was added first or last,
+			//but it should actually be the one that contains the word with the highest weight.
+			//see ConceptServiceTest.getConcepts_shouldReturnASearchResultWhoseConceptNameContainsAWordWithMoreWeight()
+			pl.add(Projections.min("cw1.conceptName"));
 			searchCriteria.setProjection(pl);
 			searchCriteria.addOrder(Order.desc("maxWeight"));
 			
@@ -34,12 +38,8 @@
 			
 			for (Object obj : resultObjects) {
 				List list = (List) obj;
-				Concept c = (Concept) list.get(0);
-				ConceptSearchResult csr = (new ConceptSearchResult((String) list.get(2), c, (ConceptName) list.get(1),
-				        (Double) list.get(3)));
-				if (!results.contains(csr)) {
-					results.add(csr);
-				}
+				results.add(new ConceptSearchResult((String) list.get(1), (Concept) list.get(0), (ConceptName) list.get(3),
+				        (Double) list.get(2)));
 			}
 		}
 		
