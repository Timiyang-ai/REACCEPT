diff --git a/old_test.java b/new_test.java
index b23caae..07659b0 100644
--- a/old_test.java
+++ b/new_test.java
@@ -8,23 +8,23 @@
 		
 		Encounter testEncounter = es.getEncountersByPatient(patient).get(0);
 		//santy checks
-		Assert.assertFalse(testEncounter.getVoided());
-		Assert.assertNull(testEncounter.getDateVoided());
-		Assert.assertNull(testEncounter.getVoidedBy());
-		Assert.assertNull(testEncounter.getVoidReason());
+		assertFalse(testEncounter.getVoided());
+		assertNull(testEncounter.getDateVoided());
+		assertNull(testEncounter.getVoidedBy());
+		assertNull(testEncounter.getVoidReason());
 		
 		//void one of the encounter orders be voided at a different time for testing purposes
-		Assert.assertFalse(testEncounter.getOrders().isEmpty());
+		assertFalse(testEncounter.getOrders().isEmpty());
 		Order testOrder = testEncounter.getOrders().iterator().next();
-		Assert.assertFalse(testOrder.getVoided());
+		assertFalse(testOrder.getVoided());
 		Context.getOrderService().voidOrder(testOrder, "testing");
-		Assert.assertTrue(testOrder.getVoided());
+		assertTrue(testOrder.getVoided());
 		TestUtil.waitForClockTick();
 		
 		//void one of the unvoided encounters for testing purposes
 		es.voidEncounter(testEncounter, "random reason");
-		Assert.assertTrue(testEncounter.getVoided());
-		Assert.assertTrue(testOrder.getVoided());
+		assertTrue(testEncounter.getVoided());
+		assertTrue(testOrder.getVoided());
 		
 		List<Patient> patients = new ArrayList<>();
 		patients.add(patient);
@@ -34,19 +34,19 @@
 		
 		//now void the patient for testing purposes
 		patient = Context.getPatientService().voidPatient(patient, "Void Reason");
-		Assert.assertTrue(patient.getVoided());
+		assertTrue(patient.getVoided());
 		new PatientDataUnvoidHandler().handle(patient, patient.getVoidedBy(), patient.getDateVoided(), null);
 		//the encounter that was initially voided separately should still be voided
 		testEncounter = es.getEncounter(testEncounter.getId());
-		Assert.assertTrue(testEncounter.getVoided());
-		Assert.assertNotNull(testEncounter.getDateVoided());
-		Assert.assertNotNull(testEncounter.getVoidedBy());
-		Assert.assertNotNull(testEncounter.getVoidReason());
+		assertTrue(testEncounter.getVoided());
+		assertNotNull(testEncounter.getDateVoided());
+		assertNotNull(testEncounter.getVoidedBy());
+		assertNotNull(testEncounter.getVoidReason());
 		
 		//the order that was initially voided separately should still be voided
-		Assert.assertTrue(testOrder.getVoided());
-		Assert.assertNotNull(testOrder.getDateVoided());
-		Assert.assertNotNull(testOrder.getVoidedBy());
-		Assert.assertNotNull(testOrder.getVoidReason());
+		assertTrue(testOrder.getVoided());
+		assertNotNull(testOrder.getDateVoided());
+		assertNotNull(testOrder.getVoidedBy());
+		assertNotNull(testOrder.getVoidReason());
 		
 	}
\ No newline at end of file
