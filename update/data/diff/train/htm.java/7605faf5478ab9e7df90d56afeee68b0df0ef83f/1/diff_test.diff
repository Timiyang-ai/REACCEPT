diff --git a/old_test.java b/new_test.java
index b452835..925a729 100644
--- a/old_test.java
+++ b/new_test.java
@@ -7,7 +7,7 @@
         initSP();
         
         ////////////////////// Test not part of Python port /////////////////////
-        int[] result = SpatialPooler.getNeighborsND(mem, 2, 3, true).toArray();
+        int[] result = sp.getNeighborsND(mem, 2, 3, true).toArray();
         int[] expected = new int[] { 
             0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
             13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 
@@ -28,7 +28,7 @@
         int y = 3;
         int z = 2;
         int columnIndex = mem.getInputMatrix().computeIndex(new int[] { z, y, x });
-        int[] neighbors = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        int[] neighbors = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         String expect = "[18, 19, 20, 21, 22, 23, 32, 33, 34, 36, 37, 46, 47, 48, 49, 50, 51]";
         assertEquals(expect, ArrayUtils.print1DArray(neighbors));
         
@@ -44,7 +44,7 @@
         y = 0;
         z = 3;
         columnIndex = mem.getInputMatrix().computeIndex(new int[] { z, y, x });
-        neighbors = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        neighbors = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         expect = "[0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, "
                 + "27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, "
                 + "52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, "
@@ -75,7 +75,7 @@
         y = 6;
         z = 2;
         columnIndex = mem.getInputMatrix().computeIndex(new int[] { z, y, x, w });
-        neighbors = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        neighbors = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         
         TIntHashSet trueNeighbors = new TIntHashSet();
         for(int i = -radius;i <= radius;i++) {
@@ -105,7 +105,7 @@
         sbm.set(new int[] { 2, 4 }, new int[] { 1, 1 });
         radius = 1;
         columnIndex = 3;
-        int[] mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        int[] mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         TIntArrayList msk = new TIntArrayList(mask);
         TIntArrayList neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -121,7 +121,7 @@
         sbm.set(new int[] { 1, 2, 4, 5 }, new int[] { 1, 1, 1, 1 });
         radius = 2;
         columnIndex = 3;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -137,7 +137,7 @@
         sbm.set(new int[] { 1, 2, 6, 7 }, new int[] { 1, 1, 1, 1 });
         radius = 2;
         columnIndex = 0;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -153,7 +153,7 @@
         sbm.set(new int[] { 0, 1, 2, 3, 4, 5, 7 }, new int[] { 1, 1, 1, 1, 1, 1, 1 });
         radius = 20;
         columnIndex = 6;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -181,7 +181,7 @@
         }
         radius = 1;
         columnIndex = 3*5 + 2;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -209,7 +209,7 @@
         }
         radius = 2;
         columnIndex = 3*5 + 2;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -237,7 +237,7 @@
         }
         radius = 7;
         columnIndex = 3*5 + 2;
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
@@ -265,7 +265,7 @@
         }
         radius = 1;
         columnIndex = sbm.getMaxIndex();
-        mask = SpatialPooler.getNeighborsND(mem, columnIndex, radius, true).toArray();
+        mask = sp.getNeighborsND(mem, columnIndex, radius, true).toArray();
         msk = new TIntArrayList(mask);
         neg = new TIntArrayList(ArrayUtils.range(0, dimensions[0]));
         neg.removeAll(msk);
