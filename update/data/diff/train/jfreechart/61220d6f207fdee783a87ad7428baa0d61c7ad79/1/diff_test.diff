diff --git a/old_test.java b/new_test.java
index a5e7925..b3f875b 100644
--- a/old_test.java
+++ b/new_test.java
@@ -6,12 +6,6 @@
         assertTrue(r1.equals(r2));
         assertTrue(r2.equals(r1));
 
-        // seriesVisible
-        r1.setSeriesVisible(Boolean.TRUE);
-        assertFalse(r1.equals(r2));
-        r2.setSeriesVisible(Boolean.TRUE);
-        assertTrue(r1.equals(r2));
-
         // seriesVisibleList
         r1.setSeriesVisible(2, Boolean.TRUE);
         assertFalse(r1.equals(r2));
@@ -24,12 +18,6 @@
         r2.setBaseSeriesVisible(false);
         assertTrue(r1.equals(r2));
 
-        // seriesVisibleInLegend
-        r1.setSeriesVisibleInLegend(Boolean.TRUE);
-        assertFalse(r1.equals(r2));
-        r2.setSeriesVisibleInLegend(Boolean.TRUE);
-        assertTrue(r1.equals(r2));
-
         // seriesVisibleInLegendList
         r1.setSeriesVisibleInLegend(1, Boolean.TRUE);
         assertFalse(r1.equals(r2));
@@ -42,14 +30,6 @@
         r2.setBaseSeriesVisibleInLegend(false);
         assertTrue(r1.equals(r2));
 
-        // paint
-        r1.setPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertFalse(r1.equals(r2));
-        r2.setPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertTrue(r1.equals(r2));
-
         // paintList
         r1.setSeriesPaint(0, new GradientPaint(1.0f, 2.0f, Color.RED,
                 3.0f, 4.0f, Color.WHITE));
@@ -66,14 +46,6 @@
                 3.0f, 4.0f, Color.RED));
         assertTrue(r1.equals(r2));
 
-        // fillPaint
-        r1.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertFalse(r1.equals(r2));
-        r2.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertTrue(r1.equals(r2));
-
         // fillPaintList
         r1.setSeriesFillPaint(0, new GradientPaint(1.0f, 2.0f, Color.BLUE,
                 3.0f, 4.0f, Color.RED));
@@ -90,14 +62,6 @@
                 3.0f, 4.0f, Color.RED));
         assertTrue(r1.equals(r2));
 
-        // outlinePaint
-        r1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertFalse(r1.equals(r2));
-        r2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
-                3.0f, 4.0f, Color.RED));
-        assertTrue(r1.equals(r2));
-
         // outlinePaintList
         r1.setSeriesOutlinePaint(0, new GradientPaint(1.0f, 2.0f, Color.BLUE,
                 3.0f, 4.0f, Color.RED));
@@ -116,10 +80,6 @@
 
         // stroke
         Stroke s = new BasicStroke(3.21f);
-        r1.setStroke(s);
-        assertFalse(r1.equals(r2));
-        r2.setStroke(s);
-        assertTrue(r1.equals(r2));
 
         // strokeList
         r1.setSeriesStroke(1, s);
@@ -133,12 +93,6 @@
         r2.setBaseStroke(s);
         assertTrue(r1.equals(r2));
 
-        // outlineStroke
-        r1.setOutlineStroke(s);
-        assertFalse(r1.equals(r2));
-        r2.setOutlineStroke(s);
-        assertTrue(r1.equals(r2));
-
         // outlineStrokeList
         r1.setSeriesOutlineStroke(0, s);
         assertFalse(r1.equals(r2));
@@ -151,12 +105,6 @@
         r2.setBaseOutlineStroke(s);
         assertTrue(r1.equals(r2));
 
-        // shape
-        r1.setShape(new Ellipse2D.Double(1, 2, 3, 4));
-        assertFalse(r1.equals(r2));
-        r2.setShape(new Ellipse2D.Double(1, 2, 3, 4));
-        assertTrue(r1.equals(r2));
-
         // shapeList
         r1.setSeriesShape(1, new Ellipse2D.Double(1, 2, 3, 4));
         assertFalse(r1.equals(r2));
@@ -169,12 +117,6 @@
         r2.setBaseShape(new Ellipse2D.Double(1, 2, 3, 4));
         assertTrue(r1.equals(r2));
 
-        // itemLabelsVisible
-        r1.setItemLabelsVisible(true);
-        assertFalse(r1.equals(r2));
-        r2.setItemLabelsVisible(true);
-        assertTrue(r1.equals(r2));
-
         // itemLabelsVisibleList
         r1.setSeriesItemLabelsVisible(1, Boolean.TRUE);
         assertFalse(r1.equals(r2));
@@ -187,12 +129,6 @@
         r2.setBaseItemLabelsVisible(true);
         assertTrue(r1.equals(r2));
 
-        // itemLabelFont
-        r1.setItemLabelFont(new Font("Serif", Font.PLAIN, 10));
-        assertFalse(r1.equals(r2));
-        r2.setItemLabelFont(new Font("Serif", Font.PLAIN, 10));
-        assertTrue(r1.equals(r2));
-
         // itemLabelFontList
         r1.setSeriesItemLabelFont(1, new Font("Serif", Font.BOLD, 9));
         assertFalse(r1.equals(r2));
@@ -205,14 +141,6 @@
         r2.setBaseItemLabelFont(new Font("Serif", Font.PLAIN, 10));
         assertTrue(r1.equals(r2));
 
-        // itemLabelPaint
-        r1.setItemLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,
-                3.0f, 4.0f, Color.GRAY));
-        assertFalse(r1.equals(r2));
-        r2.setItemLabelPaint(new GradientPaint(1.0f, 2.0f, Color.RED,
-                3.0f, 4.0f, Color.GRAY));
-        assertTrue(r1.equals(r2));
-
         // itemLabelPaintList
         r1.setSeriesItemLabelPaint(0, new GradientPaint(1.0f, 2.0f, Color.RED,
                 3.0f, 4.0f, Color.GRAY));
@@ -229,12 +157,6 @@
                 3.0f, 4.0f, Color.GRAY));
         assertTrue(r1.equals(r2));
 
-        // positiveItemLabelPosition;
-        r1.setPositiveItemLabelPosition(new ItemLabelPosition());
-        assertFalse(r1.equals(r2));
-        r2.setPositiveItemLabelPosition(new ItemLabelPosition());
-        assertTrue(r1.equals(r2));
-
         // positiveItemLabelPositionList;
         r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition());
         assertFalse(r1.equals(r2));
@@ -249,14 +171,6 @@
                 ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));
         assertTrue(r1.equals(r2));
 
-        // negativeItemLabelPosition;
-        r1.setNegativeItemLabelPosition(new ItemLabelPosition(
-                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));
-        assertFalse(r1.equals(r2));
-        r2.setNegativeItemLabelPosition(new ItemLabelPosition(
-                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));
-        assertTrue(r1.equals(r2));
-
         // negativeItemLabelPositionList;
         r1.setSeriesNegativeItemLabelPosition(1, new ItemLabelPosition(
                 ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));
@@ -279,12 +193,6 @@
         r2.setItemLabelAnchorOffset(3.0);
         assertTrue(r1.equals(r2));
 
-        // createEntities;
-        r1.setCreateEntities(Boolean.TRUE);
-        assertFalse(r1.equals(r2));
-        r2.setCreateEntities(Boolean.TRUE);
-        assertTrue(r1.equals(r2));
-
         // createEntitiesList;
         r1.setSeriesCreateEntities(0, Boolean.TRUE);
         assertFalse(r1.equals(r2));
