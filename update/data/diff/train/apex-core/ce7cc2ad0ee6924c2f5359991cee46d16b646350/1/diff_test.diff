diff --git a/old_test.java b/new_test.java
index df61104..995857d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,23 +1,23 @@
 @Test
   public void testInit() throws Exception
   {
-    NewTopologyBuilder b = new NewTopologyBuilder();
+    NewDAGBuilder b = new NewDAGBuilder();
 
-    Topology.NodeDecl generatorNode = b.addNode("generatorNode", NumberGeneratorInputAdapter.class);
-    Topology.NodeDecl node1 = b.addNode("node1", GenericTestNode.class);
+    DAG.Operator generator = b.addNode("generator", NumberGeneratorInputModule.class);
+    DAG.Operator operator1 = b.addNode("operator1", GenericTestModule.class);
 
-    NewTopologyBuilder.StreamBuilder generatorOutput = b.addStream("generatorOutput");
-    generatorOutput.setSource(generatorNode.getOutput(NumberGeneratorInputAdapter.OUTPUT_PORT))
-            .addSink(node1.getInput(GenericTestNode.INPUT1))
-            .setSerDeClass(DNodeManagerTest.TestStaticPartitioningSerDe.class);
+    NewDAGBuilder.StreamBuilder generatorOutput = b.addStream("generatorOutput");
+    generatorOutput.setSource(generator.getOutput(NumberGeneratorInputModule.OUTPUT_PORT))
+            .addSink(operator1.getInput(GenericTestModule.INPUT1))
+            .setSerDeClass(ModuleManagerTest.TestStaticPartitioningSerDe.class);
 
     //StreamConf output1 = b.getOrAddStream("output1");
     //output1.addProperty(TopologyBuilder.STREAM_CLASSNAME,
     //                    ConsoleOutputStream.class.getName());
-    Topology tplg = b.getTopology();
+    DAG tplg = b.getTopology();
 
-    DNodeManager dnm = new DNodeManager(tplg);
-    int expectedContainerCount = DNodeManagerTest.TestStaticPartitioningSerDe.partitions.length;
+    ModuleManager dnm = new ModuleManager(tplg);
+    int expectedContainerCount = ModuleManagerTest.TestStaticPartitioningSerDe.partitions.length;
     Assert.assertEquals("number required containers",
                         expectedContainerCount,
                         dnm.getNumRequiredContainers());
@@ -26,7 +26,7 @@
 
     for (int i = 0; i < expectedContainerCount; i++) {
       String containerId = "container" + (i + 1);
-      StreamingNodeUmbilicalProtocol.StreamingContainerContext cc = dnm.assignContainerForTest(containerId, InetSocketAddress.createUnresolved("localhost", bufferServerPort));
+      StreamingContainerUmbilicalProtocol.StreamingContainerContext cc = dnm.assignContainerForTest(containerId, InetSocketAddress.createUnresolved("localhost", bufferServerPort));
       StramLocalCluster.LocalStramChild container = new StramLocalCluster.LocalStramChild(containerId, null, null);
       container.setup(cc);
       containers.add(container);
