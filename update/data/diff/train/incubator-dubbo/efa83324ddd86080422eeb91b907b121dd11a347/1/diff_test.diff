diff --git a/old_test.java b/new_test.java
index 61e57d0..c9a9ab9 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,20 +1,20 @@
 @Test
     public void testNotify() throws Exception {
         final AtomicReference<Boolean> notified = new AtomicReference<Boolean>(false);
-        NotifyListener listner1 = urls -> notified.set(Boolean.TRUE);
+        NotifyListener listener1 = urls -> notified.set(Boolean.TRUE);
         URL url1 = new URL("dubbo", "192.168.0.1", 2200, parametersConsumer);
-        abstractRegistry.subscribe(url1, listner1);
-        NotifyListener listner2 = urls -> notified.set(Boolean.TRUE);
+        abstractRegistry.subscribe(url1, listener1);
+        NotifyListener listener2 = urls -> notified.set(Boolean.TRUE);
         URL url2 = new URL("dubbo", "192.168.0.2", 2201, parametersConsumer);
-        abstractRegistry.subscribe(url2, listner2);
-        NotifyListener listner3 = urls -> notified.set(Boolean.TRUE);
+        abstractRegistry.subscribe(url2, listener2);
+        NotifyListener listener3 = urls -> notified.set(Boolean.TRUE);
         URL url3 = new URL("dubbo", "192.168.0.3", 2202, parametersConsumer);
-        abstractRegistry.subscribe(url3, listner3);
+        abstractRegistry.subscribe(url3, listener3);
         List<URL> urls = new ArrayList<>();
         urls.add(url1);
         urls.add(url2);
         urls.add(url3);
-        abstractRegistry.notify(url1, listner1, urls);
+        abstractRegistry.notify(url1, listener1, urls);
         Map<URL, Map<String, List<URL>>> map = abstractRegistry.getNotified();
         MatcherAssert.assertThat(true, Matchers.equalTo(map.containsKey(url1)));
         MatcherAssert.assertThat(false, Matchers.equalTo(map.containsKey(url2)));
