diff --git a/old_product.java b/new_product.java
index 4c0971d..bc940e0 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,29 +1,25 @@
 public Classification classify(final String classifierId, final String text) {
-		if (classifierId == null || classifierId.isEmpty())
-			throw new IllegalArgumentException("classifierId can not be null or empty");
+    if (classifierId == null || classifierId.isEmpty())
+      throw new IllegalArgumentException("classifierId cannot be null or empty");
 
-		if (text == null || text.isEmpty())
-			throw new IllegalArgumentException("text can not be null or empty");
+    if (text == null || text.isEmpty())
+      throw new IllegalArgumentException("text cannot be null or empty");
 
-		JsonObject contentJson = new JsonObject();
-		contentJson.addProperty("text", text);
+    final JsonObject contentJson = new JsonObject();
+    contentJson.addProperty("text", text);
 
-		String path = String.format("/v1/classifiers/%s/classify", classifierId);
+    final String path = String.format("/v1/classifiers/%s/classify", classifierId);
 
-		HttpRequestBase request = Request.Post(path).withContent(contentJson).build();
+    final Request request = RequestBuilder.post(path).withBodyJson(contentJson).build();
 
-		try {
-			HttpResponse response = execute(request);
-			Classification classification =  ResponseUtil.getObject(response, Classification.class);
-			
-			for (ClassifiedClass klass : classification.getClasses()) {
-				if (klass.getName().equals(classification.getTopClass())){
-					classification.setTopConfidence(klass.getConfidence());
-					break;
-				}
-			}
-			return classification;
-		} catch (IOException e) {
-			throw new RuntimeException(e);
-		}
-	}
\ No newline at end of file
+    final Response response = execute(request);
+    final Classification classification = ResponseUtil.getObject(response, Classification.class);
+
+    for (final ClassifiedClass klass : classification.getClasses()) {
+      if (klass.getName().equals(classification.getTopClass())) {
+        classification.setTopConfidence(klass.getConfidence());
+        break;
+      }
+    }
+    return classification;
+  }
\ No newline at end of file
