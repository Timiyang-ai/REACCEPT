diff --git a/old_product.java b/new_product.java
index 7449318..ef533f3 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,14 +1,15 @@
 public Scores getCorpusRelationScores(final Corpus corpus, final List<Concept> concepts) {
-		String corpusId = IDHelper.getCorpusId(corpus, getAccountId());
-		Validate.notEmpty(concepts, "concepts cannot be empty");
+    final String corpusId = IDHelper.getCorpusId(corpus, getAccountId());
+    Validate.notEmpty(concepts, "concepts cannot be empty");
 
-		Map<String, Object> queryParameters = new HashMap<String, Object>();
-		JsonObject contentJson = new JsonObject();
-		JsonArray conceptsJson = new JsonArray();
-		for (Concept con : concepts) {
-			conceptsJson.add(new JsonPrimitive(con.getId()));
-		}
-		contentJson.add(CONCEPTS, conceptsJson);
-		queryParameters.put(CONCEPTS, conceptsJson.toString());
-		return executeRequest(API_VERSION + corpusId + RELATION_SCORES_PATH, queryParameters, Scores.class);
-	}
\ No newline at end of file
+    final Map<String, Object> queryParameters = new HashMap<String, Object>();
+    final JsonObject contentJson = new JsonObject();
+    final JsonArray conceptsJson = new JsonArray();
+    for (final Concept con : concepts) {
+      conceptsJson.add(new JsonPrimitive(con.getId()));
+    }
+    contentJson.add(CONCEPTS, conceptsJson);
+    queryParameters.put(CONCEPTS, conceptsJson.toString());
+    return executeRequest(API_VERSION + corpusId + RELATION_SCORES_PATH, queryParameters,
+        Scores.class);
+  }
\ No newline at end of file
