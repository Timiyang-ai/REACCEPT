diff --git a/old_product.java b/new_product.java
index dddd7af..b66dc8a 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,25 +1,26 @@
 public Concepts getGraphRelatedConcepts(final Graph graph, final List<Concept> concepts,
-			final Map<String, Object> parameters) {
-		String graphId = IDHelper.getGraphId(graph, getAccountId());
-		Validate.notEmpty(concepts, "concepts cannot be empty");
+      final Map<String, Object> parameters) {
+    final String graphId = IDHelper.getGraphId(graph, getAccountId());
+    Validate.notEmpty(concepts, "concepts cannot be empty");
 
-		Map<String, Object> queryParameters = new HashMap<String, Object>();
-		String[] queryParms = new String[] { LEVEL, LIMIT };
-		for (String param : queryParms) {
-			if (parameters.containsKey(param))
-				queryParameters.put(param, parameters.get(param));
-		}
-		if (parameters.get(CONCEPT_FIELDS) != null) {
-			RequestedFields fields = (RequestedFields) parameters.get(CONCEPT_FIELDS);
-			if (fields != null && !fields.isEmpty())
-				queryParameters.put(CONCEPT_FIELDS, fields.toString());
-		}
-		JsonObject contentJson = new JsonObject();
-		JsonArray conceptsJson = new JsonArray();
-		for (Concept concept : concepts) {
-			conceptsJson.add(new JsonPrimitive(concept.getId()));
-		}
-		contentJson.add(CONCEPTS, conceptsJson);
-		queryParameters.put(CONCEPTS, conceptsJson.toString());
-		return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters, Concepts.class);
-	}
\ No newline at end of file
+    final Map<String, Object> queryParameters = new HashMap<String, Object>();
+    final String[] queryParms = new String[] {LEVEL, LIMIT};
+    for (final String param : queryParms) {
+      if (parameters.containsKey(param))
+        queryParameters.put(param, parameters.get(param));
+    }
+    if (parameters.get(CONCEPT_FIELDS) != null) {
+      final RequestedFields fields = (RequestedFields) parameters.get(CONCEPT_FIELDS);
+      if (fields != null && !fields.isEmpty())
+        queryParameters.put(CONCEPT_FIELDS, fields.toString());
+    }
+    final JsonObject contentJson = new JsonObject();
+    final JsonArray conceptsJson = new JsonArray();
+    for (final Concept concept : concepts) {
+      conceptsJson.add(new JsonPrimitive(concept.getId()));
+    }
+    contentJson.add(CONCEPTS, conceptsJson);
+    queryParameters.put(CONCEPTS, conceptsJson.toString());
+    return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters,
+        Concepts.class);
+  }
\ No newline at end of file
