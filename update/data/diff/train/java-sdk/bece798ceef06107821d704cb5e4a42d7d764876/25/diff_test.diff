diff --git a/old_test.java b/new_test.java
index 1991c64..a4989b0 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,19 +1,21 @@
 @Test
-    public void testGetClassifier() {
+  public void testGetClassifier() {
 
-        System.out.println(GsonSingleton.getGson().toJson(""));
-        Classifier response = new Classifier();
-        response.setId("testId");
-        response.setStatus(Classifier.Status.AVAILABLE);
-        response.setUrl("http://gateway.watson.net/");
-        response.setStatusDescription("The classifier instance is now available and is ready to take classifier requests.");
+    System.out.println(GsonSingleton.getGson().toJson(""));
+    final Classifier response = new Classifier();
+    response.setId("testId");
+    response.setStatus(Classifier.Status.AVAILABLE);
+    response.setUrl("http://gateway.watson.net/");
+    response
+        .setStatusDescription("The classifier instance is now available and is ready to take classifier requests.");
 
-        mockServer.when(request().withPath(CLASSIFIERS_PATH + "/" + classifierId)).respond(
-                response().withHeaders(new Header(HttpHeaders.Names.CONTENT_TYPE, MediaType.APPLICATION_JSON))
-                        .withBody(GsonSingleton.getGson().toJson(response)));
+    mockServer.when(request().withPath(CLASSIFIERS_PATH + "/" + classifierId)).respond(
+        response().withHeaders(
+            new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)).withBody(
+            GsonSingleton.getGson().toJson(response)));
 
-        Classifier c = service.getClassifier(classifierId);
-        assertNotNull(c);
-        assertEquals(c, response);
+    final Classifier c = service.getClassifier(classifierId);
+    assertNotNull(c);
+    assertEquals(c, response);
 
-    }
\ No newline at end of file
+  }
\ No newline at end of file
