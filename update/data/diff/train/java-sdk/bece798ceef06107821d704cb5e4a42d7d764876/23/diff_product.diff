diff --git a/old_product.java b/new_product.java
index a4c124b..1fa4f4e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,22 +1,19 @@
-public List<TranslationModel> getModels(final Boolean showDefault, final String source, final String target) {
-		Request request = Request.Get("/v2/models");
+public List<TranslationModel> getModels(final Boolean showDefault, final String source,
+      final String target) {
+    final RequestBuilder requestBuilder = RequestBuilder.get("/v2/models");
 
-		if (source != null && !source.isEmpty())
-			request.withQuery(SOURCE, source);
+    if (source != null && !source.isEmpty())
+      requestBuilder.withQuery(SOURCE, source);
 
-		if (target != null && !target.isEmpty())
-			request.withQuery(TARGET, source);
+    if (target != null && !target.isEmpty())
+      requestBuilder.withQuery(TARGET, source);
 
-		if (showDefault != null)
-			request.withQuery(DEFAULT, showDefault.booleanValue());
+    if (showDefault != null)
+      requestBuilder.withQuery(DEFAULT, showDefault.booleanValue());
 
-		HttpRequestBase requestBase = request.build();
-		try {
-			HttpResponse response = execute(requestBase);
-			JsonObject jsonObject = ResponseUtil.getJsonObject(response);
-			List<TranslationModel> models = GsonSingleton.getGson().fromJson(jsonObject.get("models"), modelListType);
-			return models;
-		} catch (IOException e) {
-			throw new RuntimeException(e);
-		}
-	}
\ No newline at end of file
+    final Response response = execute(requestBuilder.build());
+    final JsonObject jsonObject = ResponseUtil.getJsonObject(response);
+    final List<TranslationModel> models =
+        GsonSingleton.getGson().fromJson(jsonObject.get("models"), modelListType);
+    return models;
+  }
\ No newline at end of file
