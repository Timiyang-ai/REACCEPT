diff --git a/old_product.java b/new_product.java
index e165a04..a208407 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,13 +1,15 @@
-public ServiceCall<Void> addCorpus(String customizationId, String corpusName, File corpusFile,
-      Boolean allowOverwrite) {
-    Validator.notNull(customizationId, "customizationId cannot be null");
-    Validator.notNull(corpusName, "corpusName cannot be null");
-    Validator.isTrue((corpusFile != null) && corpusFile.exists(), "corpusFile is null or does not exist");
-    RequestBuilder requestBuilder = RequestBuilder.post(String.format(PATH_CORPUS, customizationId, corpusName));
-    if (allowOverwrite != null) {
-      requestBuilder.query(ALLOW_OVERWRITE, allowOverwrite);
+public ServiceCall<Void> addCorpus(AddCorpusOptions addCorpusOptions) {
+    Validator.notNull(addCorpusOptions, "addCorpusOptions cannot be null");
+    RequestBuilder builder = RequestBuilder.post(String.format("/v1/customizations/%s/corpora/%s", addCorpusOptions
+        .customizationId(), addCorpusOptions.corpusName()));
+    if (addCorpusOptions.allowOverwrite() != null) {
+      builder.query("allow_overwrite", String.valueOf(addCorpusOptions.allowOverwrite()));
     }
-
-    requestBuilder.body(RequestBody.create(HttpMediaType.TEXT, corpusFile));
-    return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getVoid());
+    MultipartBody.Builder multipartBuilder = new MultipartBody.Builder();
+    multipartBuilder.setType(MultipartBody.FORM);
+    RequestBody corpusFileBody = RequestUtils.inputStreamBody(addCorpusOptions.corpusFile(), addCorpusOptions
+        .corpusFileContentType());
+    multipartBuilder.addFormDataPart("corpus_file", addCorpusOptions.corpusFilename(), corpusFileBody);
+    builder.body(multipartBuilder.build());
+    return createServiceCall(builder.build(), ResponseConverterUtils.getVoid());
   }
\ No newline at end of file
