diff --git a/old_product.java b/new_product.java
index fbf71de..b354a3d 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,14 +1,12 @@
-public ServiceCall<Void> addWords(String customizationId, Word... words) {
-    Validator.notNull(customizationId, "customizationId cannot be null");
-    Validator.notNull(words, "words cannot be null");
-    Validator.isTrue(words.length > 0, "words cannot be empty");
-
-    RequestBuilder requestBuilder = RequestBuilder.post(String.format(PATH_WORDS, customizationId));
-
-    Map<String, Object> wordsAsMap = new HashMap<String, Object>();
-    wordsAsMap.put(WORDS, words);
-
-    requestBuilder.bodyContent(GSON.toJson(wordsAsMap), HttpMediaType.APPLICATION_JSON);
-
-    return createServiceCall(requestBuilder.build(), ResponseConverterUtils.getVoid());
+public ServiceCall<Void> addWords(AddWordsOptions addWordsOptions) {
+    Validator.notNull(addWordsOptions, "addWordsOptions cannot be null");
+    RequestBuilder builder = RequestBuilder.post(String.format("/v1/customizations/%s/words", addWordsOptions
+        .customizationId()));
+    builder.header("Content-Type", addWordsOptions.contentType());
+    if (addWordsOptions.contentType().equalsIgnoreCase(AddWordsOptions.ContentType.APPLICATION_JSON)) {
+      builder.bodyJson(GsonSingleton.getGson().toJsonTree(addWordsOptions.customWords()).getAsJsonObject());
+    } else {
+      builder.bodyContent(addWordsOptions.body(), addWordsOptions.contentType());
+    }
+    return createServiceCall(builder.build(), ResponseConverterUtils.getVoid());
   }
\ No newline at end of file
