diff --git a/old_product.java b/new_product.java
index 9615fa2..99a2e70 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,42 +3,29 @@ public Request build() {
     // URL
     builder.url(toUrl());
 
-    // POST/PUT require a body so send an empty body if the actual is null
-    RequestBody requestBody = body;
-    if (body == null)
-      requestBody = RequestBody.create(null, new byte[0]);
 
-    if (!formParams.isEmpty()) {
+    if (method == HTTPMethod.GET) {
+      Validator.isNull(body, "cannot send a RequestBody in a GET request");
+    } else if (!formParams.isEmpty()) {
+      // The current behaviour of the RequestBuilder is to replace the body when formParams is present
       final FormBody.Builder formBody = new FormBody.Builder();
       for (final NameValue param : formParams) {
         final String value = param.getValue() != null ? param.getValue() : "";
         formBody.add(param.getName(), value);
       }
-      requestBody = formBody.build();
+      body = formBody.build();
+    } else if (body == null) {
+      // POST/PUT require a body so send an empty body if the actual is null
+      // DELETE allows an empty request body
+      body = RequestBody.create(null, new byte[0]);
     }
+    builder.method(method.name(), body);
     
     //accept application/json by default
     builder.header(HttpHeaders.ACCEPT, HttpMediaType.APPLICATION_JSON);
 
-    if (!headers.isEmpty()) {
-      for (final NameValue header : headers) {
-        builder.header(header.getName(), header.getValue());
-      }
-    }
-
-    switch (method) {
-      case GET:
-        builder.get();
-        break;
-      case POST:
-        builder.post(requestBody);
-        break;
-      case PUT:
-        builder.put(requestBody);
-        break;
-      case DELETE:
-        builder.delete(requestBody);
-        break;
+    for (final NameValue header : headers) {
+      builder.header(header.getName(), header.getValue());
     }
 
     return builder.build();
