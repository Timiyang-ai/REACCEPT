diff --git a/old_product.java b/new_product.java
index 2bd2547..8ebdb89 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,8 +1,7 @@
-public Concepts getGraphsRelatedConcepts(final Graph graph, final Map<String, Object> parameters) {
-		String graphId = IDValidator.getGraphId(graph, getAccountId());
-		// TODO: we may need to divide this into 2 methods
-		if (parameters.get(CONCEPTS) == null && parameters.get(CONCEPT) == null)
-			throw new MissingFormatArgumentException("concept or concepts should be identified");
+public Concepts getGraphRelatedConcepts(final Graph graph, final List<Concept> concepts,
+			final Map<String, Object> parameters) {
+		String graphId = IDHelper.getGraphId(graph, getAccountId());
+		Validate.notNull(concepts, "concepts should be specified");
 
 		Map<String, Object> queryParameters = new HashMap<String, Object>();
 		String[] queryParms = new String[] { LEVEL, LIMIT };
@@ -15,20 +14,12 @@ public Concepts getGraphsRelatedConcepts(final Graph graph, final Map<String, Ob
 			if (fields != null && !fields.isEmpty())
 				queryParameters.put(CONCEPT_FIELDS, fields.toString());
 		}
-		if (parameters.get(CONCEPTS) != null) {
-			JsonObject contentJson = new JsonObject();
-			JsonArray conceptsJson = new JsonArray();
-			@SuppressWarnings("unchecked")
-			List<String> concepts = (List<String>) parameters.get(CONCEPTS);
-			for (String value : concepts) {
-				conceptsJson.add(new JsonPrimitive(value));
-			}
-			contentJson.add(CONCEPTS, conceptsJson);
-			queryParameters.put(CONCEPTS, conceptsJson.toString());
-			return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters, Concepts.class);
-		} else {
-			Concept concept = new Concept(graph, (String) parameters.get(CONCEPT));
-			return executeRequest(API_VERSION + concept.getId() + RELATED_CONCEPTS_PATH + RELATED_CONCEPTS_PATH,
-					queryParameters, Concepts.class);
+		JsonObject contentJson = new JsonObject();
+		JsonArray conceptsJson = new JsonArray();
+		for (Concept concept : concepts) {
+			conceptsJson.add(new JsonPrimitive(concept.getId()));
 		}
+		contentJson.add(CONCEPTS, conceptsJson);
+		queryParameters.put(CONCEPTS, conceptsJson.toString());
+		return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters, Concepts.class);
 	}
\ No newline at end of file
