diff --git a/old_test.java b/new_test.java
index 1c37e8f..0d8ec51 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,132 +1,10 @@
 @Test
   public void testGetSynonyms() {
-    // Call the service and get the synonym for 'difficult'
-    final Map<String, Object> params = new HashMap<String, Object>();
-    params.put(ToneAnalyzer.WORDS, new String[] {"difficult", "inferior"});
-    params.put(ToneAnalyzer.LIMIT, 3);
+    // Call the service and get the synonym for 'difficult' and 'inderior'
+    SynonymOptions options = new SynonymOptions().words("difficult", "inferior").limit(3).hops(3);
 
-    /*** synonymResult ***/
-    final SynonymResult synonymResult1 = new SynonymResult();
-    synonymResult1.setTrait("openness");
-    synonymResult1.setHeadword("difficult");
-
-    final Synonym synonym10 = new Synonym();
-    synonym10.setWord("petrified");
-    synonym10.setSense("difficult");
-    synonym10.setMeaning("not easy");
-    synonym10.setHops(0);
-    synonym10.setSemanticType("adj-all");
-    synonym10.setWeight(-0.028989519600000006);
-
-    final Synonym synonym11 = new Synonym();
-    synonym11.setWord("embarrassing");
-    synonym11.setSense("difficult");
-    synonym11.setMeaning("not easy");
-    synonym11.setHops(0);
-    synonym11.setSemanticType("adj-all");
-    synonym11.setWeight(-0.028989519600000);
-
-    final Synonym synonym12 = new Synonym();
-    synonym12.setWord("tough");
-    synonym12.setSense("difficult");
-    synonym12.setMeaning("not easy");
-    synonym12.setHops(0);
-    synonym12.setSemanticType("adj-all");
-    synonym12.setWeight(-0.0289895196000009);
-
-    synonymResult1.setSynonyms(new ArrayList<Synonym>() {
-      {
-        add(synonym10);
-        add(synonym11);
-        add(synonym12);
-      }
-    });
-
-    /*** synonymResult2 ***/
-    final SynonymResult synonymResult2 = new SynonymResult();
-    synonymResult2.setTrait("conscientious");
-    synonymResult2.setHeadword("difficult");
-
-    final Synonym synonym20 = new Synonym();
-    synonym20.setWord("trying");
-    synonym20.setSense("difficult");
-    synonym20.setMeaning("not easy");
-    synonym20.setHops(0);
-    synonym20.setSemanticType("adj-all");
-    synonym20.setWeight(-0.02898951960000002);
-
-    final Synonym synonym21 = new Synonym();
-    synonym21.setWord("challenging");
-    synonym21.setSense("difficult");
-    synonym21.setMeaning("not easy");
-    synonym21.setHops(0);
-    synonym21.setSemanticType("adj-all");
-    synonym21.setWeight(-0.0289895196007);
-
-    final Synonym synonym22 = new Synonym();
-    synonym22.setWord("tough");
-    synonym22.setSense("difficult");
-    synonym22.setMeaning("not easy");
-    synonym22.setHops(0);
-    synonym22.setSemanticType("adj-all");
-    synonym22.setWeight(-0.0289895196000099);
-
-    synonymResult2.setSynonyms(new ArrayList<Synonym>() {
-      {
-        add(synonym20);
-        add(synonym21);
-        add(synonym22);
-      }
-    });
-
-    /*** synonymResult3 ***/
-    final SynonymResult synonymResult3 = new SynonymResult();
-    synonymResult3.setTrait("confident");
-    synonymResult3.setHeadword("difficult");
-
-    final Synonym synonym30 = new Synonym();
-    synonym30.setWord("firm");
-    synonym30.setSense("difficult");
-    synonym30.setMeaning("not easy");
-    synonym30.setHops(0);
-    synonym30.setSemanticType("adj-all");
-    synonym30.setWeight(-0.02898951960000112);
-
-    synonymResult3.setSynonyms(new ArrayList<Synonym>() {
-      {
-        add(synonym30);
-      }
-    });
-
-    final List<SynonymResult> response = new ArrayList<SynonymResult>();
-    response.add(synonymResult1);
-    response.add(synonymResult1);
-    response.add(synonymResult1);
-
-    final JsonObject contentJson = new JsonObject();
-
-
-    // words
-    final JsonArray wordsJson = new JsonArray();
-    for (final String word : (String[]) params.get(ToneAnalyzer.WORDS)) {
-      wordsJson.add(new JsonPrimitive(word));
-    }
-    contentJson.add(ToneAnalyzer.WORDS, wordsJson);
-
-    if (params.containsKey(ToneAnalyzer.LIMIT))
-      contentJson.addProperty(ToneAnalyzer.LIMIT, (Integer) params.get(ToneAnalyzer.LIMIT));
-
-    mockServer.when(
-        request().withMethod("POST").withPath(SYNONYM_PATH).withBody(contentJson.toString()))
-        .respond(
-            response().withHeaders(
-                new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON))
-                .withBody(GsonSingleton.getGson().toJson(response)));
-
-    final List<SynonymResult> synonyms = service.getSynonyms(params);
+    List<SynonymResult> synonyms = service.getSynonyms(options);
 
     Assert.assertNotNull(synonyms);
     Assert.assertFalse(synonyms.isEmpty());
-    Assert.assertEquals(synonyms, response);
-
   }
\ No newline at end of file
