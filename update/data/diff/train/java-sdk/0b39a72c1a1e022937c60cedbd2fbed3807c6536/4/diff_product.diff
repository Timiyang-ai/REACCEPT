diff --git a/old_product.java b/new_product.java
index 5d348c8..cf4dbac 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,27 +1,34 @@
-public QueryConcepts conceptualSearch(Corpus corpus, List<String> ids, RequestedFields conceptFields, RequestedFields documentFields, int cursor, int limit) {
-        ConceptInsightsId.validateGenarate(corpus, getAccountId());
-        Validate.notNull(ids, "ids can't be null");
-        Map<String, Object> queryParams = new HashMap<String, Object>();
-        if (cursor >= 0) {
-            queryParams.put(CURSOR, cursor);
-        }
-        if (limit >= 0) {
-            queryParams.put(LIMIT, limit);
-        }
-        JsonArray IdsJsonArray = new JsonArray();
-        for (String value : ids) {
-            IdsJsonArray.add(new JsonPrimitive(value));
-        }
-        queryParams.put(IDS, IdsJsonArray.toString());
-        if (conceptFields != null) {
-            if (conceptFields != null && conceptFields.getFields() != null && !conceptFields.getFields().isEmpty())
-                queryParams.put(CONCEPT_FIELDS, conceptFields.toString());
-        }
+public QueryConcepts conceptualSearch(Corpus corpus, Map<String, Object> parameters) {
+		Validate.notNull(parameters.get(IDS), "ids can't be null");
+		String corpusId = IDValidator.getCorpusId(corpus, getAccountId());
 
-        if (documentFields != null) {
-            if (documentFields != null && documentFields.getFields() != null && !documentFields.getFields().isEmpty())
-                queryParams.put(DOCUMENT_FIELDS, documentFields.toString());
-        }
+		Map<String, Object> queryParams = new HashMap<String, Object>();
+		String[] queryParameters = new String[] { CURSOR, LIMIT };
 
-        return executeRequest(version + corpus.getId() + CONCEPTUAL_SEARCH_PATH, queryParams, QueryConcepts.class);
-    }
\ No newline at end of file
+		for (String param : queryParameters) {
+			if (parameters.containsKey(param))
+				queryParams.put(param, parameters.get(param));
+		}
+
+		JsonArray IdsJsonArray = new JsonArray();
+		@SuppressWarnings("unchecked")
+		List<String> ids = (List<String>) parameters.get(IDS);
+		for (String value : ids) {
+			IdsJsonArray.add(new JsonPrimitive(value));
+		}
+		queryParams.put(IDS, IdsJsonArray.toString());
+
+		if (parameters.get(CONCEPT_FIELDS) != null) {
+			RequestedFields fields = (RequestedFields) parameters.get(CONCEPT_FIELDS);
+			if (fields != null && !fields.isEmpty())
+				queryParams.put(CONCEPT_FIELDS, fields.toString());
+		}
+
+		if (parameters.get(DOCUMENT_FIELDS) != null) {
+			RequestedFields fields = (RequestedFields) parameters.get(DOCUMENT_FIELDS);
+			if (fields != null && !fields.isEmpty())
+				queryParams.put(DOCUMENT_FIELDS, fields.toString());
+		}
+
+		return executeRequest(API_VERSION + corpusId + CONCEPTUAL_SEARCH_PATH, queryParams, QueryConcepts.class);
+	}
\ No newline at end of file
