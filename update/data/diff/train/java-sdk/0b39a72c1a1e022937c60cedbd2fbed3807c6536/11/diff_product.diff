diff --git a/old_product.java b/new_product.java
index 7480a19..27e07f5 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,14 +1,14 @@
-public Scores getCorpusRelationScores(Corpus corpus,List<String> concepts) {
-        ConceptInsightsId.validateGenarate(corpus, getAccountId());
-        Validate.notNull(concepts, "concepts can't be null");
+public Scores getCorpusRelationScores(final Corpus corpus, final List<Concept> concepts) {
+		String corpusId = IDValidator.getCorpusId(corpus, getAccountId());
+		Validate.notNull(concepts, "concepts can't be null");
 
-        Map<String, Object> queryParameters = new HashMap<String, Object>();
-        JsonObject contentJson = new JsonObject();
-        JsonArray conceptsJson = new JsonArray();
-        for (String value : concepts) {
-            conceptsJson.add(new JsonPrimitive(value));
-        }
-        contentJson.add(CONCEPTS, conceptsJson);
-        queryParameters.put(CONCEPTS, conceptsJson.toString());
-        return executeRequest(version + corpus.getId() + RELATION_SCORES_PATH, queryParameters, Scores.class);
-    }
\ No newline at end of file
+		Map<String, Object> queryParameters = new HashMap<String, Object>();
+		JsonObject contentJson = new JsonObject();
+		JsonArray conceptsJson = new JsonArray();
+		for (Concept con : concepts) {
+			conceptsJson.add(new JsonPrimitive(con.getId()));
+		}
+		contentJson.add(CONCEPTS, conceptsJson);
+		queryParameters.put(CONCEPTS, conceptsJson.toString());
+		return executeRequest(API_VERSION + corpusId + RELATION_SCORES_PATH, queryParameters, Scores.class);
+	}
\ No newline at end of file
