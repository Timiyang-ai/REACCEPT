diff --git a/old_product.java b/new_product.java
index f3df28f..99f4c85 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,17 +1,18 @@
-public Documents listDocuments(Corpus corpus, String query, int limit, int cursor) {
-        ConceptInsightsId.validateGenarate(corpus, getAccountId());
-        Map<String, Object> queryParameters = new HashMap<String, Object>();
-        if (cursor >= 0) {
-            queryParameters.put(CURSOR, cursor);
-        }
-        if (limit >= 0) {
-            queryParameters.put(LIMIT, limit);
-        }
-        if (query != null) {
-            // TODO we may need to work in the query format,for now we do expect 
-            // the query parameter String formatted as documented in Concept Insights.
-            queryParameters.put(QUERY, query);
-        }
+public Documents listDocuments(final Corpus corpus, final Map<String, Object> parameters) {
+		String corpusId = IDValidator.getCorpusId(corpus, getAccountId());
 
-        return executeRequest(version + corpus.getId() + DOCUMENTS, queryParameters, Documents.class);
-    }
\ No newline at end of file
+		Map<String, Object> queryParameters = new HashMap<String, Object>();
+		String[] queryParams = new String[] { CURSOR, LIMIT };
+		for (String param : queryParams) {
+			if (parameters.containsKey(param)) {
+				queryParameters.put(param, parameters.get(param));
+			}
+		}
+		if (parameters.get(QUERY) != null) {
+			// TODO we may need to work in the query format,for now we do expect
+			// the query parameter String formatted as documented in Concept Insights.
+			queryParameters.put(QUERY, parameters.get(QUERY));
+		}
+
+		return executeRequest(API_VERSION + corpusId + DOCUMENTS_PATH, queryParameters, Documents.class);
+	}
\ No newline at end of file
