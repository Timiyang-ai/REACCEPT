diff --git a/old_test.java b/new_test.java
index 3628165..d6c5c92 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,16 +1,14 @@
 @Test
-    public void testGetGraphsRelatedConcepts() {
-        Map<String,Object> params = new HashMap<String, Object>();
-        params.put(ConceptInsights.ACCOUNT_ID, "wikipedia");
-        params.put("graph", "en-20120601");
-        List<String> concepts = new ArrayList<String>();
-        concepts.add("/graphs/wikipedia/en-20120601/concepts/IBM_Watson");
-        params.put(ConceptInsights.CONCEPTS, concepts);
-        params.put(ConceptInsights.LIMIT, 10);
-        params.put(ConceptInsights.LEVEL, 1);
-        RequestedFields fs = new RequestedFields();
-        fs.include("abstract");
-        params.put("concept_fields", fs);
-        Concepts concepts1 =  service.getGraphsRelatedConcepts(params);
-        Assert.assertNotNull(concepts1);
-    }
\ No newline at end of file
+	public void testGetGraphsRelatedConcepts() {
+		Map<String, Object> params = new HashMap<String, Object>();
+		List<String> concepts = new ArrayList<String>();
+		concepts.add(EXAMPLE_CONCEPT.getId());
+		params.put(ConceptInsights.CONCEPTS, concepts);
+		params.put(ConceptInsights.LIMIT, 10);
+		params.put(ConceptInsights.LEVEL, 1);
+		RequestedFields fs = new RequestedFields();
+		fs.include("abstract");
+		params.put("concept_fields", fs);
+		Concepts concepts1 = service.getGraphsRelatedConcepts(Graph.WIKIPEDIA, params);
+		Assert.assertNotNull(concepts1);
+	}
\ No newline at end of file
