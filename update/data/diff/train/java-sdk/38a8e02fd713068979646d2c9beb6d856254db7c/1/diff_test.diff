diff --git a/old_test.java b/new_test.java
index f79f19b..dff84db 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,44 +1,26 @@
 @Test
-  public void testGetTone() {
-    final String text =
-        "I know the times are difficult! Our sales have been "
-            + "disappointing for the past three quarters for our data analytics "
-            + "product suite. We have a competitive data analytics product "
-            + "suite in the industry. But we need to do our job selling it! ";
+  public void testGetTone() throws FileNotFoundException {
+    final String text = "I know the times are difficult! Our sales have been "
+        + "disappointing for the past three quarters for our data analytics "
+        + "product suite. We have a competitive data analytics product "
+        + "suite in the industry. But we need to do our job selling it! ";
 
-    final ToneAnalysis response = new ToneAnalysis();
+    ToneAnalysis response =
+        loadFixture(FIXTURE, ToneAnalysis.class);
 
-    final ElementTone docTone = new ElementTone();
-    docTone.addTone(buildEmotionTone());
-    docTone.addTone(buildWritingTone());
-    docTone.addTone(buildSocialTone());
-   
-    List<SentenceAnalysis> sentences = new ArrayList<SentenceAnalysis>();
-    response.setSentencesTone(sentences);
-
-    final SentenceAnalysis sentence = new SentenceAnalysis(0, 0, text.length(), text);
-    sentence.addTone(buildEmotionTone());
-    sentence.addTone(buildWritingTone());
-    sentence.addTone(buildSocialTone());
-    
     final JsonObject contentJson = new JsonObject();
-    contentJson.addProperty("text", text);
+    contentJson.addProperty(TEXT, text);
 
     mockServer
-        .when(request().withMethod(POST).withPath(TONE_PATH).withBody(contentJson.toString()))
-        .respond(
-            response().withHeaders(
-                new Header(HttpHeaders.Names.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON))
-                .withBody(GsonSingleton.getGson().toJson(response)));
-
-    // Call the service and get the tone
-    final ToneAnalysis tone = service.getTone(text);
-    Assert.assertNotNull(tone);
-    Assert.assertNotNull(tone.getDocumentTone());
-    Assert.assertEquals(3, tone.getDocumentTone().getTones().size());
-    Assert.assertNotNull(tone.getSentencesTone());
-    Assert.assertEquals(1, tone.getSentencesTone().size());
-    Assert.assertNotNull(tone.getSentencesTone().get(0).getText());
-    Assert.assertEquals(tone, response);
+      .when(request()
+          .withMethod(POST)
+          .withPath(TONE_PATH)
+          .withQueryStringParameter(VERSION_DATE, ToneAnalyzer.VERSION_DATE_2016_02_11)
+          .withBody(contentJson.toString()))
+      .respond(response()
+          .withHeader(HttpHeaders.CONTENT_TYPE, HttpMediaType.APPLICATION_JSON)
+          .withBody(response.toString()));
 
+    // Call the service and compare the result
+    Assert.assertEquals(response, service.getTone(text));
   }
\ No newline at end of file
