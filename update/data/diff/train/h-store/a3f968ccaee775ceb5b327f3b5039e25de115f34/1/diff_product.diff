diff --git a/old_product.java b/new_product.java
index fecba55..95c43a2 100644
--- a/old_product.java
+++ b/new_product.java
@@ -13,7 +13,7 @@ public State startTransaction(long txn_id, int base_partition, Procedure catalog
             return (null);
         }
         
-        Vertex start = markov.getStartVertex();
+        MarkovVertex start = markov.getStartVertex();
         assert(start != null) : "The start vertex is null. This should never happen!";
         MarkovPathEstimator estimator = null;
         
@@ -45,7 +45,7 @@ public State startTransaction(long txn_id, int base_partition, Procedure catalog
                     // if (catalog_proc.getName().equalsIgnoreCase("NewBid")) throw new Exception ("Fake!");
                 } catch (Throwable e) {
                     try {
-                        GraphvizExport<Vertex, Edge> gv = MarkovUtil.exportGraphviz(markov, true, markov.getPath(estimator.getVisitPath()));
+                        GraphvizExport<MarkovVertex, MarkovEdge> gv = MarkovUtil.exportGraphviz(markov, true, markov.getPath(estimator.getVisitPath()));
                         LOG.error("GRAPH #" + markov.getGraphId() + " DUMP: " + gv.writeToTempFile(catalog_proc));
                     } catch (Exception ex) {
                         throw new RuntimeException(ex);
@@ -66,7 +66,7 @@ public State startTransaction(long txn_id, int base_partition, Procedure catalog
         }
         assert(estimator != null);
         if (t) {
-            List<Vertex> path = estimator.getVisitPath();
+            List<MarkovVertex> path = estimator.getVisitPath();
             LOG.trace(String.format("Estimated Path for %s [length=%d]\n%s",
                                     TransactionState.formatTxnName(catalog_proc, txn_id), path.size(),
                                     StringUtil.join("\n----------------------\n", path, "debug")));
