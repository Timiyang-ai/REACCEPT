diff --git a/old_product.java b/new_product.java
index d32a521..1d0ca8d 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,15 +1,26 @@
-public Collection<ProfileMeasurement> getProfileMeasurements() {
-        List<ProfileMeasurement> ret = new ArrayList<ProfileMeasurement>();
-        for (Field f : this.getClass().getDeclaredFields()) {
-            Object obj = null;
-            try {
-                obj = f.get(this);
-            } catch (Exception ex) {
-                throw new RuntimeException("Failed to get value for field '" + f.getName() + "'", ex);
-            }
-            if (obj instanceof ProfileMeasurement) {
-                ret.add((ProfileMeasurement)obj);
-            }
-        } // FOR
-        return (ret);
+public final ProfileMeasurement[] getProfileMeasurements() {
+        if (pm_cache == null) {
+            synchronized (this) {
+                if (pm_cache == null) {
+                    final List<ProfileMeasurement> temp = new ArrayList<ProfileMeasurement>();
+                    for (Field f : this.getClass().getDeclaredFields()) {
+                        int modifiers = f.getModifiers();
+                        if (Modifier.isTransient(modifiers) == false &&
+                            Modifier.isPrivate(modifiers) == false &&
+                            Modifier.isStatic(modifiers) == false) {
+                            
+                            Object obj = null;
+                            try {
+                                obj = f.get(this);
+                            } catch (Exception ex) {
+                                throw new RuntimeException("Failed to get value for field '" + f.getName() + "'", ex);
+                            }
+                            if (obj instanceof ProfileMeasurement) temp.add((ProfileMeasurement)obj);
+                        }
+                    } // FOR
+                    pm_cache = temp.toArray(new ProfileMeasurement[temp.size()]);
+                }
+            } // SYNCH
+        }
+        return (pm_cache);
     }
\ No newline at end of file
