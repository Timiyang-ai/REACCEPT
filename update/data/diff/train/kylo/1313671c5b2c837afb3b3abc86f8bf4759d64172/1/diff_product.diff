diff --git a/old_product.java b/new_product.java
index 05e30bd..370ab5d 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,11 +1,13 @@
 @Nonnull
-    public String execute (@Nonnull final TransformRequest request) throws ScriptException
-    {
-        LOG.entry(request);
+    public TransformResponse execute(@Nonnull final TransformRequest request)
+            throws ScriptException {
+        log.trace("entry params({})", request);
 
         // Verify state
         if (!isRunning()) {
-            throw LOG.throwing(new IllegalStateException("Transform service has not been started"));
+            IllegalStateException e = new IllegalStateException("Transform service has not been started");
+            log.error("Throwing {}", e);
+            throw e;
         }
 
         // Generate destination
@@ -13,20 +15,27 @@
         this.cache.put(table, MIN_BYTES);
 
         // Execute script
-        List<NamedParam> bindings = ImmutableList.of(
-                (NamedParam)new NamedParamClass("database", "String", DATABASE),
+        List<NamedParam> bindings = ImmutableList.of((NamedParam) new NamedParamClass("database", "String", DATABASE),
                 new NamedParamClass("tableName", "String", table));
 
-        this.engine.eval(toScript(request), bindings);
+        Object results = this.engine.eval(toScript(request), bindings);
 
         // Update table weight
         try {
             updateWeight(table, this.engine.getSQLContext());
+        } catch (Exception e) {
+            log.warn("Failed to update table weight: {}", e.toString());
         }
-        catch (Exception e) {
-            LOG.warn("Failed to update table weight: {}", e.toString());
+
+        // Build response
+        TransformResponse response = new TransformResponse();
+        response.setStatus(TransformResponse.Status.SUCCESS);
+        response.setTable(table);
+
+        if (request.isSendResults()) {
+            response.setResults((QueryResult) results);
         }
 
-        LOG.exit(table);
-        return table;
+        log.trace("exit with({})", response);
+        return response;
     }
\ No newline at end of file
