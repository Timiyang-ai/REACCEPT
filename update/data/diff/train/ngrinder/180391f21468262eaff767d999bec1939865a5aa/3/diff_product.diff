diff --git a/old_product.java b/new_product.java
index 1bc736f..185fbf5 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,10 +1,11 @@
 @PreAuthorize("hasAnyRole('A')")
-	@RequestMapping({"", "/"})
-	public String getAll(ModelMap model, @RequestParam(required = false) Role role,
-						 @PageableDefault(page = 0, size = 10) Pageable pageable,
-	                     @RequestParam(required = false) String keywords) {
-		pageable = new PageRequest(pageable.getPageNumber(), pageable.getPageSize(), defaultIfNull(pageable.getSort(), DEFAULT_SORT));
-		Pageable defaultPageable = new PageRequest(0, pageable.getPageSize(), defaultIfNull(pageable.getSort(), DEFAULT_SORT));
+	@RequestMapping({"/api/list", "/api/list/"})
+	@ResponseBody
+	public Page<User> getAll(@RequestParam(required = false) Role role,
+							   @PageableDefault(page = 0, size = 10) Pageable pageable,
+							   @RequestParam(required = false) String keywords) {
+		pageable = PageRequest.of(pageable.getPageNumber(), pageable.getPageSize(), defaultIfNull(pageable.getSort(), DEFAULT_SORT));
+		Pageable defaultPageable = PageRequest.of(0, pageable.getPageSize(), defaultIfNull(pageable.getSort(), DEFAULT_SORT));
 		Page<User> pagedUser;
 		if (StringUtils.isEmpty(keywords)) {
 			pagedUser = userService.getPagedAll(role, pageable);
@@ -16,14 +17,7 @@
 			if (pagedUser.getNumberOfElements() == 0) {
 				pagedUser = userService.getPagedAll(keywords, defaultPageable);
 			}
-			model.put("keywords", keywords);
 		}
 
-
-		model.addAttribute("users", pagedUser);
-		EnumSet<Role> roleSet = EnumSet.allOf(Role.class);
-		model.addAttribute("roleSet", roleSet);
-		model.addAttribute("role", role);
-		putPageIntoModelMap(model, pageable);
-		return "user/list";
+		return pagedUser;
 	}
\ No newline at end of file
