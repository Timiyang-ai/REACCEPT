diff --git a/old_test.java b/new_test.java
index 5cee63c..59b93ca 100644
--- a/old_test.java
+++ b/new_test.java
@@ -26,7 +26,7 @@
                                       true, // blockOnNonDurableSend
                                       true, // autoGroup
                                       true, // preACK
-                                      HornetQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME, // loadBalancingClassName
+                                      ActiveMQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME, // loadBalancingClassName
                                       1, // transactionBatchSize
                                       1, // dupsOKBatchSize
                                       true, // useGlobalPools
@@ -40,7 +40,7 @@
                                       "tst"); // groupID
 
 
-      HornetQQueueConnectionFactory cf = (HornetQQueueConnectionFactory)context.lookup("tst");
+      ActiveMQQueueConnectionFactory cf = (ActiveMQQueueConnectionFactory)context.lookup("tst");
 
       assertEquals(true, cf.isHA());
       assertEquals("tst", cf.getClientID());
@@ -59,7 +59,7 @@
       assertEquals(true, cf.isBlockOnNonDurableSend());
       assertEquals(true, cf.isAutoGroup());
       assertEquals(true, cf.isPreAcknowledge());
-      assertEquals(HornetQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME, cf.getConnectionLoadBalancingPolicyClassName());
+      assertEquals(ActiveMQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME, cf.getConnectionLoadBalancingPolicyClassName());
       assertEquals(1, cf.getTransactionBatchSize());
       assertEquals(1, cf.getDupsOKBatchSize());
       assertEquals(true, cf.isUseGlobalPools());
