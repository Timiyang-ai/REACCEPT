diff --git a/old_product.java b/new_product.java
index 74bf37c..5848d05 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,21 +1,18 @@
 public void persistFile(long fileId, List<Long> blockIds) throws IOException {
+    Map<Long, Long> blockIdToLockId;
     synchronized (mLock) {
-      mPersistingInProgressFiles.add(fileId);
+      blockIdToLockId = mPersistingInProgressFiles.get(fileId);
+      if (blockIdToLockId == null || blockIdToLockId.size() != blockIds.size()) {
+        throw new IOException("Not all the blocks of file " + fileId + " are blocked");
+      }
     }
 
     String dstPath = prepareUfsFilePath(fileId);
     OutputStream outputStream = mUfs.create(dstPath);
     final WritableByteChannel outputChannel = Channels.newChannel(outputStream);
 
-    Map<Long, Long> blockIdToLockId = Maps.newHashMap();
     List<Throwable> errors = new ArrayList<Throwable>();
     try {
-      // lock all the blocks to prevent any eviction
-      for (long blockId : blockIds) {
-        long lockId = mBlockDataManager.lockBlock(Sessions.CHECKPOINT_SESSION_ID, blockId);
-        blockIdToLockId.put(blockId, lockId);
-      }
-
       for (long blockId : blockIds) {
         long lockId = blockIdToLockId.get(blockId);
 
