diff --git a/old_test.java b/new_test.java
index d8a47f5..59aa2c4 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,7 +4,7 @@
 
     // try to rename a file to root
     try {
-      mFileSystemMaster.rename(NESTED_FILE_URI, ROOT_URI);
+      mFileSystemMaster.rename(NESTED_FILE_URI, ROOT_URI, RenameOptions.defaults());
       Assert.fail("Renaming to root should fail.");
     } catch (InvalidPathException e) {
       Assert.assertEquals(ExceptionMessage.RENAME_CANNOT_BE_TO_ROOT.getMessage(), e.getMessage());
@@ -12,7 +12,7 @@
 
     // move root to another path
     try {
-      mFileSystemMaster.rename(ROOT_URI, TEST_URI);
+      mFileSystemMaster.rename(ROOT_URI, TEST_URI, RenameOptions.defaults());
       Assert.fail("Should not be able to rename root");
     } catch (InvalidPathException e) {
       Assert.assertEquals(ExceptionMessage.ROOT_CANNOT_BE_RENAMED.getMessage(), e.getMessage());
@@ -20,7 +20,7 @@
 
     // move to existing path
     try {
-      mFileSystemMaster.rename(NESTED_FILE_URI, NESTED_URI);
+      mFileSystemMaster.rename(NESTED_FILE_URI, NESTED_URI, RenameOptions.defaults());
       Assert.fail("Should not be able to overwrite existing file.");
     } catch (FileAlreadyExistsException e) {
       Assert.assertEquals(ExceptionMessage.FILE_ALREADY_EXISTS.getMessage(NESTED_URI.getPath()),
@@ -28,11 +28,11 @@
     }
 
     // move a nested file to a root file
-    mFileSystemMaster.rename(NESTED_FILE_URI, TEST_URI);
+    mFileSystemMaster.rename(NESTED_FILE_URI, TEST_URI, RenameOptions.defaults());
     Assert.assertEquals(mFileSystemMaster.getFileInfo(TEST_URI).getPath(), TEST_URI.getPath());
 
     // move a file where the dst is lexicographically earlier than the source
     AlluxioURI newDst = new AlluxioURI("/abc_test");
-    mFileSystemMaster.rename(TEST_URI, newDst);
+    mFileSystemMaster.rename(TEST_URI, newDst, RenameOptions.defaults());
     Assert.assertEquals(mFileSystemMaster.getFileInfo(newDst).getPath(), newDst.getPath());
   }
\ No newline at end of file
