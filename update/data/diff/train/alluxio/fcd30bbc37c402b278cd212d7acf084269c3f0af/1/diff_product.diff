diff --git a/old_product.java b/new_product.java
index 8ebb01e..05039f1 100644
--- a/old_product.java
+++ b/new_product.java
@@ -16,15 +16,15 @@ public static long parseSpaceSize(String spaceSize) {
     end = end.toLowerCase();
     if (end.isEmpty() || end.equals("b")) {
       return (long) (ret + alpha);
-    } else if (end.equals("kb")) {
+    } else if (end.equals("kb") || end.equals("k")) {
       return (long) (ret * Constants.KB + alpha);
-    } else if (end.equals("mb")) {
+    } else if (end.equals("mb") || end.equals("m")) {
       return (long) (ret * Constants.MB + alpha);
-    } else if (end.equals("gb")) {
+    } else if (end.equals("gb") || end.equals("g")) {
       return (long) (ret * Constants.GB + alpha);
-    } else if (end.equals("tb")) {
+    } else if (end.equals("tb") || end.equals("t")) {
       return (long) (ret * Constants.TB + alpha);
-    } else if (end.equals("pb")) {
+    } else if (end.equals("pb") || end.equals("p")) {
       // When parsing petabyte values, we can't multiply with doubles and longs, since that will
       // lose presicion with such high numbers. Therefore we use a BigDecimal.
       BigDecimal pBDecimal = new BigDecimal(Constants.PB);
