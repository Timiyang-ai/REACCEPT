diff --git a/old_test.java b/new_test.java
index 91fc998..25344d4 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,13 +1,29 @@
 @Test
   public void toThrift() {
+    Random random = new Random();
+    long blockSize = random.nextLong();
+    FileWriteLocationPolicy policy = new RoundRobinPolicy();
+    Mode mode = new Mode((short) random.nextInt());
+    boolean recursive = random.nextBoolean();
+    long ttl = random.nextLong();
+    int writeTier = random.nextInt();
+    WriteType writeType = WriteType.NONE;
+
     CreateFileOptions options = CreateFileOptions.defaults();
+    options.setBlockSizeBytes(blockSize);
+    options.setLocationPolicy(policy);
+    options.setMode(mode);
+    options.setRecursive(recursive);
+    options.setTtl(ttl);
+    options.setTtlAction(TtlAction.FREE);
+    options.setWriteTier(writeTier);
+    options.setWriteType(writeType);
+
     CreateFileTOptions thriftOptions = options.toThrift();
-    Assert.assertTrue(thriftOptions.isRecursive());
-    Assert.assertTrue(thriftOptions.isSetPersisted());
-    Assert.assertEquals(mDefaultWriteType.getUnderStorageType().isSyncPersist(), thriftOptions
-        .isPersisted());
-    Assert.assertEquals(mDefaultBlockSizeBytes, thriftOptions.getBlockSizeBytes());
-    Assert.assertEquals(Constants.NO_TTL, thriftOptions.getTtl());
-    Assert.assertEquals(alluxio.thrift.TTtlAction.Delete, thriftOptions.getTtlAction());
-    Assert.assertFalse(thriftOptions.isSetMode());
+    Assert.assertEquals(blockSize, thriftOptions.getBlockSizeBytes());
+    Assert.assertEquals(recursive, thriftOptions.isRecursive());
+    Assert.assertEquals(writeType.isThrough(), thriftOptions.isPersisted());
+    Assert.assertEquals(ttl, thriftOptions.getTtl());
+    Assert.assertEquals(alluxio.thrift.TTtlAction.Free, thriftOptions.getTtlAction());
+    Assert.assertEquals(mode.toShort(), thriftOptions.getMode());
   }
\ No newline at end of file
