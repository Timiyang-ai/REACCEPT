diff --git a/old_product.java b/new_product.java
index 182cba0..4bf333e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,10 +1,10 @@
-public static void mergeHadoopConfiguration(org.apache.hadoop.conf.Configuration source,
-      AlluxioConfiguration alluxioConfiguration) {
+public static InstancedConfiguration mergeHadoopConfiguration(
+      org.apache.hadoop.conf.Configuration hadoopConf, AlluxioProperties alluxioProps) {
     // Load Alluxio configuration if any and merge to the one in Alluxio file system
     // Push Alluxio configuration to the Job configuration
     Properties alluxioConfProperties = new Properties();
     // Load any Alluxio configuration parameters existing in the Hadoop configuration.
-    for (Map.Entry<String, String> entry : source) {
+    for (Map.Entry<String, String> entry : hadoopConf) {
       String propertyName = entry.getKey();
       if (PropertyKey.isValid(propertyName)) {
         alluxioConfProperties.put(propertyName, entry.getValue());
@@ -12,7 +12,10 @@ public static void mergeHadoopConfiguration(org.apache.hadoop.conf.Configuration
     }
     LOG.info("Loading Alluxio properties from Hadoop configuration: {}", alluxioConfProperties);
     // Merge the relevant Hadoop configuration into Alluxio's configuration.
-    // TODO(jiri): support multiple client configurations (ALLUXIO-2034)
-    alluxioConfiguration.merge(alluxioConfProperties, Source.RUNTIME);
-    alluxioConfiguration.validate();
+
+    alluxioProps.merge(alluxioConfProperties, Source.RUNTIME);
+    // Creting a new instanced configuration from an AlluxioProperties object isn't expensive.
+    InstancedConfiguration mergedConf = new InstancedConfiguration(alluxioProps);
+    mergedConf.validate();
+    return mergedConf;
   }
\ No newline at end of file
