diff --git a/old_test.java b/new_test.java
index ce40cd4..d71029d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -6,25 +6,27 @@
     Assert.assertEquals(Constants.NO_TTL, fileInfo.getTtl());
 
     // No State.
-    mFileSystemMaster.setState(NESTED_FILE_URI, SetAttributeOptions.defaults());
+    mFileSystemMaster.setAttribute(NESTED_FILE_URI, SetAttributeOptions.defaults());
     fileInfo = mFileSystemMaster.getFileInfo(NESTED_FILE_URI);
     Assert.assertFalse(fileInfo.isPinned());
     Assert.assertEquals(Constants.NO_TTL, fileInfo.getTtl());
 
     // Just set pinned flag.
-    mFileSystemMaster.setState(NESTED_FILE_URI, SetAttributeOptions.defaults().setPinned(true));
+    mFileSystemMaster.setAttribute(NESTED_FILE_URI,
+        new SetAttributeOptions.Builder().setPinned(true).build());
     fileInfo = mFileSystemMaster.getFileInfo(NESTED_FILE_URI);
     Assert.assertTrue(fileInfo.isPinned());
     Assert.assertEquals(Constants.NO_TTL, fileInfo.getTtl());
 
     // Both pinned flag and ttl value.
-    mFileSystemMaster.setState(NESTED_FILE_URI, SetAttributeOptions.defaults().setPinned(false)
-        .setTtl(1));
+    mFileSystemMaster.setAttribute(NESTED_FILE_URI,
+        new SetAttributeOptions.Builder().setPinned(false).setTtl(1).build());
     fileInfo = mFileSystemMaster.getFileInfo(NESTED_FILE_URI);
     Assert.assertFalse(fileInfo.isPinned());
     Assert.assertEquals(1, fileInfo.getTtl());
 
     // Set ttl for a directory, raise IllegalArgumentException.
     mThrown.expect(IllegalArgumentException.class);
-    mFileSystemMaster.setState(NESTED_URI, SetAttributeOptions.defaults().setTtl(1));
+    mFileSystemMaster.setAttribute(NESTED_URI,
+        new SetAttributeOptions.Builder().setTtl(1).build());
   }
\ No newline at end of file
