diff --git a/old_test.java b/new_test.java
index caa589b..f8539be 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,15 +1,19 @@
 @Test
-  public void loadFromHadoopConfigurationTest() {
+  public void mergeHadoopConfigurationTest() {
+    Configuration.defaultInit();
     org.apache.hadoop.conf.Configuration hadoopConfig = new org.apache.hadoop.conf.Configuration();
     hadoopConfig.set(Constants.S3_ACCESS_KEY, TEST_S3_ACCCES_KEY);
     hadoopConfig.set(Constants.S3_SECRET_KEY, TEST_S3_SECRET_KEY);
-    hadoopConfig.set(Constants.WORKER_MEMORY_SIZE, TEST_WORKER_MEMORY_SIZE);
+    hadoopConfig.set(TEST_ALLUXIO_PROPERTY, TEST_ALLUXIO_VALUE);
+
     // This hadoop config will not be loaded into Alluxio configuration.
     hadoopConfig.set("hadoop.config.parameter", "hadoop config value");
 
-    Configuration configuration = ConfUtils.loadFromHadoopConfiguration(hadoopConfig);
-    Assert.assertEquals(3, configuration.toMap().size());
-    Assert.assertEquals(TEST_S3_ACCCES_KEY, configuration.get(Constants.S3_ACCESS_KEY));
-    Assert.assertEquals(TEST_S3_SECRET_KEY, configuration.get(Constants.S3_SECRET_KEY));
-    Assert.assertEquals(TEST_WORKER_MEMORY_SIZE, configuration.get(Constants.WORKER_MEMORY_SIZE));
+    Map<String, String> before = Configuration.toMap();
+    ConfUtils.mergeHadoopConfiguration(hadoopConfig);
+    Map<String, String> after = Configuration.toMap();
+    Assert.assertEquals(before.size() + 3, after.size());
+    Assert.assertEquals(TEST_S3_ACCCES_KEY, Configuration.get(Constants.S3_ACCESS_KEY));
+    Assert.assertEquals(TEST_S3_SECRET_KEY, Configuration.get(Constants.S3_SECRET_KEY));
+    Assert.assertEquals(TEST_ALLUXIO_VALUE, Configuration.get(TEST_ALLUXIO_PROPERTY));
   }
\ No newline at end of file
