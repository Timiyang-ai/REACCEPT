diff --git a/old_test.java b/new_test.java
index b911d9b..e5ede25 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,6 +1,8 @@
 @Test
   public void lsrTest() throws IOException, TachyonException {
     FileInfo[] files = new FileInfo[4];
+    String testUser = "test_user_lsr";
+    System.setProperty(Constants.SECURITY_LOGIN_USERNAME, testUser);
 
     TachyonFile fileA = TachyonFSTestUtils.createByteFile(mTfs, "/testRoot/testFileA",
         TachyonStorageType.STORE, UnderStorageType.NO_PERSIST, 10);
@@ -14,21 +16,22 @@
     files[3] = mTfs.getInfo(fileC);
     mFsShell.run(new String[] {"lsr", "/testRoot"});
     String expected = "";
-    String format = "%-10s%-25s%-15s%-5s\n";
+    String format = "%-10s%-25s%-15s%-15s%-5s\n";
     expected +=
         String.format(format, FormatUtils.getSizeFromBytes(10),
             TfsShell.convertMsToDate(files[0].getCreationTimeMs()), "In Memory",
-            "/testRoot/testFileA");
+            testUser, "/testRoot/testFileA");
     expected +=
         String.format(format, FormatUtils.getSizeFromBytes(0),
-            TfsShell.convertMsToDate(files[1].getCreationTimeMs()), "", "/testRoot/testDir");
+            TfsShell.convertMsToDate(files[1].getCreationTimeMs()), "",
+            testUser, "/testRoot/testDir");
     expected +=
         String.format(format, FormatUtils.getSizeFromBytes(20),
             TfsShell.convertMsToDate(files[2].getCreationTimeMs()), "In Memory",
-            "/testRoot/testDir/testFileB");
+            testUser, "/testRoot/testDir/testFileB");
     expected +=
         String.format(format, FormatUtils.getSizeFromBytes(30),
             TfsShell.convertMsToDate(files[3].getCreationTimeMs()), "Not In Memory",
-            "/testRoot/testFileC");
+            testUser, "/testRoot/testFileC");
     Assert.assertEquals(expected, mOutput.toString());
   }
\ No newline at end of file
