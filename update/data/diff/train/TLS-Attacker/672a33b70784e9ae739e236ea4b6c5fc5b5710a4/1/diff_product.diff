diff --git a/old_product.java b/new_product.java
index e2caf3a..eb2f5bd 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,16 +1,18 @@
 @Override
-    public DecryptionResult decrypt(byte[] data) {
+    public DecryptionResult decrypt(DecryptionRequest decryptionRequest) {
         try {
             byte[] plaintext;
             byte[] usedIv;
             ConnectionEndType localConEndType = context.getConnection().getLocalConnectionEndType();
             if (useExplicitIv) {
-                decryptIv = new IvParameterSpec(Arrays.copyOf(data, decryptCipher.getBlockSize()));
+                decryptIv = new IvParameterSpec(Arrays.copyOf(decryptionRequest.getCipherText(),
+                        decryptCipher.getBlockSize()));
                 LOGGER.debug("decryptionIV: " + ArrayConverter.bytesToHexString(decryptIv.getIV()));
 
                 decryptCipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(getKeySet().getReadKey(localConEndType),
                         bulkCipherAlg.getJavaName()), decryptIv);
-                plaintext = decryptCipher.doFinal(Arrays.copyOfRange(data, decryptCipher.getBlockSize(), data.length));
+                plaintext = decryptCipher.doFinal(Arrays.copyOfRange(decryptionRequest.getCipherText(),
+                        decryptCipher.getBlockSize(), decryptionRequest.getCipherText().length));
                 usedIv = decryptIv.getIV();
             } else {
                 decryptIv = new IvParameterSpec(getDecryptionIV());
@@ -18,16 +20,16 @@
 
                 decryptCipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(getKeySet().getReadKey(localConEndType),
                         bulkCipherAlg.getJavaName()), decryptIv);
-                plaintext = decryptCipher.doFinal(data);
+                plaintext = decryptCipher.doFinal(decryptionRequest.getCipherText());
                 usedIv = decryptIv.getIV();
                 // Set next IV
-                setNextDecryptIv(data);
+                setNextDecryptIv(decryptionRequest.getCipherText());
             }
 
             return new DecryptionResult(usedIv, plaintext, useExplicitIv);
         } catch (BadPaddingException | IllegalBlockSizeException | InvalidAlgorithmParameterException
                 | InvalidKeyException | UnsupportedOperationException ex) {
             LOGGER.warn("Could not decrypt Data with the provided parameters. Returning undecrypted data.", ex);
-            return new DecryptionResult(null, data, useExplicitIv);
+            return new DecryptionResult(null, decryptionRequest.getCipherText(), useExplicitIv);
         }
     }
\ No newline at end of file
