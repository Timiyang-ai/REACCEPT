diff --git a/old_product.java b/new_product.java
index 52cb049..a3f1678 100644
--- a/old_product.java
+++ b/new_product.java
@@ -4,6 +4,9 @@ private ValueBuilder eval(final QueryContext ctx, final byte[] qu, final String
     // bind variables and context item
     final HashMap<String, Value> bindings = bindings(1, ctx);
 
+    final QueryContext qc = ctx.proc(new QueryContext(ctx));
+    qc.resource.openDB = openDB;
+
     final Timer to = new Timer(true);
     final Perm tmp = ctx.context.user.perm;
     if(expr.length > 2) {
@@ -20,7 +23,7 @@ private ValueBuilder eval(final QueryContext ctx, final byte[] qu, final String
             // limit reached: perform garbage collection and check again
             if(Performance.memory() > limit) {
               Performance.gc(1);
-              if(Performance.memory() > limit) ctx.stop();
+              if(Performance.memory() > limit) qc.stop();
             }
           }
         }, 500, 500);
@@ -29,14 +32,11 @@ private ValueBuilder eval(final QueryContext ctx, final byte[] qu, final String
       if(ms != 0) {
         to.schedule(new TimerTask() {
           @Override
-          public void run() { ctx.stop(); }
+          public void run() { qc.stop(); }
         }, ms);
       }
     }
 
-    final QueryContext qc = ctx.proc(new QueryContext(ctx));
-    qc.resource.openDB = openDB;
-
     // evaluate query
     try {
       final StaticContext sctx = new StaticContext(qc.context.options.get(MainOptions.XQUERY3));
