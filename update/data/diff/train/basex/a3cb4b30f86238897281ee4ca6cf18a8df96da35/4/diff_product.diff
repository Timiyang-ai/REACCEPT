diff --git a/old_product.java b/new_product.java
index 0c7e998..185a335 100644
--- a/old_product.java
+++ b/new_product.java
@@ -5,7 +5,7 @@ private byte[] string() throws QueryIOException {
     while(pos < length) {
       int ch = consume();
       if(ch == '"') {
-        if(hi != 0) tb.add(hi);
+        if(hi != 0) add(hi);
         skipWs();
         return tb.toArray();
       }
@@ -13,10 +13,10 @@ private byte[] string() throws QueryIOException {
       if(ch == '\\') {
         if(!unescape) {
           if(hi != 0) {
-            tb.add(hi);
+            add(hi);
             hi = 0;
           }
-          tb.addByte((byte) '\\');
+          add('\\');
         }
 
         final int n = consume();
@@ -53,11 +53,11 @@ private byte[] string() throws QueryIOException {
                 else throw error("Illegal hexadecimal digit: '%'", x);
               }
             } else {
-              tb.addByte((byte) 'u');
+              add('u');
               for(int i = 0; i < 4; i++) {
                 final char x = consume();
                 if(x >= '0' && x <= '9' || x >= 'a' && x <= 'f' || x >= 'A' && x <= 'F') {
-                  if(i < 3) tb.addByte((byte) x);
+                  if(i < 3) add(x);
                   else ch = x;
                 } else throw error("Illegal hexadecimal digit: '%'", x);
               }
@@ -66,19 +66,18 @@ private byte[] string() throws QueryIOException {
           default:
             throw error("Unknown character escape: '\\%'", n);
         }
-      } else if(spec != JsonSpec.LIBERAL && ch <= 0x1F) {
+      } else if(!liberal && ch <= 0x1F) {
         throw error("Non-escaped control character: '\\%'", CTRL[ch]);
       }
 
       if(hi != 0) {
-        if(ch >= 0xDC00 && ch <= 0xDFFF)
-          ch = (hi - 0xD800 << 10) + ch - 0xDC00 + 0x10000;
-        else tb.add(hi);
+        if(ch >= 0xDC00 && ch <= 0xDFFF) ch = (hi - 0xD800 << 10) + ch - 0xDC00 + 0x10000;
+        else add(hi);
         hi = 0;
       }
 
       if(ch >= 0xD800 && ch <= 0xDBFF) hi = (char) ch;
-      else tb.add(ch);
+      else add(ch);
     }
     throw eof(" in string literal");
   }
\ No newline at end of file
