diff --git a/old_test.java b/new_test.java
index 5f86ac6..ce8bea6 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,8 +1,8 @@
 @Test
   public void readBinary() {
     // check errors
-    error(_FILE_READ_BINARY.args(PATH1), Err.FILE_WHICH);
-    error(_FILE_READ_BINARY.args(PATH), Err.FILE_DIR);
+    error(_FILE_READ_BINARY.args(PATH1), Err.FILE_NF);
+    error(_FILE_READ_BINARY.args(PATH), Err.FILE_ID);
     // file with single codepoint
     query(_FILE_WRITE.args(PATH1, "0"));
     query(_FILE_READ_BINARY.args(PATH1), "MA==");
@@ -11,11 +11,11 @@
     query(_FILE_READ_BINARY.args(PATH1, 1), "");
     query(_FILE_READ_BINARY.args(PATH1, 1, 0), "");
     query(_FILE_READ_BINARY.args(PATH1, 0, 0), "");
-    error(_FILE_READ_BINARY.args(PATH1, -1), Err.FILE_BOUNDS);
-    error(_FILE_READ_BINARY.args(PATH1, 2), Err.FILE_BOUNDS);
-    error(_FILE_READ_BINARY.args(PATH1, 0, -1), Err.FILE_BOUNDS);
-    error(_FILE_READ_BINARY.args(PATH1, 0, 2), Err.FILE_BOUNDS);
-    error(_FILE_READ_BINARY.args(PATH1, 2, 1), Err.FILE_BOUNDS);
+    error(_FILE_READ_BINARY.args(PATH1, -1), Err.FILE_OOR);
+    error(_FILE_READ_BINARY.args(PATH1, 2), Err.FILE_OOR);
+    error(_FILE_READ_BINARY.args(PATH1, 0, -1), Err.FILE_OOR);
+    error(_FILE_READ_BINARY.args(PATH1, 0, 2), Err.FILE_OOR);
+    error(_FILE_READ_BINARY.args(PATH1, 2, 1), Err.FILE_OOR);
     // file with two codepoints
     query(_FILE_WRITE.args(PATH1, "a\u00e4"));
     query(_FILE_READ_BINARY.args(PATH1), "YcOk");
