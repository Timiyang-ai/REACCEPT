diff --git a/old_test.java b/new_test.java
index f7f2303..e2c8b19 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,9 +4,22 @@
         "declare %R:error('*') function m:b() { 'F' };", "", "F");
     get("declare %R:path('') function m:a() { error(xs:QName('x')) };" +
         "declare %R:error('x') function m:b() { 'F' };", "", "F");
+    get("declare %R:path('') function m:a() { 1 + <a/> };" +
+        "declare %R:error('*:FORG0001') function m:b() { 'F' };", "", "F");
+    get("declare %R:path('') function m:a() { 1 + <a/> };" +
+        "declare %R:error('err:*') function m:b() { 'F' };", "", "F");
+    get("declare %R:path('') function m:a() { 1 + <a/> };" +
+        "declare %R:error('err:FORG0001') function m:b() { 'F' };", "", "F");
     // error (no appropriate error annotation)
     getE("declare %R:path('') function m:a() { error(xs:QName('x')) };" +
-        "declare %R:error('y') function m:b() { 'F' };", "");
+         "declare %R:error('y') function m:b() { 'F' };", "");
+    // error (invalid name test)
+    getE("declare %R:path('') function m:a() { () };" +
+         "declare %R:error('unknown:*') function m:b() { 'F' };", "");
+    getE("declare %R:path('') function m:a() { () };" +
+         "declare %R:error('*:In Valid') function m:b() { 'F' };", "");
+    getE("declare %R:path('') function m:a() { () };" +
+         "declare %R:error('In Valid') function m:b() { 'F' };", "");
     // duplicate error annotations
     getE("declare %R:path('') function m:a() { () };" +
          "declare %R:error('*') function m:b() { 'F' };" +
