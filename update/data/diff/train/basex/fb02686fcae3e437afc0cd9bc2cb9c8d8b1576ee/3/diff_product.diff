diff --git a/old_product.java b/new_product.java
index 39d11a6..c7a4ac2 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,19 +1,18 @@
-TestItem full() throws IOException {
-      final byte[] f = ((TestSession) cs).exec(ServerCmd.FULL, id);
-      final TestItem ti = new TestItem();
-      ti.type = f[0];
-      final int fl = f.length;
-      if(TYPES[ti.type].length > 3) {
-        for(int b = 1; b < fl; b++) {
-          if(f[b] == 0) {
-            ti.uri = Arrays.copyOfRange(f, 1, b);
-            ti.result = Arrays.copyOfRange(f, b + 1, fl);
-            break;
-          }
-        }
-        assertNotNull("No extended info: " + TYPES[ti.type][0], ti.uri);
+TestResult full() throws IOException {
+      final byte[] result = ((TestSession) cs).exec(ServerCmd.FULL, id);
+      final TestResult tr = new TestResult();
+      tr.type = result[0];
+      final int rl = result.length, b = Token.indexOf(result, 0);
+      if(b != -1) {
+        // result includes URI
+        tr.uri = Arrays.copyOfRange(result, 1, b);
+        tr.result = Arrays.copyOfRange(result, b + 1, rl);
       } else {
-        ti.result = Arrays.copyOfRange(f, 1, fl);
+        tr.result = Arrays.copyOfRange(result, 1, rl);
       }
-      return ti;
+
+      final boolean uriResult = tr.uri != null, uriExpected = tr.uri != null;
+      if(uriResult && !uriExpected) fail("No URI expected for " + TYPES[tr.type][0]);
+      if(!uriResult && uriExpected) fail("URI expected for " + TYPES[tr.type][0]);
+      return tr;
     }
\ No newline at end of file
