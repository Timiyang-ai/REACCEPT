diff --git a/old_test.java b/new_test.java
index 0cbdf49..b8b20bf 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,12 +1,19 @@
-@Test public void serialize() {
-    for(final String[] f : TOJSON) {
-      final String qu = _JSON_SERIALIZE.args(f[0]);
-      if(f.length == 1) {
-        error(qu, Err.BXJS_SERIAL, Err.BXJS_CONFIG);
-      } else if(f[1].startsWith("...")) {
-        contains(qu, f[1].substring(3));
-      } else {
-        query(qu, f[1]);
-      }
-    }
+@Test
+  public void serialize() {
+    serialError("<a/>", ""); // invalid tag
+    serialError("<json/>", ""); // no type specified
+    serialError("<json type='o'/>", ""); // invalid type
+    serial("<json type='object'/>", "", "{}");
+    serial("<json objects='json'/>", "", "{}");
+    serial("<json type='array'/>", "", "[]");
+    serial("<json arrays='json'/>", "", "[]");
+    serialError("<json type='number'>1</json>", ""); // no text allowed in json tag
+    serial("<json type='array'><_ type='null'/></json>", "", "[null]");
+    serialError("<json type='array'><_ type='number'/></json>", ""); // value needed
+    serialError("<json type='array'><_ type='boolean'/></json>", ""); // value needed
+    serialError("<json type='array'><_ type='null'>x</_></json>", ""); // no value
+    serial("<json type='array'><_ type='string'/></json>", "", "[\"\"]");
+    serial("<json type='array'><_ type='string'>x</_></json>", "", "[\"x\"]");
+    serial("<json type='array'><_ type='number'>1</_></json>", "", "[1]");
+    serial("<json numbers=\"_\" type='array'><_>1</_></json>", "", "[1]");
   }
\ No newline at end of file
