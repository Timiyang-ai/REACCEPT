diff --git a/old_product.java b/new_product.java
index f976a65..e68390a 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,20 +3,16 @@ private Str serialize(final QueryContext ctx) throws QueryException {
     final Item opt = expr.length > 1 ? expr[1].item(ctx, info) : null;
     final TokenMap map = new FuncParams(Q_OPTIONS, info).parse(opt);
 
-    final ArrayOutput ao = new ArrayOutput();
     final SerializerProp props = new SerializerProp();
-    if(map.contains(HEADER)) props.set(S_CSV_HEADER, string(map.get(HEADER)));
-    if(map.contains(SEPARATOR)) props.set(S_CSV_SEPARATOR, string(map.get(SEPARATOR)));
+    props.set(S_METHOD, M_CSV);
+    // create csv properties and set options
+    final CsvProp cprop = new CsvProp();
+    final byte[] header = map.get(HEADER);
+    if(header != null) cprop.set(CsvProp.HEADER, Util.yes(string(header)));
+    final byte[] sep = map.get(SEPARATOR);
+    if(sep != null) cprop.set(CsvProp.SEPARATOR, string(sep));
+    props.set(S_CSV, cprop.toString());
 
-    try {
-      // run serialization
-      final Serializer ser = new CsvSerializer(ao, props);
-      ser.serialize(node);
-      ser.close();
-    } catch(final SerializerException ex) {
-      throw ex.getCause(info);
-    } catch(final IOException ex) {
-      SERANY.thrw(info, ex);
-    }
-    return Str.get(delete(ao.toArray(), '\r'));
+    // serialize node
+    return Str.get(delete(serialize(node.iter(), props), '\r'));
   }
\ No newline at end of file
