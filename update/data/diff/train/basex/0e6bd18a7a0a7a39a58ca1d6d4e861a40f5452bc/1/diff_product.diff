diff --git a/old_product.java b/new_product.java
index 8ab8c7c..c853d6e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,17 +3,23 @@ private Object method(final Value[] ar, final QueryContext qc) throws Exception
     try {
       final Field f = clazz.getField(method);
       final boolean st = Modifier.isStatic(f.getModifiers());
-      if(ar.length == (st ? 0 : 1)) {
-        return f.get(st ? null : instObj(ar[0]));
-      }
+      if(ar.length == (st ? 0 : 1)) return f.get(st ? null : instObj(ar[0]));
     } catch(final NoSuchFieldException ex) { /* ignored */ }
 
-    for(final Method meth : clazz.getMethods()) {
-      if(!meth.getName().equals(method)) continue;
-      final boolean st = Modifier.isStatic(meth.getModifiers());
-      final Object[] arg = args(meth.getParameterTypes(), null, ar, st);
-      if(arg != null) {
-        Object inst = null;
+    Method meth = null;
+    Object inst = null;
+    Object[] args = null;
+    for(final Method m : clazz.getMethods()) {
+      if(!m.getName().equals(method)) continue;
+      final boolean st = Modifier.isStatic(m.getModifiers());
+      final Class<?>[] pTypes = m.getParameterTypes();
+      final Object[] jargs = javaArgs(pTypes, null, ar, st);
+      if(jargs != null) {
+        if(meth != null) throw JAVAAMBIG_X.get(info, Util.className(clazz) + '.' +
+            method + '#' + pTypes.length);
+        meth = m;
+        args = jargs;
+
         if(!st) {
           inst = instObj(ar[0]);
           if(inst instanceof QueryModule) {
@@ -22,8 +28,9 @@ private Object method(final Value[] ar, final QueryContext qc) throws Exception
             mod.queryContext = qc;
           }
         }
-        return meth.invoke(inst, arg);
       }
     }
+    if(meth != null) return meth.invoke(inst, args);
+
     throw JAVAMETHOD_X_X.get(info, name(), foundArgs(ar));
   }
\ No newline at end of file
