diff --git a/old_product.java b/new_product.java
index f5d4183..96aa32e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -5,35 +5,37 @@ public static String replace(final String p, final InputSource input,
     if(data == null) throw new BaseXException(PROCNODB);
 
     String path = IOFile.normalize(p);
+    String target = "";
     if(path.isEmpty()) throw new BaseXException(DIRERR, path);
 
     final byte[] src = token(path);
     final IntList docs = data.docs(p);
-    // check if path was found
-    if(docs.size() == 0) throw new BaseXException(FILEWHICH, path);
+    final int is = docs.size();
     // check if path points exclusively to files
-    for(int i = 0, is = docs.size(); i < is; i++) {
+    for(int i = 0; i < is; i++) {
       if(!eq(data.text(docs.get(i), true), src))
         throw new BaseXException(DIRERR, path);
     }
 
-    final String target;
     final int i = path.lastIndexOf('/');
     if(i != -1) {
       target = path.substring(0, i);
       path = path.substring(i + 1);
-    } else {
-      target = "";
     }
 
     try {
       if(lock) ctx.register(true);
-      // add new document
-      Add.add(path, target, input, ctx, null, false);
-      // delete old documents if addition was successful
-      for(int d = docs.size() - 1; d >= 0; d--) data.delete(docs.get(d));
-      // flushes changes
-      data.flush();
+      // replace document
+      if(docs.size() > 0) {
+        // add new document
+        Add.add(path, target, input, ctx, null, false);
+        // delete old documents if addition was successful
+        for(int d = docs.size() - 1; d >= 0; d--) data.delete(docs.get(d));
+        // flushes changes
+        data.flush();
+      }
+      // replace binary
+      if(!replace(data, path, input)) throw new BaseXException(PARSEERR, path);
     } finally {
       if(lock) ctx.unregister(true);
     }
