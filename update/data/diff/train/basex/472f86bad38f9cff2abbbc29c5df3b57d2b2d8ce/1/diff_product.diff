diff --git a/old_product.java b/new_product.java
index bad020f..78b8e31 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,27 +3,42 @@ private RestXqError error(final Value value, final QNm name) throws QueryExcepti
 
     // name of parameter
     final String err = toString(value.itemAt(0), name);
-    final NameTest test;
+    final Kind kind;
     QNm qnm = null;
     if(err.equals("*")) {
-      test = new NameTest(false);
+      kind = Kind.WILDCARD;
     } else if(err.startsWith("*:")) {
       final byte[] local = token(err.substring(2));
       if(!XMLToken.isNCName(local)) throw error(INV_CODE, err);
-      test = new NameTest(new QNm(local), NameTest.Kind.NAME, false, null);
+      qnm = new QNm(local);
+      kind = Kind.NAME;
     } else if(err.endsWith(":*")) {
       final byte[] prefix = token(err.substring(0, err.length() - 2));
       if(!XMLToken.isNCName(prefix)) throw error(INV_CODE, err);
       qnm = new QNm(concat(prefix, COLON), function.sc);
-      test = new NameTest(qnm, NameTest.Kind.URI, false, null);
+      kind = Kind.URI;
     } else {
-      final byte[] nm = token(err);
-      if(!XMLToken.isQName(nm)) throw error(INV_CODE, err);
-      qnm = new QNm(nm, function.sc);
-      test = new NameTest(qnm, NameTest.Kind.URI_NAME, false, null);
+      final Matcher m = EQNAME.matcher(err);
+      if(m.matches()) {
+        final byte[] uri = token(m.group(1));
+        final byte[] local = token(m.group(2));
+        if(local.length == 1 && local[0] == '*') {
+          qnm = new QNm(COLON, uri);
+          kind = Kind.URI;
+        } else {
+          if(!XMLToken.isNCName(local) || !Uri.uri(uri).isValid()) throw error(INV_CODE, err);
+          qnm = new QNm(local, uri);
+          kind = Kind.URI_NAME;
+        }
+      } else {
+        final byte[] nm = token(err);
+        if(!XMLToken.isQName(nm)) throw error(INV_CODE, err);
+        qnm = new QNm(nm, function.sc);
+        kind = Kind.URI_NAME;
+      }
     }
     // message
     if(qnm != null && qnm.hasPrefix() && !qnm.hasURI()) throw error(INV_NONS, qnm);
 
-    return new RestXqError(test);
+    return new RestXqError(new NameTest(qnm, kind, false, null));
   }
\ No newline at end of file
