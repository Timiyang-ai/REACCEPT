diff --git a/old_product.java b/new_product.java
index e808222..a829c3f 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,4 @@
-static Iter search(final Data data, final Value terms, final TokenMap map,
+static Iter search(final Data data, final Value terms, final FTOptions opts,
       final StandardFunc fun, final QueryContext ctx) throws QueryException {
 
     final InputInfo info = fun.info;
@@ -8,27 +8,17 @@ static Iter search(final Data data, final Value terms, final TokenMap map,
 
     final FTOpt tmp = ctx.ftOpt();
     final FTOpt opt = new FTOpt().copy(data.meta);
-    FTMode m = FTMode.ANY;
-    if(map != null) {
-      for(final byte[] k : map) {
-        final byte[] v = map.get(k);
-        if(eq(k, FUZZY)) {
-          final boolean t = v.length == 0 || Util.yes(string(v));
-          opt.set(FZ, t);
-        } else if(eq(k, WILDCARDS)) {
-          final boolean t = v.length == 0 || Util.yes(string(v));
-          opt.set(WC, t);
-        } else if(eq(k, MODE)) {
-          m = FTMode.get(v);
-          if(m == null) ELMOPTION.thrw(info, v);
-        } else {
-          ELMOPTION.thrw(info, k);
-        }
-      }
+    FTMode mode = FTMode.ANY;
+    if(opts != null) {
+      opt.set(FZ, opts.is(FTOptions.FUZZY));
+      opt.set(WC, opts.is(FTOptions.WILDCARDS));
+      final String md = opts.get(FTOptions.MODE);
+      mode = FTMode.get(md);
+      if(mode == null) ELMOPTION.thrw(info, md);
     }
 
     ctx.ftOpt(opt);
-    final FTWords words = new FTWords(info, ic, terms, m, ctx);
+    final FTWords words = new FTWords(info, ic, terms, mode, ctx);
     ctx.ftOpt(tmp);
     return new FTIndexAccess(info, words, ic).iter(ctx);
   }
\ No newline at end of file
