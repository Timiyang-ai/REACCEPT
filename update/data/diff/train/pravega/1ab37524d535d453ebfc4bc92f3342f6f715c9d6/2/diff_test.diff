diff --git a/old_test.java b/new_test.java
index b9bf679..a8bbdbb 100644
--- a/old_test.java
+++ b/new_test.java
@@ -5,7 +5,7 @@
 
         // Test to get existent scope
         when(mockControllerService.getScope(scope1)).thenReturn(CompletableFuture.completedFuture("scope1"));
-        Response response = client.target(resourceURI).request().buildGet().invoke();
+        Response response = addAuthHeaders(client.target(resourceURI).request()).buildGet().invoke();
         assertEquals("Get existent scope", 200, response.getStatus());
         response.close();
 
@@ -13,7 +13,7 @@
         when(mockControllerService.getScope("scope2")).thenReturn(CompletableFuture.supplyAsync(() -> {
             throw StoreException.create(StoreException.Type.DATA_NOT_FOUND, "scope2");
         }));
-        response = client.target(resourceURI2).request().buildGet().invoke();
+        response = addAuthHeaders(client.target(resourceURI2).request()).buildGet().invoke();
         assertEquals("Get non existent scope", 404, response.getStatus());
         response.close();
 
@@ -21,7 +21,7 @@
         final CompletableFuture<String> completableFuture2 = new CompletableFuture<>();
         completableFuture2.completeExceptionally(new Exception());
         when(mockControllerService.getScope(scope1)).thenReturn(completableFuture2);
-        response = client.target(resourceURI).request().buildGet().invoke();
+        response = addAuthHeaders(client.target(resourceURI).request()).buildGet().invoke();
         assertEquals("Get scope fail test", 500, response.getStatus());
         response.close();
     }
\ No newline at end of file
