diff --git a/old_test.java b/new_test.java
index 18f4251..26831ee 100644
--- a/old_test.java
+++ b/new_test.java
@@ -6,21 +6,21 @@
         // Test to create a new scope.
         when(mockControllerService.createScope(scope1)).thenReturn(CompletableFuture.completedFuture(
                 CreateScopeStatus.newBuilder().setStatus(CreateScopeStatus.Status.SUCCESS).build()));
-        Response response = client.target(resourceURI).request().buildPost(Entity.json(createScopeRequest)).invoke();
+        Response response = addAuthHeaders(client.target(resourceURI).request()).buildPost(Entity.json(createScopeRequest)).invoke();
         assertEquals("Create Scope response code", 201, response.getStatus());
         response.close();
 
         // Test to create an existing scope.
         when(mockControllerService.createScope(scope1)).thenReturn(CompletableFuture.completedFuture(
                 CreateScopeStatus.newBuilder().setStatus(CreateScopeStatus.Status.SCOPE_EXISTS).build()));
-        response = client.target(resourceURI).request().buildPost(Entity.json(createScopeRequest)).invoke();
+        response = addAuthHeaders(client.target(resourceURI).request()).buildPost(Entity.json(createScopeRequest)).invoke();
         assertEquals("Create Scope response code", 409, response.getStatus());
         response.close();
 
         // create scope failure.
         when(mockControllerService.createScope(scope1)).thenReturn(CompletableFuture.completedFuture(
                 CreateScopeStatus.newBuilder().setStatus(CreateScopeStatus.Status.FAILURE).build()));
-        response = client.target(resourceURI).request().buildPost(Entity.json(createScopeRequest)).invoke();
+        response = addAuthHeaders(client.target(resourceURI).request()).buildPost(Entity.json(createScopeRequest)).invoke();
         assertEquals("Create Scope response code", 500, response.getStatus());
         response.close();
 
@@ -28,7 +28,7 @@
         when(mockControllerService.createScope(scope1)).thenReturn(CompletableFuture.completedFuture(
                 CreateScopeStatus.newBuilder().setStatus(CreateScopeStatus.Status.SCOPE_EXISTS).build()));
         createScopeRequest.setScopeName("_system");
-        response = client.target(resourceURI).request().buildPost(Entity.json(createScopeRequest)).invoke();
+        response = addAuthHeaders(client.target(resourceURI).request()).buildPost(Entity.json(createScopeRequest)).invoke();
         assertEquals("Create Scope response code", 400, response.getStatus());
         response.close();
     }
\ No newline at end of file
