diff --git a/old_test.java b/new_test.java
index 0a9ef47..4560e9d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -2,6 +2,9 @@
     public void testGetOrAssignStreamSegmentId() {
         final int segmentCount = 10;
         final int transactionsPerSegment = 5;
+        final long noSegmentId = ContainerMetadata.NO_STREAM_SEGMENT_ID;
+        AtomicLong currentSegmentId = new AtomicLong(Integer.MAX_VALUE);
+        Supplier<Long> nextSegmentId = () -> currentSegmentId.decrementAndGet() % 2 == 0 ? noSegmentId : currentSegmentId.get();
 
         @Cleanup
         TestContext context = new TestContext();
@@ -10,14 +13,14 @@
         for (int i = 0; i < segmentCount; i++) {
             String segmentName = getName(i);
             storageSegments.add(segmentName);
-            setAttributes(segmentName, storageSegments.size() % ATTRIBUTE_COUNT, context);
+            setAttributes(segmentName, nextSegmentId.get(), storageSegments.size() % ATTRIBUTE_COUNT, context);
 
             for (int j = 0; j < transactionsPerSegment; j++) {
                 // There is a small chance of a name conflict here, but we don't care. As long as we get at least one
                 // Transaction per segment, we should be fine.
                 String transactionName = StreamSegmentNameUtils.getTransactionNameFromId(segmentName, UUID.randomUUID());
                 storageSegments.add(transactionName);
-                setAttributes(transactionName, storageSegments.size() % ATTRIBUTE_COUNT, context);
+                setAttributes(transactionName, nextSegmentId.get(), storageSegments.size() % ATTRIBUTE_COUNT, context);
             }
         }
 
