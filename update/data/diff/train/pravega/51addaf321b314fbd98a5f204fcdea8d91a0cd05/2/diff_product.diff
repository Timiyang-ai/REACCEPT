diff --git a/old_product.java b/new_product.java
index e7d66de..0bec778 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,21 +1,22 @@
 @Override
-    public void getStream(final String scope, final String stream, final SecurityContext securityContext,
+    public void getStream(final String scopeName, final String streamName, final SecurityContext securityContext,
             final AsyncResponse asyncResponse) {
-        long traceId = LoggerHelpers.traceEnter(log, "getStreamConfig");
+        long traceId = LoggerHelpers.traceEnter(log, "getStream");
 
-        StreamMetadataStore streamStore = controllerService.getStreamStore();
-        streamStore.getConfiguration(scope, stream)
-                .thenApply(streamConfig -> {
-                    return Response.status(Status.OK).entity(ModelHelper.encodeStreamResponse(streamConfig)).build();
-                })
+        controllerService.getStream(scopeName, streamName)
+                .thenApply(streamConfig -> Response.status(Status.OK)
+                        .entity(ModelHelper.encodeStreamResponse(streamConfig))
+                        .build())
                 .exceptionally(exception -> {
-                    if (exception.getCause() instanceof DataNotFoundException || exception instanceof DataNotFoundException) {
+                    if (exception.getCause() instanceof DataNotFoundException
+                            || exception instanceof DataNotFoundException) {
+                        log.warn("Stream: {}/{} not found", scopeName, streamName);
                         return Response.status(Status.NOT_FOUND).build();
                     } else {
-                        log.debug("Exception occurred while executing getStreamConfig: " + exception);
+                        log.warn("getStream for {}/{} failed with exception: {}", scopeName, streamName, exception);
                         return Response.status(Status.INTERNAL_SERVER_ERROR).build();
                     }
-                }).thenApply(response -> asyncResponse.resume(response));
+                }).thenApply(asyncResponse::resume);
 
-        LoggerHelpers.traceLeave(log, "getStreamConfig", traceId);
+        LoggerHelpers.traceLeave(log, "getStream", traceId);
     }
\ No newline at end of file
