diff --git a/old_test.java b/new_test.java
index df3f833..63d166c 100644
--- a/old_test.java
+++ b/new_test.java
@@ -7,12 +7,14 @@
         MemoryOperationLog opLog = new MemoryOperationLog();
         ArrayList<TestReadIndex.MethodInvocation> methodInvocations = new ArrayList<>();
         TestReadIndex readIndex = new TestReadIndex(methodInvocations::add);
-        MemoryLogUpdater updater = new MemoryLogUpdater(opLog, new CacheUpdater(new InMemoryCache("0"), readIndex));
+        AtomicInteger flushCallbackCallCount = new AtomicInteger();
+        MemoryLogUpdater updater = new MemoryLogUpdater(opLog, new CacheUpdater(new InMemoryCache("0"), readIndex), flushCallbackCallCount::incrementAndGet);
         ArrayList<Operation> operations = populate(updater, segmentCount, operationCountPerType);
 
         methodInvocations.clear(); // We've already tested up to here.
         updater.flush();
-        Assert.assertEquals("Unexpected number of calls to the ReadIndex.", 1, methodInvocations.size());
+        Assert.assertEquals("Unexpected number of calls to the ReadIndex triggerFutureReads method.", 1, methodInvocations.size());
+        Assert.assertEquals("Unexpected number of calls to the flushCallback provided in the constructor.", 1, flushCallbackCallCount.get());
         TestReadIndex.MethodInvocation mi = methodInvocations.get(0);
         Assert.assertEquals("No call to ReadIndex.triggerFutureReads() after call to flush().", TestReadIndex.TRIGGER_FUTURE_READS, mi.methodName);
         Collection<Long> triggerSegmentIds = (Collection<Long>) mi.args.get("streamSegmentIds");
