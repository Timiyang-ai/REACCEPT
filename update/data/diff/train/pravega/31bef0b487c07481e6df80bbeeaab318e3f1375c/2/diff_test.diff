diff --git a/old_test.java b/new_test.java
index b957227..d8d068d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,7 +1,7 @@
 @Test
     public void testCleanup() {
         // Expire each Segment at a different stage.
-        final StreamSegmentContainerMetadata m = new StreamSegmentContainerMetadata(CONTAINER_ID);
+        final StreamSegmentContainerMetadata m = new MetadataBuilder(CONTAINER_ID).buildAs();
 
         // Create a number of segments, out of which every 4th one has a transaction (25%).
         // Each segment has a 'LastUsed' set in incremental order.
@@ -20,7 +20,7 @@
 
         // Truncate everything and expire all segments.
         m.removeTruncationMarkers(maxLastUsed);
-        Collection<SegmentMetadata> evictionCandidates = m.getEvictionCandidates(maxLastUsed);
+        Collection<SegmentMetadata> evictionCandidates = m.getEvictionCandidates(maxLastUsed, Integer.MAX_VALUE);
 
         // Pick a Transaction and a non-related Segment and touch them. Then verify all but the three involved Segments are evicted.
         final long touchedSeqNo = maxLastUsed + 10;
@@ -49,7 +49,7 @@
         }
 
         // Now expire the remaining segments and verify.
-        evictionCandidates = m.getEvictionCandidates(touchedSeqNo + 1);
+        evictionCandidates = m.getEvictionCandidates(touchedSeqNo + 1, Integer.MAX_VALUE);
         evictedSegments = m.cleanup(evictionCandidates, touchedSeqNo + 1);
 
         Assert.assertEquals("Unexpected number of segments were evicted (second-cleanup).",
