diff --git a/old_product.java b/new_product.java
index 70eacab..2c716bd 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,10 +1,11 @@
 synchronized List<Write> getWritesToExecute(long maximumAccumulatedSize) {
+        Exceptions.checkNotClosed(this.closed, this);
         long accumulatedSize = 0;
         int activeWriteCount = 0;
 
         // Collect all remaining writes, as long as they are not currently in-progress and have the same ledger id
         // as the first item in the ledger.
-        long firstLedgerId = this.writes.peekFirst().getLedgerMetadata().getLedgerId();
+        long firstLedgerId = this.writes.peekFirst().getWriteLedger().metadata.getLedgerId();
         boolean canSkip = true;
 
         List<Write> result = new ArrayList<>();
@@ -26,7 +27,7 @@ synchronized List<Write> getWritesToExecute(long maximumAccumulatedSize) {
                     // with their updating their status. Try again next time (when that write completes).
                     return Collections.emptyList();
                 }
-            } else if (write.getLedgerMetadata().getLedgerId() != firstLedgerId) {
+            } else if (write.getWriteLedger().metadata.getLedgerId() != firstLedgerId) {
                 // We cannot initiate writes in a new ledger until all writes in the previous ledger completed.
                 break;
             } else if (!write.isDone()) {
