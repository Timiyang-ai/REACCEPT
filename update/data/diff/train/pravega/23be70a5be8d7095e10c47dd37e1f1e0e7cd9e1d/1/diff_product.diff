diff --git a/old_product.java b/new_product.java
index 38a469d..7b6ac6b 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,13 +1,13 @@
-CompletableFuture<Collection<BucketUpdate>> groupByBucket(DirectSegmentAccess segment, Collection<BucketUpdate.KeyUpdate> keyUpdates,
+CompletableFuture<Collection<BucketUpdate.Builder>> groupByBucket(DirectSegmentAccess segment, Collection<BucketUpdate.KeyUpdate> keyUpdates,
                                                               TimeoutTimer timer) {
         val updatesByHash = keyUpdates.stream()
                                       .collect(Collectors.groupingBy(k -> this.hasher.hash(k.getKey())));
         return locateBuckets(segment, updatesByHash.keySet(), timer)
                 .thenApplyAsync(buckets -> {
-                    val result = new HashMap<TableBucket, BucketUpdate>();
+                    val result = new HashMap<TableBucket, BucketUpdate.Builder>();
                     buckets.forEach((keyHash, bucket) -> {
                         // Add the bucket to the result and record this Key as a "new" key in it.
-                        BucketUpdate bu = result.computeIfAbsent(bucket, BucketUpdate::new);
+                        BucketUpdate.Builder bu = result.computeIfAbsent(bucket, BucketUpdate::forBucket);
                         updatesByHash.get(keyHash).forEach(bu::withKeyUpdate);
                     });
 
