diff --git a/old_test.java b/new_test.java
index d294336..fe45506 100644
--- a/old_test.java
+++ b/new_test.java
@@ -15,7 +15,8 @@
             // Generate keys, and record them where needed.
             for (int j = 0; j < hashesPerBucket; j++) {
                 byte[] key = new byte[KeyHasher.HASH_SIZE_BYTES * 4];
-                keyUpdates.add(new BucketUpdate.KeyUpdate(new HashedArray(key), i * hashesPerBucket + j, true));
+                long offset = i * hashesPerBucket + j;
+                keyUpdates.add(new BucketUpdate.KeyUpdate(new HashedArray(key), offset, offset, true));
                 rnd.nextBytes(key);
                 hashToBuckets.put(KeyHashers.DEFAULT_HASHER.hash(key), bucket);
             }
@@ -25,7 +26,8 @@
         val w = new CustomLocateBucketIndexer(KeyHashers.DEFAULT_HASHER, executorService(), hashToBuckets);
         val allKeyUpdates = new ArrayList<BucketUpdate.KeyUpdate>();
         bucketsToKeys.values().forEach(allKeyUpdates::addAll);
-        val bucketUpdates = w.groupByBucket(null, allKeyUpdates, new TimeoutTimer(TIMEOUT)).join();
+        val bucketUpdates = w.groupByBucket(null, allKeyUpdates, new TimeoutTimer(TIMEOUT)).join()
+                .stream().map(BucketUpdate.Builder::build).collect(Collectors.toList());
 
         Assert.assertEquals("Unexpected number of Bucket Updates.", bucketCount, bucketUpdates.size());
         for (BucketUpdate bu : bucketUpdates) {
