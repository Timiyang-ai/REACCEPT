diff --git a/old_product.java b/new_product.java
index 77937b9..4d136b3 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,12 +1,22 @@
 @Override
-    public void listStreams(final String scopeName, final SecurityContext securityContext,
-            final AsyncResponse asyncResponse) {
+    public void listStreams(final String scopeName, final String showInternalStreams,
+                            final SecurityContext securityContext, final AsyncResponse asyncResponse) {
         long traceId = LoggerHelpers.traceEnter(log, "listStreams");
 
+        boolean showOnlyInternalStreams = showInternalStreams != null && showInternalStreams.equals("true");
         controllerService.listStreamsInScope(scopeName)
                 .thenApply(streamsList -> {
                     StreamsList streams = new StreamsList();
-                    streamsList.forEach(stream -> streams.addStreamsItem(ModelHelper.encodeStreamResponse(stream)));
+                    streamsList.forEach(stream -> {
+                        // If internal streams are requested select only the ones that have the special stream names
+                        // otherwise display the regular user created streams.
+                        // TODO: Remove the 200 size limit once issue - https://github.com/pravega/pravega/issues/926
+                        // is fixed.
+                        if ((!showOnlyInternalStreams ^ stream.getStreamName().startsWith(INTERNAL_NAME_PREFIX)) &&
+                                streams.getStreams().size() < 200) {
+                            streams.addStreamsItem(ModelHelper.encodeStreamResponse(stream));
+                        }
+                    });
                     log.info("Successfully fetched streams for scope: {}", scopeName);
                     return Response.status(Status.OK).entity(streams).build();
                 }).exceptionally(exception -> {
