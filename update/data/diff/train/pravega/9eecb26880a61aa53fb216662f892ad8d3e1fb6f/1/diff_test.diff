diff --git a/old_test.java b/new_test.java
index bfd044b..e4b9aef 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,17 +1,17 @@
 @Test
     public void testGetOrAssignStreamSegmentId() {
         final int segmentCount = 10;
-        final int batchesPerSegment = 5;
+        final int transactionsPerSegment = 5;
 
         HashSet<String> storageSegments = new HashSet<>();
         for (int i = 0; i < segmentCount; i++) {
             String segmentName = getName(i);
             storageSegments.add(segmentName);
-            for (int j = 0; j < batchesPerSegment; j++) {
+            for (int j = 0; j < transactionsPerSegment; j++) {
                 // There is a small chance of a name conflict here, but we don't care. As long as we get at least one
-                // batch per segment, we should be fine.
-                String batchName = StreamSegmentNameUtils.generateBatchStreamSegmentName(segmentName);
-                storageSegments.add(batchName);
+                // Transaction per segment, we should be fine.
+                String transactionName = StreamSegmentNameUtils.generateBatchStreamSegmentName(segmentName);
+                storageSegments.add(transactionName);
             }
         }
 
@@ -37,23 +37,23 @@
             }
         }
 
-        // Now, map all the batches.
+        // Now, map all the Transactions.
         for (String name : storageSegments) {
             String parentName = StreamSegmentNameUtils.getParentStreamSegmentName(name);
             if (parentName != null) {
                 long id = context.mapper.getOrAssignStreamSegmentId(name, TIMEOUT).join();
-                Assert.assertNotEquals("No id was assigned for Batch " + name, ContainerMetadata.NO_STREAM_SEGMENT_ID, id);
+                Assert.assertNotEquals("No id was assigned for Transaction " + name, ContainerMetadata.NO_STREAM_SEGMENT_ID, id);
                 SegmentMetadata sm = context.metadata.getStreamSegmentMetadata(id);
-                Assert.assertNotNull("No metadata was created for Batch " + name, sm);
+                Assert.assertNotNull("No metadata was created for Transaction " + name, sm);
                 long expectedLength = getInitialLength.apply(name);
                 boolean expectedSeal = isSealed.test(name);
-                Assert.assertEquals("Metadata does not have the expected length for Batch " + name, expectedLength, sm.getDurableLogLength());
-                Assert.assertEquals("Metadata does not have the expected value for isSealed for Batch " + name, expectedSeal, sm.isSealed());
+                Assert.assertEquals("Metadata does not have the expected length for Transaction " + name, expectedLength, sm.getDurableLogLength());
+                Assert.assertEquals("Metadata does not have the expected value for isSealed for Transaction " + name, expectedSeal, sm.isSealed());
 
                 // Check parenthood.
-                Assert.assertNotEquals("No parent defined in metadata for Batch " + name, ContainerMetadata.NO_STREAM_SEGMENT_ID, sm.getParentId());
+                Assert.assertNotEquals("No parent defined in metadata for Transaction " + name, ContainerMetadata.NO_STREAM_SEGMENT_ID, sm.getParentId());
                 long parentId = context.metadata.getStreamSegmentId(parentName);
-                Assert.assertEquals("Unexpected parent defined in metadata for Batch " + name, parentId, sm.getParentId());
+                Assert.assertEquals("Unexpected parent defined in metadata for Transaction " + name, parentId, sm.getParentId());
             }
         }
     }
\ No newline at end of file
