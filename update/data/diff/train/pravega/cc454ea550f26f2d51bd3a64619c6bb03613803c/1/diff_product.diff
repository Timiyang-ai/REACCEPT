diff --git a/old_product.java b/new_product.java
index 876667c..9a4ff1b 100644
--- a/old_product.java
+++ b/new_product.java
@@ -6,7 +6,10 @@ public static void throwIfIllegalArrayRange(long startIndex, int length, long lo
 
         // Check for valid start index.
         if (startIndex < lowBoundInclusive || startIndex >= upBoundExclusive) {
-            throw new ArrayIndexOutOfBoundsException(String.format("%s: value must be in interval [%d, %d), given %d.", startIndexArgName, lowBoundInclusive, upBoundExclusive, startIndex));
+            // The only valid case here is if the range has zero elements and the array bounds also has zero elements.
+            if (!(startIndex == 0 && length == 0 && lowBoundInclusive == 0 && upBoundExclusive == 0)) {
+                throw new ArrayIndexOutOfBoundsException(String.format("%s: value must be in interval [%d, %d), given %d.", startIndexArgName, lowBoundInclusive, upBoundExclusive, startIndex));
+            }
         }
 
         // Check for valid end offset. Note that end offset can be equal to upBoundExclusive, because this is a range.
