diff --git a/old_test.java b/new_test.java
index a889676..ad8a2ed 100644
--- a/old_test.java
+++ b/new_test.java
@@ -6,10 +6,9 @@
         index.initialize(TIMEOUT).join();
         val entries = generate(count);
         sort(entries);
-        index.put(entries, TIMEOUT).join();
+        index.update(entries, TIMEOUT).join();
 
         // Delete every 1/3 of the keys
-        val toDelete = new ArrayList<ByteArraySegment>();
         val toUpdate = new ArrayList<PageEntry>();
         val expectedEntries = new ArrayList<PageEntry>(entries);
         val rnd = new Random(0);
@@ -17,13 +16,10 @@
             PageEntry e = expectedEntries.get(i);
             boolean delete = i % 3 == 0;
             boolean update = i % 2 == 0;
-            if (delete) {
+            if (delete && !update) {
                 // Delete about 1/3 of the entries.
-                toDelete.add(expectedEntries.get(i).getKey());
-                if (!update) {
-                    // We don't want to remove this if we're just about to update it.
+                toUpdate.add(PageEntry.noValue(expectedEntries.get(i).getKey()));
                     expectedEntries.remove(i);
-                }
             }
 
             if (update) {
@@ -37,8 +33,7 @@
         }
 
         // Perform the removals and updates.
-        index.remove(toDelete, TIMEOUT).join();
-        index.put(toUpdate, TIMEOUT).join();
+        index.update(toUpdate, TIMEOUT).join();
 
         // Verify final result.
         check("Unexpected index contents.", index, expectedEntries, 0);
