diff --git a/old_product.java b/new_product.java
index cc7ebd8..b2f9671 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,20 +1,22 @@
-public void append(Operation operation) throws IOException {
+public void append(T logItem) throws IOException {
         Exceptions.throwIfClosed(this.closed, this);
+        long seqNo = logItem.getSequenceNumber();
+        Exceptions.throwIfIllegalArgument(this.lastSerializedSequenceNumber < seqNo, "logItem", "Invalid sequence number. Expected: greater than %d, given: %d.", this.lastSerializedSequenceNumber, seqNo);
 
-        // TODO: consider checking Operation.getSequenceNumber() monotonicity. Make sure it sticks across multiple instances.
+        // Remember the last Started SeqNo, in case of failure.
         long previousLastStartedSequenceNumber = this.lastStartedSequenceNumber;
         try {
             // Indicate to the output stream that are about to write a new record.
             this.outputStream.startNewRecord();
 
             // Completely serialize the entry. Note that this may span more than one Data Frame.
-            this.lastStartedSequenceNumber = operation.getSequenceNumber();
-            operation.serialize(this.outputStream);
-            this.lastSerializedSequenceNumber = operation.getSequenceNumber();
+            this.lastStartedSequenceNumber = seqNo;
+            logItem.serialize(this.outputStream);
+            this.lastSerializedSequenceNumber = seqNo;
         }
-        catch (IOException ex) {
+        catch (Exception ex) {
             // Discard any information that we have about this record (pretty much revert back to where startNewEntry() would have begun writing).
-            // The try-catch inside handleDataFrameComplete() deals with the DataFrame-level handling; here we just deal with this operation.
+            // The try-catch inside handleDataFrameComplete() deals with the DataFrame-level handling; here we just deal with this LogItem.
             this.outputStream.discardRecord();
             this.lastSerializedSequenceNumber = previousLastStartedSequenceNumber;
             throw ex;
