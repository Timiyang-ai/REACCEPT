diff --git a/old_test.java b/new_test.java
index bf07299..da5b834 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,8 +1,9 @@
-@Test
+@SuppressWarnings("unchecked")
+	@Test
     public void testRepairSurvivors()
     {
         InitiatorMailbox mailbox = mock(InitiatorMailbox.class);
-        Term term = new Term(null, 0, 0L, mailbox);
+        Term term = new Term(mock(ZooKeeper.class), 0, 0L, mailbox);
 
         // missing 4, 5
         Term.ReplicaRepairStruct r1 = new Term.ReplicaRepairStruct();
@@ -31,15 +32,16 @@
         // call the function being tested...
         term.repairSurvivors();
 
-        // verify that r1 saw 4 and 5
-        verify(mailbox).repairReplicaWith(1L, msgs[4]);
-        verify(mailbox).repairReplicaWith(1L, msgs[5]);
+        List<Long> repair3 = new ArrayList<Long>();
+        repair3.add(3L);
+        verify(mailbox).repairReplicasWith(repair3, msgs[3]);
 
-        // verify that r3 saw 3, 4, 5
-        verify(mailbox).repairReplicaWith(3L, msgs[3]);
-        verify(mailbox).repairReplicaWith(3L, msgs[4]);
-        verify(mailbox).repairReplicaWith(3L, msgs[5]);
+        List<Long> repair4And5 = new ArrayList<Long>();
+        repair4And5.add(1L);
+        repair4And5.add(3L);
+        verify(mailbox).repairReplicasWith(repair4And5, msgs[4]);
+        verify(mailbox).repairReplicasWith(repair4And5, msgs[5]);
 
-        // verify exactly 5 repairs happened.
-        verify(mailbox, times(5)).repairReplicaWith(anyLong(), any(Iv2RepairLogResponseMessage.class));
+        // verify exactly 3 repairs happened.
+        verify(mailbox, times(3)).repairReplicasWith(any(repair3.getClass()), any(Iv2RepairLogResponseMessage.class));
     }
\ No newline at end of file
