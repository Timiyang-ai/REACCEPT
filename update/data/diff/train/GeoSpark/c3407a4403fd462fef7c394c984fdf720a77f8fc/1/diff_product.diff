diff --git a/old_product.java b/new_product.java
index c959403..15fc2d7 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,35 +1,21 @@
-public static int getSampleNumbers(Integer numPartitions, long totalNumberOfRecords, long givenSampleNumbers) throws Exception{
-    	Long sampleNumber = new Long(0);
-
-    	if(givenSampleNumbers>0)
-    	{
-    		// This means that the user manually specifies the sample number
-    		sampleNumber = givenSampleNumbers;
-    		return sampleNumber.intValue();
-    	}
-    	else
+public static int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers) {
+    	if(givenSampleNumbers > 0)
     	{
-    		// Follow GeoSpark internal sampling rule
-        	/*
-        	 * If the input RDD is too small, Geospark will use the entire RDD instead of taking samples.
-        	 */
-        	if(totalNumberOfRecords>=1000)
-        	{
-        		sampleNumber = totalNumberOfRecords / 100;
-        	}
-        	else
-        	{
-        		sampleNumber = totalNumberOfRecords;
-        	}
-        	
-    		if(sampleNumber > Integer.MAX_VALUE) {
-    			sampleNumber = new Long(Integer.MAX_VALUE);
-    		}
-            if(sampleNumber < 2*numPartitions ) {
-                // Partition size is too big. Should throw exception for this.
-                throw new Exception("[RDDSampleUtils][getSampleNumbers] Too many RDD partitions. Call SpatialRDD.setSampleNumber() to manually increase sample or make partitionNum less than "+sampleNumber/2);
-            }
-            return sampleNumber.intValue();
+    		if (givenSampleNumbers > totalNumberOfRecords) {
+    			throw new IllegalArgumentException("Number of samples cannot be larger than total number of records.");
+			}
+    		return givenSampleNumbers;
     	}
 
+    	// Make sure that number of records >= 2 * number of partitions
+		if (totalNumberOfRecords < 2 * numPartitions) {
+    		throw new IllegalArgumentException("Number of partitions cannot be larger than half of total number of records.");
+		}
+
+		if (totalNumberOfRecords < 1000) {
+			return (int) totalNumberOfRecords;
+		}
+
+		final int minSampleCnt = numPartitions * 2;
+    	return (int) Math.max(minSampleCnt, Math.min(totalNumberOfRecords / 100, Integer.MAX_VALUE));
 	}
\ No newline at end of file
