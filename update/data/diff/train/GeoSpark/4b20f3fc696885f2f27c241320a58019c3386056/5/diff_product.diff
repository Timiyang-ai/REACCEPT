diff --git a/old_product.java b/new_product.java
index 8647891..93c1e35 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,10 +1,10 @@
-public static JavaRDD<Point> SpatialRangeQuery(PointRDD spatialRDD, Envelope queryWindow, Integer condition, boolean useIndex) throws Exception {
+public static JavaRDD<Point> SpatialRangeQuery(PointRDD spatialRDD, Envelope queryWindow, boolean considerBoundaryIntersection, boolean useIndex) throws Exception {
 		if(useIndex==true)
 		{
 	        if(spatialRDD.indexedRawRDD == null) {
 	            throw new Exception("[RangeQuery][SpatialRangeQuery] Index doesn't exist. Please build index on rawSpatialRDD.");
 	        }
-			JavaRDD<Object> result = spatialRDD.indexedRawRDD.mapPartitions(new RangeFilterUsingIndex(queryWindow));
+			JavaRDD<Object> result = spatialRDD.indexedRawRDD.mapPartitions(new RangeFilterUsingIndex(queryWindow,considerBoundaryIntersection));
 			return result.map(new Function<Object, Point>()
 			{
 
@@ -16,7 +16,7 @@ public static JavaRDD<Point> SpatialRangeQuery(PointRDD spatialRDD, Envelope que
 			});
 		}
 		else{
-			JavaRDD<Object> result = spatialRDD.getRawSpatialRDD().filter(new GeometryRangeFilter(queryWindow, condition));
+			JavaRDD<Object> result = spatialRDD.getRawSpatialRDD().filter(new RangeFilter(queryWindow, considerBoundaryIntersection));
 			return result.map(new Function<Object,Point>()
 			{
 				@Override
