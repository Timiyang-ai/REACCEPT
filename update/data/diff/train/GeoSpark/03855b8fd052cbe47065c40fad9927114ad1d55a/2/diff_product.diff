diff --git a/old_product.java b/new_product.java
index 2022be5..35248b5 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,29 @@
-public static PointRDD SpatialRangeQueryUsingIndex(PointRDD pointRDD, Envelope envelope, Integer condition) {
-        if(pointRDD.indexedRDDNoId == null) {
-            throw new NullPointerException("Need to invoke buildIndex() first, indexedRDDNoId is null");
-        }
-		JavaRDD<Point> result = pointRDD.indexedRDDNoId.mapPartitions(new PointRangeFilterUsingIndex(envelope));
-		return new PointRDD(result);
+public static JavaRDD<Point> SpatialRangeQuery(PointRDD spatialRDD, Polygon queryWindow, Integer condition, boolean useIndex) throws Exception {
+		if(useIndex==true)
+		{
+	        if(spatialRDD.indexedRawRDD == null) {
+	            throw new Exception("[RangeQuery][SpatialRangeQuery] Index doesn't exist. Please build index on rawSpatialRDD.");
+	        }
+			JavaRDD<Object> result = spatialRDD.indexedRawRDD.mapPartitions(new RangeFilterUsingIndex(queryWindow));
+			return result.map(new Function<Object, Point>()
+			{
+
+				@Override
+				public Point call(Object spatialObject) throws Exception {
+					return (Point)spatialObject;
+				}
+				
+			});
+		}
+		else{
+			JavaRDD<Object> result = spatialRDD.getRawSpatialRDD().filter(new GeometryRangeFilter(queryWindow, condition));
+			return result.map(new Function<Object,Point>()
+			{
+				@Override
+				public Point call(Object spatialObject) throws Exception {
+					return (Point)spatialObject;
+				}
+				
+			});
+		}
 	}
\ No newline at end of file
