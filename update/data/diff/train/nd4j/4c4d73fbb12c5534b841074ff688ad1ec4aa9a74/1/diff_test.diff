diff --git a/old_test.java b/new_test.java
index 64e7cdf..dc583e2 100644
--- a/old_test.java
+++ b/new_test.java
@@ -45,9 +45,11 @@
         PCA analyzePCA = new PCA(testSample);
         for (int i = 0; i < testSample.columns(); i++) {
             assertEquals(myPCA.getMean().getDouble(i), analyzePCA.getMean().getDouble(i), 0.3);
-            assertEquals(myPCA.getCovarianceMatrix().getRow(i).getColumn(i).getDouble(0),
-                    analyzePCA.getCovarianceMatrix().getRow(i).getColumn(i).getDouble(0), 2.0);
+            assertEquals(myPCA.getCovarianceMatrix().getDouble(i,i),
+                    analyzePCA.getCovarianceMatrix().getDouble(i,i), 3.0);
             assertEquals(myPCA.getEigenvalues().getDouble(i), analyzePCA.getEigenvalues().getDouble(i), 1.0);
         }
-        System.out.println(ns.format(myPCA.getCovarianceMatrix()) + "\n" + ns.format(analyzePCA.getCovarianceMatrix()));
+        System.out.println("Original cov:\n"+ns.format(myPCA.getCovarianceMatrix()) + "\nDummy cov:\n" + ns.format(analyzePCA.getCovarianceMatrix()));
+        INDArray testSample2 = analyzePCA.convertBackToFeatures(analyzePCA.convertToComponents(testSample));
+        assertTrue("Transformation does not work.", testSample.equalsWithEps(testSample2, 1e-4*testSample.rows()*testSample.columns()));
     }
\ No newline at end of file
