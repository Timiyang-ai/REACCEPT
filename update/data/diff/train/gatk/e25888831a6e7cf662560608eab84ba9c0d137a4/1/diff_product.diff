diff --git a/old_product.java b/new_product.java
index fcf3a99..73dc9cc 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,22 +1,32 @@
-public static Properties getAndValidateConfigFileContents(final Path configFilePath) {
+public static Pair<Boolean, Properties> getAndValidateConfigFileContentsOnPath(final Path configFilePath,
+                                                                                   final boolean errorOnMissingConfigKey) {
 
         Utils.nonNull(configFilePath);
 
+        boolean isValid = true;
+
         // Read in the contents of the config file:
-        final Properties configFileContents = new Properties();
+        final Properties configProperties = new Properties();
         try ( final InputStream inputStream = Files.newInputStream(configFilePath, StandardOpenOption.READ) ) {
-            configFileContents.load(inputStream);
+            configProperties.load(inputStream);
         }
         catch (final Exception ex) {
             throw new UserException.BadInput("Unable to read from XSV config file: " + configFilePath.toUri().toString(), ex);
         }
 
-        // Validate that it has the right keys:
-        assertConfigPropertiesContainsKey(configFileContents, CONFIG_FILE_CONTIG_COLUMN_KEY, configFilePath);
-        assertConfigPropertiesContainsKey(configFileContents, CONFIG_FILE_START_COLUMN_KEY, configFilePath);
-        assertConfigPropertiesContainsKey(configFileContents, CONFIG_FILE_END_COLUMN_KEY, configFilePath);
-        assertConfigPropertiesContainsKey(configFileContents, CONFIG_FILE_DELIMITER_KEY, configFilePath);
-        assertConfigPropertiesContainsKey(configFileContents, CONFIG_FILE_DATA_SOURCE_NAME_KEY, configFilePath);
+        // Validate that it has the correct keys:
+        isValid = Stream.of(
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_SRC_FILE,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_VERSION,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_ORIGIN_LOCATION,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_PREPROCESSING_SCRIPT,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_CONTIG_COLUMN,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_START_COLUMN,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_END_COLUMN,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_XSV_DELIMITER,
+                    DataSourceUtils.CONFIG_FILE_FIELD_NAME_NAME)
+                .map( key -> configPropertiesContainsKey(configProperties, key, configFilePath, errorOnMissingConfigKey))
+                .allMatch( result -> result );
 
-        return configFileContents;
+        return Pair.of(isValid, configProperties);
     }
\ No newline at end of file
