diff --git a/old_product.java b/new_product.java
index e4202fc..c9beb89 100644
--- a/old_product.java
+++ b/new_product.java
@@ -3,22 +3,22 @@ public void recalculate() {
         if (lastBootstrapServersUpdateFailed) {
             LOG.trace("Registred {} Bootstrap servers", bootstrapsMap.size());
             lastBootstrapServersUpdateFailed = false;
-            for(BootstrapNodeInfo bootstrapNodeInfo : bootstrapsMap.values()) {
+            for (BootstrapNodeInfo bootstrapNodeInfo : bootstrapsMap.values()) {
                 updateBootstrap(bootstrapNodeInfo);
             }
         }
         if (dynamicMgmt != null) {
-            Map<String,Map<ZkChannelType,OperationsServerLoadHistory>> opsServerHistory = new Hashtable<String,Map<ZkChannelType,OperationsServerLoadHistory>>();
-            for(String dnsName : opsServersMap.keySet()) {
+            Map<String, OperationsServerLoadHistory> opsServerHistory = new HashMap<String, OperationsServerLoadHistory>();
+            for (String dnsName : opsServersMap.keySet()) {
                 opsServerHistory.put(dnsName, opsServersMap.get(dnsName).history);
             }
-            Map<String,RedirectionRule> rules = dynamicMgmt.recalculate(opsServerHistory);
+            Map<String, RedirectionRule> rules = dynamicMgmt.recalculate(opsServerHistory);
             LOG.trace("DynamicLoadManager recalculate() got {} redirection rules", rules.size());
-            for(String dnsName : rules.keySet()) {
+            for (String dnsName : rules.keySet()) {
                 if (opsServersMap.containsKey(dnsName)) {
                     sendRedirectionRule(dnsName, opsServersMap.get(dnsName).nodeInfo, rules.get(dnsName));
                 } else {
-                  LOG.error("Operations server {} redirection rule exist, but NO server available, skip setting rule.", dnsName);
+                    LOG.error("Operations server {} redirection rule exist, but NO server available, skip setting rule.", dnsName);
                 }
             }
         }
