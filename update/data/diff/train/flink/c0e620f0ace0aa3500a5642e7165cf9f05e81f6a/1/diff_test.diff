diff --git a/old_test.java b/new_test.java
index 2c458d5..47f77b3 100644
--- a/old_test.java
+++ b/new_test.java
@@ -29,7 +29,7 @@
 		tasks.put(vertexId, vertex);
 
 		// 1) Load and validate: everything correct
-		CompletedCheckpoint loaded = SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path);
+		CompletedCheckpoint loaded = SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path, false);
 
 		assertEquals(jobId, loaded.getJobId());
 		assertEquals(checkpointId, loaded.getCheckpointID());
@@ -38,19 +38,22 @@
 		when(vertex.getMaxParallelism()).thenReturn(222);
 
 		try {
-			SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path);
+			SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path, false);
 			fail("Did not throw expected Exception");
 		} catch (IllegalStateException expected) {
 			assertTrue(expected.getMessage().contains("Max parallelism mismatch"));
 		}
 
-		// 3) Load and validate: missing vertex (this should be relaxed)
+		// 3) Load and validate: missing vertex
 		assertNotNull(tasks.remove(vertexId));
 
 		try {
-			SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path);
+			SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path, false);
 			fail("Did not throw expected Exception");
 		} catch (IllegalStateException expected) {
-			assertTrue(expected.getMessage().contains("Cannot map old state"));
+			assertTrue(expected.getMessage().contains("allowNonRestoredState"));
 		}
+
+		// 4) Load and validate: ignore missing vertex
+		SavepointLoader.loadAndValidateSavepoint(jobId, tasks, path, true);
 	}
\ No newline at end of file
