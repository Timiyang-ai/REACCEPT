diff --git a/old_product.java b/new_product.java
index dd83acb..249dac3 100644
--- a/old_product.java
+++ b/new_product.java
@@ -4,26 +4,17 @@ public void freeSlot(SlotID slotId, AllocationID allocationId) {
 		TaskManagerSlot slot = slots.get(slotId);
 
 		if (null != slot) {
-			if (slot.isAllocated()) {
+			if (slot.getState() == TaskManagerSlot.State.ALLOCATED) {
 				if (Objects.equals(allocationId, slot.getAllocationId())) {
-					// free the slot
-					slot.setAllocationId(null);
-					fulfilledSlotRequests.remove(allocationId);
-
-					if (slot.isFree()) {
-						handleFreeSlot(slot);
-					}
 
 					TaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.get(slot.getInstanceId());
 
-					if (null != taskManagerRegistration) {
-						if (anySlotUsed(taskManagerRegistration.getSlots())) {
-							taskManagerRegistration.markUsed();
-						} else {
-							taskManagerRegistration.markIdle();
-						}
+					if (taskManagerRegistration == null) {
+						throw new IllegalStateException("Trying to free a slot from a TaskManager " +
+							slot.getInstanceId() + " which has not been registered.");
 					}
 
+					updateSlotState(slot, taskManagerRegistration, null);
 				} else {
 					LOG.debug("Received request to free slot {} with expected allocation id {}, " +
 						"but actual allocation id {} differs. Ignoring the request.", slotId, allocationId, slot.getAllocationId());
