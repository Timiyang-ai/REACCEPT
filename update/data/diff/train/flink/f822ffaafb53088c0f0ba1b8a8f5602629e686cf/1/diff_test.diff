diff --git a/old_test.java b/new_test.java
index b7c09d6..4a2c5f6 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,21 +1,6 @@
 @Test
 	public void testSchedulJob() {
 
-		final InstanceType type = new InstanceType();
-		InstanceTypeDescription desc = InstanceTypeDescriptionFactory.construct(type, new HardwareDescription(), 4);
-		final HashMap<InstanceType, Integer> requiredInstanceTypes = new HashMap<InstanceType, Integer>();
-		requiredInstanceTypes.put(type, 3);
-		final HashMap<InstanceType, InstanceTypeDescription> availableInstances = new HashMap<InstanceType, InstanceTypeDescription>();
-		availableInstances.put(type, desc);
-
-		final DeploymentManager deploymentManager = new TestDeploymentManager();
-
-		try {
-			whenNew(HashMap.class).withNoArguments().thenReturn(requiredInstanceTypes);
-		} catch (Exception e) {
-			throw new RuntimeException(e);
-		}
-
 		when(this.executionGraph.getNumberOfStages()).thenReturn(1);
 		when(this.executionGraph.getStage(0)).thenReturn(this.stage1);
 		when(this.executionGraph.getCurrentExecutionStage()).thenReturn(this.stage1);
@@ -35,27 +20,4 @@
 			e.printStackTrace();
 		}
 
-		// not enough available Instances
-		desc = InstanceTypeDescriptionFactory.construct(type, new HardwareDescription(), 2);
-		availableInstances.put(type, desc);
-		try {
-			toTest.schedulJob(this.executionGraph);
-			fail();
-
-		} catch (SchedulingException e) {
-			final Deque<ExecutionGraph> jobQueue = Whitebox.getInternalState(toTest, "jobQueue");
-			assertEquals("Job should not be in list", false, jobQueue.contains(this.executionGraph));
-
-		}
-		// Instance unknown
-		availableInstances.clear();
-		try {
-			toTest.schedulJob(this.executionGraph);
-			fail();
-
-		} catch (SchedulingException e) {
-			Deque<ExecutionGraph> jobQueue = Whitebox.getInternalState(toTest, "jobQueue");
-			assertEquals("Job should not be in list", false, jobQueue.contains(this.executionGraph));
-
-		}
 	}
\ No newline at end of file
