diff --git a/old_product.java b/new_product.java
index 9a5363d..8e88d84 100644
--- a/old_product.java
+++ b/new_product.java
@@ -8,18 +8,37 @@ public void writeRecord(T record) throws IOException, InterruptedException {
 			throw new InterruptedException();
 		}
 
-		final int numberOfOutputChannels = this.outputChannels.size();
-		final int[] selectedOutputChannels = this.channelSelector.selectChannels(record, numberOfOutputChannels);
+		if (this.isBroadcast) {
 
-		if (selectedOutputChannels == null) {
-			return;
-		}
+			if (getChannelType() == ChannelType.INMEMORY) {
+
+				final int numberOfOutputChannels = this.outputChannels.size();
+				for (int i = 0; i < numberOfOutputChannels; ++i) {
+					this.outputChannels.get(i).writeRecord(record);
+				}
+
+			} else {
+
+				// Use optimization for byte buffered channels
+				this.outputChannels.get(0).writeRecord(record);
+			}
+
+		} else {
+
+			// Non-broadcast gate, use channel selector to select output channels
+			final int numberOfOutputChannels = this.outputChannels.size();
+			final int[] selectedOutputChannels = this.channelSelector.selectChannels(record, numberOfOutputChannels);
+
+			if (selectedOutputChannels == null) {
+				return;
+			}
 
-		for (int i = 0; i < selectedOutputChannels.length; ++i) {
+			for (int i = 0; i < selectedOutputChannels.length; ++i) {
 
-			if (selectedOutputChannels[i] < numberOfOutputChannels) {
-				final AbstractOutputChannel<T> outputChannel = this.outputChannels.get(selectedOutputChannels[i]);
-				outputChannel.writeRecord(record);
+				if (selectedOutputChannels[i] < numberOfOutputChannels) {
+					final AbstractOutputChannel<T> outputChannel = this.outputChannels.get(selectedOutputChannels[i]);
+					outputChannel.writeRecord(record);
+				}
 			}
 		}
 	}
\ No newline at end of file
