diff --git a/old_product.java b/new_product.java
index 40cf3d8..7341c51 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,35 +1,23 @@
 @Override
 	public CompletableFuture<RegistrationResponse> registerTaskExecutor(
-			final UUID resourceManagerLeaderId,
 			final String taskExecutorAddress,
 			final ResourceID taskExecutorResourceId,
 			final SlotReport slotReport,
 			final Time timeout) {
 
-		if (Objects.equals(leaderSessionId, resourceManagerLeaderId)) {
-			CompletableFuture<TaskExecutorGateway> taskExecutorGatewayFuture = getRpcService().connect(taskExecutorAddress, TaskExecutorGateway.class);
+		CompletableFuture<TaskExecutorGateway> taskExecutorGatewayFuture = getRpcService().connect(taskExecutorAddress, TaskExecutorGateway.class);
 
-			return taskExecutorGatewayFuture.handleAsync(
-				(TaskExecutorGateway taskExecutorGateway, Throwable throwable) -> {
-					if (throwable != null) {
-						return new RegistrationResponse.Decline(throwable.getMessage());
-					} else {
-						return registerTaskExecutorInternal(
-							taskExecutorGateway,
-							taskExecutorAddress,
-							taskExecutorResourceId,
-							slotReport);
-					}
-				},
-				getMainThreadExecutor());
-		} else {
-			log.warn("Discard registration from TaskExecutor {} at ({}) because the expected leader session ID {} did " +
-					"not equal the received leader session ID  {}",
-				taskExecutorResourceId, taskExecutorAddress, leaderSessionId, resourceManagerLeaderId);
-
-			return CompletableFuture.completedFuture(
-				new RegistrationResponse.Decline("Discard registration because the leader id " +
-					resourceManagerLeaderId + " does not match the expected leader id " +
-					leaderSessionId + '.'));
-		}
+		return taskExecutorGatewayFuture.handleAsync(
+			(TaskExecutorGateway taskExecutorGateway, Throwable throwable) -> {
+				if (throwable != null) {
+					return new RegistrationResponse.Decline(throwable.getMessage());
+				} else {
+					return registerTaskExecutorInternal(
+						taskExecutorGateway,
+						taskExecutorAddress,
+						taskExecutorResourceId,
+						slotReport);
+				}
+			},
+			getMainThreadExecutor());
 	}
\ No newline at end of file
