diff --git a/old_product.java b/new_product.java
index 9a66e84..da90f16 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,8 +1,7 @@
 private static void calculateNetworkBufNew(final Configuration config) {
 		// (2) fixed size memory
-		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(1L << 20)); // 1MB
-		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(1L << 20)); // 1MB
-
+		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20); // 1MB
+		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20); // 1MB
 
 		// note: actual network buffer memory size is independent of the totalJavaMemorySize
 		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config));
@@ -15,12 +14,11 @@ private static void calculateNetworkBufNew(final Configuration config) {
 			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE);
 			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac);
 
-			long min = Math.max(MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes(), ran.nextLong());
-			config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(min));
-
+			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong());
+			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min);
 
 			long max = Math.max(min, ran.nextLong());
-			config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(max));
+			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max);
 
 			long javaMem = Math.max(max + 1, ran.nextLong());
 
