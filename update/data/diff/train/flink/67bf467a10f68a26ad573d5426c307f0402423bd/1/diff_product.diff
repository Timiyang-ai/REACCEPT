diff --git a/old_product.java b/new_product.java
index bff864b..aebfaf1 100644
--- a/old_product.java
+++ b/new_product.java
@@ -6,25 +6,17 @@ public static SSLContext createSSLServerContext(Configuration sslConfig) throws
 		if (getSSLEnabled(sslConfig)) {
 			LOG.debug("Creating server SSL context from configuration");
 
-			String keystoreFilePath = sslConfig.getString(
-				ConfigConstants.SECURITY_SSL_KEYSTORE,
-				null);
+			String keystoreFilePath = sslConfig.getString(SecurityOptions.SSL_KEYSTORE);
 
-			String keystorePassword = sslConfig.getString(
-				ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD,
-				null);
+			String keystorePassword = sslConfig.getString(SecurityOptions.SSL_KEYSTORE_PASSWORD);
 
-			String certPassword = sslConfig.getString(
-				ConfigConstants.SECURITY_SSL_KEY_PASSWORD,
-				null);
+			String certPassword = sslConfig.getString(SecurityOptions.SSL_KEY_PASSWORD);
 
-			String sslProtocolVersion = sslConfig.getString(
-				ConfigConstants.SECURITY_SSL_PROTOCOL,
-				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL);
+			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL);
 
-			Preconditions.checkNotNull(keystoreFilePath, ConfigConstants.SECURITY_SSL_KEYSTORE + " was not configured.");
-			Preconditions.checkNotNull(keystorePassword, ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD + " was not configured.");
-			Preconditions.checkNotNull(certPassword, ConfigConstants.SECURITY_SSL_KEY_PASSWORD + " was not configured.");
+			Preconditions.checkNotNull(keystoreFilePath, SecurityOptions.SSL_KEYSTORE.key() + " was not configured.");
+			Preconditions.checkNotNull(keystorePassword, SecurityOptions.SSL_KEYSTORE_PASSWORD.key() + " was not configured.");
+			Preconditions.checkNotNull(certPassword, SecurityOptions.SSL_KEY_PASSWORD.key() + " was not configured.");
 
 			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
 			FileInputStream keyStoreFile = null;
