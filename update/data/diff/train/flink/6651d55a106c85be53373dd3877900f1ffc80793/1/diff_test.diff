diff --git a/old_test.java b/new_test.java
index 927e1f9..c253050 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,15 +4,17 @@
 		final DeploymentManager deploymentManager = new TestDeploymentManager();
 
 		final QueueScheduler toTest = spy(new QueueScheduler(deploymentManager, this.instanceManager));
-		final JobID jobid = mock(JobID.class);
+		final JobID jobid = new JobID();
 		final AllocatedResource resource = mock(AllocatedResource.class);
+		final List<AllocatedResource> resources = new ArrayList<AllocatedResource>();
+		resources.add(resource);
 		final InstanceType instanceType = new InstanceType();
 		InstanceConnectionInfo instanceConnectionInfo = mock(InstanceConnectionInfo.class);
 		when(instanceConnectionInfo.toString()).thenReturn("");
 		LocalInstance instance = spy(new LocalInstance(instanceType, instanceConnectionInfo, null, null, null));
 
 		// given resource is null
-		toTest.resourceAllocated(null, null);
+		toTest.resourcesAllocated(null, null);
 		verify(this.loggerMock).error(Matchers.anyString());
 
 		// jobs have have been canceled
@@ -20,7 +22,7 @@
 		PowerMockito.when(toTest, methodToMock).withArguments(Matchers.any(JobID.class)).thenReturn(null);
 		when(resource.getInstance()).thenReturn(instance);
 
-		toTest.resourceAllocated(jobid, resource);
+		toTest.resourcesAllocated(jobid, resources);
 		try {
 			verify(this.instanceManager).releaseAllocatedResource(Matchers.any(JobID.class),
 				Matchers.any(Configuration.class), Matchers.any(AllocatedResource.class));
@@ -35,7 +37,7 @@
 		when(this.graphIterator.hasNext()).thenReturn(true, true, true, true, false);
 		when(this.graphIterator2.next()).thenReturn(this.vertex1);
 		when(this.graphIterator2.hasNext()).thenReturn(true, true, true, true, false);
-		when(this.vertex1.getExecutionState()).thenReturn(ExecutionState.ASSIGNING);
+		when(this.vertex1.getExecutionState()).thenReturn(ExecutionState.SCHEDULED);
 		try {
 			whenNew(ExecutionGraphIterator.class).withArguments(Matchers.any(ExecutionGraph.class),
 				Matchers.anyBoolean()).thenReturn(this.graphIterator);
@@ -51,7 +53,7 @@
 		when(this.vertex1.getAllocatedResource()).thenReturn(null);
 		when(resource.getInstance()).thenReturn(instance);
 
-		toTest.resourceAllocated(jobid, resource);
+		toTest.resourcesAllocated(jobid, resources);
 		verify(this.loggerMock).warn(Matchers.anyString());
 
 		// correct walk through method
@@ -60,7 +62,7 @@
 		when(this.vertex1.getAllocatedResource()).thenReturn(resource);
 		when(resource.getInstanceType()).thenReturn(instanceType);
 
-		toTest.resourceAllocated(jobid, resource);
-		verify(this.vertex1, times(4)).setExecutionState(ExecutionState.ASSIGNED);
+		toTest.resourcesAllocated(jobid, resources);
+		verify(this.vertex1, times(4)).setExecutionState(ExecutionState.READY);
 
 	}
\ No newline at end of file
