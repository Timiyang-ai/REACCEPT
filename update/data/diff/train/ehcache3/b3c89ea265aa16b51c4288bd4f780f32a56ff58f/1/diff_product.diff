diff --git a/old_product.java b/new_product.java
index 8416fc7..39e49ba 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,7 @@
 private EhcacheEntityResponse configure(ClientDescriptor clientDescriptor, ConfigureCacheManager message) {
     ClientState clientState = this.clientStateMap.get(clientDescriptor);
     if (clientState == null) {
-      return failure(new IllegalStateException("Client " + clientDescriptor + " is not connected to the Clustered Store Manager"));
+      return responseFactory.failure(new IllegalStateException("Client " + clientDescriptor + " is not connected to the Clustered Store Manager"));
     }
     if (!isConfigured()) {
       LOGGER.info("Configuring server-side clustered store manager");
@@ -11,7 +11,7 @@ private EhcacheEntityResponse configure(ClientDescriptor clientDescriptor, Confi
       if (this.defaultServerResource != null) {
         OffHeapResource source = services.getService(OffHeapResourceIdentifier.identifier(this.defaultServerResource));
         if (source == null) {
-          return failure(new IllegalArgumentException("Default server resource '" + this.defaultServerResource
+          return responseFactory.failure(new IllegalArgumentException("Default server resource '" + this.defaultServerResource
               + "' is not defined"));
         }
       }
@@ -19,13 +19,13 @@ private EhcacheEntityResponse configure(ClientDescriptor clientDescriptor, Confi
       try {
         this.sharedResourcePools = createPools(configuration.getResourcePools());
       } catch (RuntimeException e) {
-        return failure(e);
+        return responseFactory.failure(e);
       }
       this.stores = new HashMap<String, ServerStoreImpl>();
 
       clientState.attach();
-      return success();
+      return responseFactory.success();
     } else {
-      return failure(new IllegalStateException("Clustered Store Manager already configured"));
+      return responseFactory.failure(new IllegalStateException("Clustered Store Manager already configured"));
     }
   }
\ No newline at end of file
