diff --git a/old_test.java b/new_test.java
index 24679f0..5b44364 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,22 +1,11 @@
 @Test
-	public void testReleaseInAnyFreePartition() throws InterruptedException {
+	public void testPutConnectionBackInPartition() throws InterruptedException {
 		expect(mockPartition.getFreeConnections()).andReturn(mockConnectionHandles).anyTimes();
-		// Test 1: Active partition is full up
-		expect(mockConnectionHandles.offer(mockConnection)).andReturn(false).once().andReturn(true).once();
-		replay(mockPartition, mockConnectionHandles);
-		testClass.releaseInAnyFreePartition(mockConnection, mockPartition);
-		verify(mockPartition, mockConnectionHandles);
-		
-		// Test #2: Same test where all partitions are full
-		reset(mockPartition, mockConnectionHandles);
-		expect(mockPartition.getFreeConnections()).andReturn(mockConnectionHandles).anyTimes();
-		expect(mockConnectionHandles.offer(mockConnection)).andReturn(false).anyTimes();
-		expect(mockConnection.getOriginatingPartition()).andReturn(mockPartition).once();
-		
+		expect(mockConnection.getOriginatingPartition()).andReturn(mockPartition).anyTimes();
 		mockConnectionHandles.put(mockConnection);
 		expectLastCall().once();
 		replay(mockPartition, mockConnectionHandles, mockConnection);
-		testClass.releaseInAnyFreePartition(mockConnection, mockPartition);
-		verify(mockPartition, mockConnectionHandles, mockConnection);
+		testClass.putConnectionBackInPartition(mockConnection);
+		verify(mockPartition, mockConnectionHandles);
 		
 	}
\ No newline at end of file
