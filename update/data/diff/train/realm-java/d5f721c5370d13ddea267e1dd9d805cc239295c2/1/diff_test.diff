diff --git a/old_test.java b/new_test.java
index 679283e..4f0dcde 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,29 +1,40 @@
 @Test
-    @RunTestInLooperThread
-    public void loginAsync_errorHandlerThrows() {
-        // set log level to info to make sure the IllegalArgumentException
-        // thrown in the test is visible in Logcat
-        final int defaultLevel = RealmLog.getLevel();
-        RealmLog.setLevel(LogLevel.INFO);
-        SyncCredentials credentials = SyncCredentials.usernamePassword("IWantToHackYou", "GeneralPassword", false);
-        SyncUser.loginAsync(credentials, Constants.AUTH_URL, new SyncUser.Callback() {
-            @Override
-            public void onSuccess(SyncUser user) {
-                fail();
-            }
-
-            @Override
-            public void onError(ObjectServerError error) {
-                assertEquals(ErrorCode.INVALID_CREDENTIALS, error.getErrorCode());
-                throw new IllegalArgumentException("BOOM");
-            }
-        });
+    public void loginAsync_errorHandlerThrows() throws InterruptedException {
+        final AtomicBoolean errorThrown = new AtomicBoolean(false);
 
-        looperThread.postRunnableDelayed(new Runnable() {
+        // Create custom Looper thread to be able to check for errors thrown when processing Looper events.
+        Thread t = new Thread(new Runnable() {
+            private volatile Handler handler;
             @Override
             public void run() {
-                RealmLog.setLevel(defaultLevel);
-                looperThread.testComplete();
+                Looper.prepare();
+                try {
+                    handler = new Handler();
+                    handler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            SyncCredentials credentials = SyncCredentials.usernamePassword("IWantToHackYou", "GeneralPassword", false);
+                            SyncUser.loginAsync(credentials, Constants.AUTH_URL, new SyncUser.Callback() {
+                                @Override
+                                public void onSuccess(SyncUser user) {
+                                    fail();
+                                }
+
+                                @Override
+                                public void onError(ObjectServerError error) {
+                                    assertEquals(ErrorCode.INVALID_CREDENTIALS, error.getErrorCode());
+                                    throw new IllegalArgumentException("BOOM");
+                                }
+                            });
+                        }
+                    });
+                    Looper.loop(); //
+                } catch (IllegalArgumentException e) {
+                    errorThrown.set(true);
+                }
             }
-        }, 1000);
+        });
+        t.start();
+        t.join(TimeUnit.SECONDS.toMillis(10));
+        assertTrue(errorThrown.get());
     }
\ No newline at end of file
