diff --git a/old_product.java b/new_product.java
index f9fdb0a..87f110a 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,47 +1,9 @@
 public static RealmAsyncTask loginAsync(final SyncCredentials credentials, final String authenticationUrl, final Callback callback) {
-        if (Looper.myLooper() == null) {
-            throw new IllegalStateException("Asynchronous login is only possible from looper threads.");
-        }
-        final Handler handler = new Handler(Looper.myLooper());
-        ThreadPoolExecutor networkPoolExecutor = SyncManager.NETWORK_POOL_EXECUTOR;
-        Future<?> authenticateRequest = networkPoolExecutor.submit(new Runnable() {
+        checkLooperThread("Asynchronous login is only possible from looper threads.");
+        return new Request(SyncManager.NETWORK_POOL_EXECUTOR, callback) {
             @Override
-            public void run() {
-                try {
-                    SyncUser user = login(credentials, authenticationUrl);
-                    postSuccess(user);
-                } catch (ObjectServerError e) {
-                    postError(e);
-                }
+            public SyncUser run() throws ObjectServerError {
+                return login(credentials, authenticationUrl);
             }
-
-            private void postError(final ObjectServerError error) {
-                if (callback != null) {
-                    handler.post(new Runnable() {
-                        @Override
-                        public void run() {
-                            try {
-                                callback.onError(error);
-                            } catch (Exception e) {
-                                RealmLog.info("onError has thrown an exception but is ignoring it: %s",
-                                        Util.getStackTrace(e));
-                            }
-                        }
-                    });
-                }
-            }
-
-            private void postSuccess(final SyncUser user) {
-                if (callback != null) {
-                    handler.post(new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(user);
-                        }
-                    });
-                }
-            }
-        });
-
-        return new RealmAsyncTaskImpl(authenticateRequest, networkPoolExecutor);
+        }.start();
     }
\ No newline at end of file
