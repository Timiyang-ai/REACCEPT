diff --git a/old_product.java b/new_product.java
index 8f6a790..77ba83b 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,34 +2,18 @@ public static Map<String, String[]> toSafeArrayValueMap(String queryString,Strin
         if (Validator.isNullOrEmpty(queryString)){
             return Collections.emptyMap();
         }
+        boolean needEncode = Validator.isNotNullOrEmpty(charsetType);
 
-        String[] nameAndValueArray = queryString.split(URIComponents.AMPERSAND);
-        if (Validator.isNullOrEmpty(nameAndValueArray)){
-            return Collections.emptyMap();
-        }
-
-        //使用 LinkedHashMap 保证元素的顺序
-        Map<String, String[]> map = new LinkedHashMap<String, String[]>();
+        String[] nameAndValueArray = StringUtil.split(queryString, URIComponents.AMPERSAND);
+        Map<String, String[]> map = new LinkedHashMap<String, String[]>();//使用 LinkedHashMap 保证元素的顺序
         for (int i = 0, j = nameAndValueArray.length; i < j; ++i){
-            String nameAndValue = nameAndValueArray[i];
-            if (null == nameAndValue){
-                continue;
-            }
-            String[] tempArray = nameAndValue.split("=", 2);
-
-            String key = tempArray[0];
-            String value = tempArray.length == 2 ? tempArray[1] : StringUtils.EMPTY;//有可能 参数中 只有名字没有值 或者值是空,处理的时候不能遗失掉
-
-            if (Validator.isNotNullOrEmpty(charsetType)){
-                key = decodeAndEncode(key, charsetType);
-                value = decodeAndEncode(value, charsetType);
-            }
-            String[] valuesArrayInMap = map.get(key);
+            String[] tempArray = nameAndValueArray[i].split("=", 2);
 
-            List<String> list = null == valuesArrayInMap ? new ArrayList<String>() : ConvertUtil.toList(valuesArrayInMap);
-            list.add(value);
+            String key = needEncode ? decodeAndEncode(tempArray[0], charsetType) : tempArray[0];
+            String value = tempArray.length == 2 ? tempArray[1] : StringUtils.EMPTY;//有可能参数中,只有名字没有值或者值是空,处理的时候不能遗失掉
 
-            map.put(key, ConvertUtil.toArray(list, String.class));
+            value = needEncode ? decodeAndEncode(value, charsetType) : value;
+            map.put(key, ArrayUtils.add(map.get(key), value));
         }
         return map;
     }
\ No newline at end of file
