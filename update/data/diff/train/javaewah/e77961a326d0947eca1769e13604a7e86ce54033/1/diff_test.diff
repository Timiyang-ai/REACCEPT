diff --git a/old_test.java b/new_test.java
index 4c75de3..13ad7fc 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,36 +1,35 @@
 @Test
-        public void testClear() {
-                System.out.println("testing Clear");
-                EWAHCompressedBitmap32 bitmap = new EWAHCompressedBitmap32();
-                bitmap.set(5);
-                bitmap.clear();
-                bitmap.set(7);
-                Assert.assertTrue(1 == bitmap.cardinality());
-                Assert.assertTrue(1 == bitmap.toList().size());
-                Assert.assertTrue(1 == bitmap.toArray().length);
-                Assert.assertTrue(7 == bitmap.toList().get(0).intValue());
-                Assert.assertTrue(7 == bitmap.toArray()[0]);
-                bitmap.clear();
-                bitmap.set(5000);
-                Assert.assertTrue(1 == bitmap.cardinality());
-                Assert.assertTrue(1 == bitmap.toList().size());
-                Assert.assertTrue(1 == bitmap.toArray().length);
-                Assert.assertTrue(5000 == bitmap.toList().get(0)
-                        .intValue());
-                bitmap.set(5001);
-                bitmap.set(5005);
-                bitmap.set(5100);
-                bitmap.set(5500);
-                bitmap.clear();
-                bitmap.set(5);
-                bitmap.set(7);
-                bitmap.set(1000);
-                bitmap.set(1001);
-                Assert.assertTrue(4 == bitmap.cardinality());
-                List<Integer> positions = bitmap.toList();
-                Assert.assertTrue(4 == positions.size());
-                Assert.assertTrue(5 == positions.get(0).intValue());
-                Assert.assertTrue(7 == positions.get(1).intValue());
-                Assert.assertTrue(1000 == positions.get(2).intValue());
-                Assert.assertTrue(1001 == positions.get(3).intValue());
-        }
\ No newline at end of file
+    public void testClear() {
+        System.out.println("testing Clear");
+        EWAHCompressedBitmap32 bitmap = new EWAHCompressedBitmap32();
+        bitmap.set(5);
+        bitmap.clear();
+        bitmap.set(7);
+        Assert.assertTrue(1 == bitmap.cardinality());
+        Assert.assertTrue(1 == bitmap.toList().size());
+        Assert.assertTrue(1 == bitmap.toArray().length);
+        Assert.assertTrue(7 == bitmap.toList().get(0));
+        Assert.assertTrue(7 == bitmap.toArray()[0]);
+        bitmap.clear();
+        bitmap.set(5000);
+        Assert.assertTrue(1 == bitmap.cardinality());
+        Assert.assertTrue(1 == bitmap.toList().size());
+        Assert.assertTrue(1 == bitmap.toArray().length);
+        Assert.assertTrue(5000 == bitmap.toList().get(0));
+        bitmap.set(5001);
+        bitmap.set(5005);
+        bitmap.set(5100);
+        bitmap.set(5500);
+        bitmap.clear();
+        bitmap.set(5);
+        bitmap.set(7);
+        bitmap.set(1000);
+        bitmap.set(1001);
+        Assert.assertTrue(4 == bitmap.cardinality());
+        List<Integer> positions = bitmap.toList();
+        Assert.assertTrue(4 == positions.size());
+        Assert.assertTrue(5 == positions.get(0));
+        Assert.assertTrue(7 == positions.get(1));
+        Assert.assertTrue(1000 == positions.get(2));
+        Assert.assertTrue(1001 == positions.get(3));
+    }
\ No newline at end of file
