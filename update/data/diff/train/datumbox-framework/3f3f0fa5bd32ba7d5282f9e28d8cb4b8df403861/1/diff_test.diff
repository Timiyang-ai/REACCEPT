diff --git a/old_test.java b/new_test.java
index 8e88a35..43730ec 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,30 +1,30 @@
 @Test
     public void testEstimateEfficiency() {
         logger.info("estimateEfficiency");
-        Map<Object, DataEnvelopmentAnalysis.DeaRecord> id2DeaRecordMapDatabase = new LinkedHashMap<>();
-        id2DeaRecordMapDatabase.put("Depot1", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(40.0,55.0,30.0)), new FlatDataList(Arrays.asList(3.0,5.0))));
-        id2DeaRecordMapDatabase.put("Depot2", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,50.0,40.0)), new FlatDataList(Arrays.asList(2.5,4.5))));
-        id2DeaRecordMapDatabase.put("Depot3", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(55.0,45.0,30.0)), new FlatDataList(Arrays.asList(4.0,6.0))));
-        id2DeaRecordMapDatabase.put("Depot4", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(48.0,20.0,60.0)), new FlatDataList(Arrays.asList(6.0,7.0))));
-        id2DeaRecordMapDatabase.put("Depot5", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(28.0,50.0,25.0)), new FlatDataList(Arrays.asList(2.3,3.5))));
-        id2DeaRecordMapDatabase.put("Depot6", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(48.0,20.0,65.0)), new FlatDataList(Arrays.asList(4.0,6.5))));
-        id2DeaRecordMapDatabase.put("Depot7", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(80.0,65.0,57.0)), new FlatDataList(Arrays.asList(7.0,10.0))));
-        id2DeaRecordMapDatabase.put("Depot8", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(25.0,48.0,30.0)), new FlatDataList(Arrays.asList(4.4,6.4))));
-        id2DeaRecordMapDatabase.put("Depot9", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,64.0,42.0)), new FlatDataList(Arrays.asList(3.0,5.0))));
-        id2DeaRecordMapDatabase.put("Depot10", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(70.0,65.0,48.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
-        id2DeaRecordMapDatabase.put("Depot11", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,65.0,40.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
-        id2DeaRecordMapDatabase.put("Depot12", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,40.0,44.0)), new FlatDataList(Arrays.asList(2.0,4.0))));
-        id2DeaRecordMapDatabase.put("Depot13", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(65.0,25.0,35.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
-        id2DeaRecordMapDatabase.put("Depot14", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(38.0,18.0,64.0)), new FlatDataList(Arrays.asList(4.0,4.0))));
-        id2DeaRecordMapDatabase.put("Depot15", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(20.0,50.0,15.0)), new FlatDataList(Arrays.asList(2.0,3.0))));
-        id2DeaRecordMapDatabase.put("Depot16", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(38.0,20.0,60.0)), new FlatDataList(Arrays.asList(3.0,6.0))));
-        id2DeaRecordMapDatabase.put("Depot17", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(68.0,64.0,54.0)), new FlatDataList(Arrays.asList(7.0,11.0))));
-        id2DeaRecordMapDatabase.put("Depot18", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(25.0,38.0,20.0)), new FlatDataList(Arrays.asList(4.0,6.0))));
-        id2DeaRecordMapDatabase.put("Depot19", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,67.0,32.0)), new FlatDataList(Arrays.asList(3.0,4.0))));
-        id2DeaRecordMapDatabase.put("Depot20", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(57.0,60.0,40.0)), new FlatDataList(Arrays.asList(5.0,6.0))));
+        Map<Object, DataEnvelopmentAnalysis.DeaRecord> id2DeaRecordMapInput = new LinkedHashMap<>();
+        id2DeaRecordMapInput.put("Depot1", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(40.0,55.0,30.0)), new FlatDataList(Arrays.asList(3.0,5.0))));
+        id2DeaRecordMapInput.put("Depot2", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,50.0,40.0)), new FlatDataList(Arrays.asList(2.5,4.5))));
+        id2DeaRecordMapInput.put("Depot3", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(55.0,45.0,30.0)), new FlatDataList(Arrays.asList(4.0,6.0))));
+        id2DeaRecordMapInput.put("Depot4", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(48.0,20.0,60.0)), new FlatDataList(Arrays.asList(6.0,7.0))));
+        id2DeaRecordMapInput.put("Depot5", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(28.0,50.0,25.0)), new FlatDataList(Arrays.asList(2.3,3.5))));
+        id2DeaRecordMapInput.put("Depot6", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(48.0,20.0,65.0)), new FlatDataList(Arrays.asList(4.0,6.5))));
+        id2DeaRecordMapInput.put("Depot7", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(80.0,65.0,57.0)), new FlatDataList(Arrays.asList(7.0,10.0))));
+        id2DeaRecordMapInput.put("Depot8", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(25.0,48.0,30.0)), new FlatDataList(Arrays.asList(4.4,6.4))));
+        id2DeaRecordMapInput.put("Depot9", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,64.0,42.0)), new FlatDataList(Arrays.asList(3.0,5.0))));
+        id2DeaRecordMapInput.put("Depot10", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(70.0,65.0,48.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
+        id2DeaRecordMapInput.put("Depot11", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,65.0,40.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
+        id2DeaRecordMapInput.put("Depot12", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,40.0,44.0)), new FlatDataList(Arrays.asList(2.0,4.0))));
+        id2DeaRecordMapInput.put("Depot13", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(65.0,25.0,35.0)), new FlatDataList(Arrays.asList(5.0,7.0))));
+        id2DeaRecordMapInput.put("Depot14", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(38.0,18.0,64.0)), new FlatDataList(Arrays.asList(4.0,4.0))));
+        id2DeaRecordMapInput.put("Depot15", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(20.0,50.0,15.0)), new FlatDataList(Arrays.asList(2.0,3.0))));
+        id2DeaRecordMapInput.put("Depot16", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(38.0,20.0,60.0)), new FlatDataList(Arrays.asList(3.0,6.0))));
+        id2DeaRecordMapInput.put("Depot17", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(68.0,64.0,54.0)), new FlatDataList(Arrays.asList(7.0,11.0))));
+        id2DeaRecordMapInput.put("Depot18", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(25.0,38.0,20.0)), new FlatDataList(Arrays.asList(4.0,6.0))));
+        id2DeaRecordMapInput.put("Depot19", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(45.0,67.0,32.0)), new FlatDataList(Arrays.asList(3.0,4.0))));
+        id2DeaRecordMapInput.put("Depot20", new DataEnvelopmentAnalysis.DeaRecord(new FlatDataList(Arrays.asList(57.0,60.0,40.0)), new FlatDataList(Arrays.asList(5.0,6.0))));
         
         //the list of observations that we want to evaluate
-        Map<Object, DataEnvelopmentAnalysis.DeaRecord> id2DeaRecordMapEvaluation = new LinkedHashMap<>(id2DeaRecordMapDatabase);
+        Map<Object, DataEnvelopmentAnalysis.DeaRecord> id2DeaRecordMapOutput = new LinkedHashMap<>(id2DeaRecordMapInput);
         
         DataEnvelopmentAnalysis instance = new DataEnvelopmentAnalysis();
         AssociativeArray expResult = new AssociativeArray();
@@ -51,6 +51,6 @@
         expResult.put("Depot20", 0.84444444444444);
         
         
-        AssociativeArray result = instance.estimateEfficiency(id2DeaRecordMapDatabase, id2DeaRecordMapEvaluation);
+        AssociativeArray result = instance.estimateEfficiency(id2DeaRecordMapInput, id2DeaRecordMapOutput);
         TestUtils.assetDoubleAssociativeArray(expResult, result);
     }
\ No newline at end of file
