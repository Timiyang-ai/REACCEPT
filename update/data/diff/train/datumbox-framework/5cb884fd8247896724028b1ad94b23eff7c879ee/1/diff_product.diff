diff --git a/old_product.java b/new_product.java
index f3e30ca..30eb9df 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,5 +1,5 @@
 public static Dataframe parseCSVFile(Reader reader, String yVariable, LinkedHashMap<String, TypeInference.DataType> headerDataTypes,
-                                             char delimiter, char quote, String recordSeparator, Long skip, Long limit, Configuration conf) {
+                                             char delimiter, char quote, String recordSeparator, Long skip, Long limit, Configuration configuration) {
             Logger logger = LoggerFactory.getLogger(Dataframe.Builder.class);
 
             if(skip == null) {
@@ -19,7 +19,7 @@ public static Dataframe parseCSVFile(Reader reader, String yVariable, LinkedHash
             TypeInference.DataType yDataType = headerDataTypes.get(yVariable);
             Map<String, TypeInference.DataType> xDataTypes = new HashMap<>(headerDataTypes); //copy header types
             xDataTypes.remove(yVariable); //remove the response variable from xDataTypes
-            Dataframe dataset = new Dataframe(conf, yDataType, xDataTypes); //use the private constructor to pass DataTypes directly and avoid updating them on the fly
+            Dataframe dataset = new Dataframe(configuration, yDataType, xDataTypes); //use the private constructor to pass DataTypes directly and avoid updating them on the fly
 
 
             CSVFormat format = CSVFormat
@@ -59,7 +59,7 @@ public static Dataframe parseCSVFile(Reader reader, String yVariable, LinkedHash
                         //The Metas are already set in the construction of the Dataframe.
                         dataset._unsafe_set(rId, r);
                     }
-                }, conf.getConcurrencyConf());
+                }, configuration.getConcurrencyConfuration());
             }
             catch (IOException ex) {
                 throw new RuntimeException(ex);
