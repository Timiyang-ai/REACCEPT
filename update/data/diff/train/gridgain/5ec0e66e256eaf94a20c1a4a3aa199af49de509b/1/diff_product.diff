diff --git a/old_product.java b/new_product.java
index 46a5a8d..4979337 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,5 +1,10 @@
-public static <K, V, C extends Serializable, D extends AutoCloseable> D getData(Ignite ignite,
-        String upstreamCacheName, IgniteBiPredicate<K, V> filter, String datasetCacheName, UUID datasetId, int part,
+public static <K, V, C extends Serializable, D extends AutoCloseable> D getData(
+        Ignite ignite,
+        String upstreamCacheName, IgniteBiPredicate<K, V> filter,
+        UpstreamTransformerChain<K, V> transformersChain,
+        String datasetCacheName,
+        UUID datasetId,
+        int part,
         PartitionDataBuilder<K, V, C, D> partDataBuilder) {
 
         PartitionDataStorage dataStorage = (PartitionDataStorage)ignite
@@ -18,13 +23,22 @@ public static <K, V, C extends Serializable, D extends AutoCloseable> D getData(
             qry.setPartition(part);
             qry.setFilter(filter);
 
-            long cnt = computeCount(upstreamCache, qry);
+            UpstreamTransformerChain<K, V> chainCopy = Utils.copy(transformersChain);
+            chainCopy.modifySeed(s -> s + part);
+
+            long cnt = computeCount(upstreamCache, qry, chainCopy);
 
             if (cnt > 0) {
                 try (QueryCursor<UpstreamEntry<K, V>> cursor = upstreamCache.query(qry,
                     e -> new UpstreamEntry<>(e.getKey(), e.getValue()))) {
 
-                    Iterator<UpstreamEntry<K, V>> iter = new IteratorWithConcurrentModificationChecker<>(cursor.iterator(), cnt,
+                    Iterator<UpstreamEntry<K, V>> it = cursor.iterator();
+                    if (!chainCopy.isEmpty()) {
+                        Stream<UpstreamEntry<K, V>> transformedStream = chainCopy.transform(Utils.asStream(it, cnt));
+                        it = transformedStream.iterator();
+                    }
+
+                    Iterator<UpstreamEntry<K, V>> iter = new IteratorWithConcurrentModificationChecker<>(it, cnt,
                         "Cache expected to be not modified during dataset data building [partition=" + part + ']');
 
                     return partDataBuilder.build(iter, cnt, ctx);
