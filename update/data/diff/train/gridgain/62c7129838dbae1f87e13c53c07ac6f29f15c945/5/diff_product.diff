diff --git a/old_product.java b/new_product.java
index 615b677..a49a654 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,4 @@
-private void globalRemoveAll(boolean async, boolean oldAsync) throws Exception {
+private void globalRemoveAll(boolean async) throws Exception {
         IgniteCache<String, Integer> cache = jcache();
 
         cache.put("key1", 1);
@@ -7,17 +7,8 @@ private void globalRemoveAll(boolean async, boolean oldAsync) throws Exception {
 
         checkSize(F.asSet("key1", "key2", "key3"));
 
-        IgniteCache<String, Integer> asyncCache = cache.withAsync();
-
-        if (async) {
-            if (oldAsync) {
-                asyncCache.removeAll(F.asSet("key1", "key2"));
-
-                asyncCache.future().get();
-            }
-            else
-                cache.removeAllAsync(F.asSet("key1", "key2")).get();
-        }
+        if (async)
+            cache.removeAllAsync(F.asSet("key1", "key2")).get();
         else
             cache.removeAll(F.asSet("key1", "key2"));
 
@@ -32,17 +23,8 @@ private void globalRemoveAll(boolean async, boolean oldAsync) throws Exception {
         cache.put("key2", 2);
         cache.put("key3", 3);
 
-        if (async) {
-            if (oldAsync) {
-                IgniteCache asyncCache0 = jcache(gridCount() > 1 ? 1 : 0).withAsync();
-
-                asyncCache0.removeAll();
-
-                asyncCache0.future().get();
-            }
-            else
-                jcache(gridCount() > 1 ? 1 : 0).removeAllAsync().get();
-        }
+        if (async)
+            jcache(gridCount() > 1 ? 1 : 0).removeAllAsync().get();
         else
             jcache(gridCount() > 1 ? 1 : 0).removeAll();
 
@@ -55,15 +37,8 @@ private void globalRemoveAll(boolean async, boolean oldAsync) throws Exception {
         for (int i = 0; i < entryCnt; i++)
             assertEquals(Integer.valueOf(i), cache.get(String.valueOf(i)));
 
-        if (async) {
-            if (oldAsync) {
-                asyncCache.removeAll();
-
-                asyncCache.future().get();
-            }
-            else
-                cache.removeAllAsync().get();
-        }
+        if (async)
+            cache.removeAllAsync().get();
         else
             cache.removeAll();
 
