diff --git a/old_product.java b/new_product.java
index 2934968..5dcad31 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,25 +1,18 @@
-public void reactivateSimple(int srvs, int clients, int activateFrom) throws Exception {
-        activateSimple(srvs, clients, activateFrom);
+private void reactivateSimple(int srvs, int clients, int activateFrom, ClusterState state) throws Exception {
+        activateSimple(srvs, clients, activateFrom, state);
 
-        rolloverSegmentAtLeastTwice(activateFrom);
+        if (state == ACTIVE)
+            rolloverSegmentAtLeastTwice(activateFrom);
 
-        for (int i = 0; i < srvs + clients; i++) {
-            for (int c = 0; c < DEFAULT_CACHES_COUNT; c++)
-                checkCache(ignite(i), CACHE_NAME_PREFIX + c, true);
+        for (int i = 0; i < srvs + clients; i++)
+            checkCachesOnNode(i, DEFAULT_CACHES_COUNT);
 
-            checkCache(ignite(i), CU.UTILITY_CACHE_NAME, true);
-        }
+        ignite(activateFrom).cluster().state(INACTIVE);
+        ignite(activateFrom).cluster().state(state);
 
-        ignite(activateFrom).cluster().active(false);
+        if (state == ACTIVE)
+            rolloverSegmentAtLeastTwice(activateFrom);
 
-        ignite(activateFrom).cluster().active(true);
-
-        rolloverSegmentAtLeastTwice(activateFrom);
-
-        for (int i = 0; i < srvs + clients; i++) {
-            for (int c = 0; c < DEFAULT_CACHES_COUNT; c++)
-                checkCache(ignite(i), CACHE_NAME_PREFIX + c, true);
-
-            checkCache(ignite(i), CU.UTILITY_CACHE_NAME, true);
-        }
+        for (int i = 0; i < srvs + clients; i++)
+            checkCachesOnNode(i, DEFAULT_CACHES_COUNT);
     }
\ No newline at end of file
