diff --git a/old_test.java b/new_test.java
index 0844c06..eafe8aa 100644
--- a/old_test.java
+++ b/new_test.java
@@ -2,8 +2,7 @@
     final SortedMap<Integer, BitSet> empty = Maps.newTreeMap();
     assertThat(BitSets.closure(empty), equalTo(empty));
 
-    // Currently you need an entry for each position, otherwise you get an NPE.
-    // We should fix that.
+    // Map with an an entry for each position.
     final SortedMap<Integer, BitSet> map = Maps.newTreeMap();
     map.put(0, BitSets.of(3));
     map.put(1, BitSets.of());
@@ -18,9 +17,19 @@
     map.put(10, BitSets.of());
     map.put(11, BitSets.of());
     map.put(12, BitSets.of());
-    String original = map.toString();
-    assertThat(BitSets.closure(map).toString(),
-        equalTo(
-            "{0={3, 4, 12}, 1={}, 2={7}, 3={3, 4, 12}, 4={4, 12}, 5={}, 6={}, 7={7}, 8={}, 9={}, 10={}, 11={}, 12={4, 12}}"));
+    final String original = map.toString();
+    final String expected =
+        "{0={3, 4, 12}, 1={}, 2={7}, 3={3, 4, 12}, 4={4, 12}, 5={}, 6={}, 7={7}, 8={}, 9={}, 10={}, 11={}, 12={4, 12}}";
+    assertThat(BitSets.closure(map).toString(), equalTo(expected));
     assertThat("argument modified", map.toString(), equalTo(original));
+
+    // Now a similar map with missing entries. Same result.
+    final SortedMap<Integer, BitSet> map2 = Maps.newTreeMap();
+    map2.put(0, BitSets.of(3));
+    map2.put(2, BitSets.of(7));
+    map2.put(3, BitSets.of(4, 12));
+    map2.put(9, BitSets.of());
+    final String original2 = map2.toString();
+    assertThat(BitSets.closure(map2).toString(), equalTo(expected));
+    assertThat("argument modified", map2.toString(), equalTo(original2));
   }
\ No newline at end of file
