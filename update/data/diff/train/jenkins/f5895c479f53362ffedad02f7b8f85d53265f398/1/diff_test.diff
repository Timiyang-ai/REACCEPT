diff --git a/old_test.java b/new_test.java
index 9796d43..16ce27b 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,26 +1,21 @@
 @Test
     public void getAllItems() throws Exception {
 
-        final CompositeView rootView = Mockito.mock(CompositeView.class);
         final View leftView = Mockito.mock(View.class);
         final View rightView = Mockito.mock(View.class);
+        CompositeView rootView = new CompositeView("rootJob", leftView, rightView);
 
-        Mockito.when(rootView.getAllItems()).thenCallRealMethod();
         Mockito.when(leftView.getAllItems()).thenCallRealMethod();
         Mockito.when(rightView.getAllItems()).thenCallRealMethod();
 
-        final TopLevelItem rootJob = Mockito.mock(TopLevelItem.class);
-        final TopLevelItem leftJob = Mockito.mock(TopLevelItem.class);
-        final TopLevelItem rightJob = Mockito.mock(TopLevelItem.class);
-        final TopLevelItem sharedJob = Mockito.mock(TopLevelItem.class);
+        final TopLevelItem rootJob = createJob("rootJob");
+        final TopLevelItem sharedJob = createJob("sharedJob");
+        
+        rootView = rootView.withJobs(rootJob, sharedJob);
+        
+        final TopLevelItem leftJob = createJob("leftJob");
+        final TopLevelItem rightJob = createJob("rightJob");
 
-        Mockito.when(rootJob.getDisplayName()).thenReturn("rootJob");
-        Mockito.when(leftJob.getDisplayName()).thenReturn("leftJob");
-        Mockito.when(rightJob.getDisplayName()).thenReturn("rightJob");
-        Mockito.when(sharedJob.getDisplayName()).thenReturn("sharedJob");
-
-        Mockito.when(rootView.getViews()).thenReturn(Arrays.asList(leftView, rightView));
-        Mockito.when(rootView.getItems()).thenReturn(Arrays.asList(rootJob, sharedJob));
         Mockito.when(leftView.getItems()).thenReturn(Arrays.asList(leftJob, sharedJob));
         Mockito.when(rightView.getItems()).thenReturn(Arrays.asList(rightJob));
 
