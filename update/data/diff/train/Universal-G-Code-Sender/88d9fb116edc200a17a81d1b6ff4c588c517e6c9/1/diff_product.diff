diff --git a/old_product.java b/new_product.java
index 07644a2..18c69af 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,7 +1,4 @@
 protected static String substituteValues(String str, BackendAPI backend) {
-        SystemStateBean bean = new SystemStateBean();
-        backend.updateSystemState(bean);
-
         // Early exit if there is nothing to match.
         if (!str.contains("{")) {
             return str;
@@ -9,12 +6,15 @@ protected static String substituteValues(String str, BackendAPI backend) {
 
         // Do simple substitutions
         String command = str;
-        command = MACHINE_X.matcher(command).replaceAll(bean.getMachineX());
-        command = MACHINE_Y.matcher(command).replaceAll(bean.getMachineY());
-        command = MACHINE_Z.matcher(command).replaceAll(bean.getMachineZ());
-        command = WORK_X.matcher(command).replaceAll(bean.getWorkX());
-        command = WORK_Y.matcher(command).replaceAll(bean.getWorkY());
-        command = WORK_Z.matcher(command).replaceAll(bean.getWorkZ());
+        Position machinePosition = backend.getMachinePosition();
+        command = MACHINE_X.matcher(command).replaceAll(Utils.formatter.format(machinePosition.getX()));
+        command = MACHINE_Y.matcher(command).replaceAll(Utils.formatter.format(machinePosition.getY()));
+        command = MACHINE_Z.matcher(command).replaceAll(Utils.formatter.format(machinePosition.getZ()));
+
+        Position workPosition = backend.getWorkPosition();
+        command = WORK_X.matcher(command).replaceAll(Utils.formatter.format(workPosition.getX()));
+        command = WORK_Y.matcher(command).replaceAll(Utils.formatter.format(workPosition.getY()));
+        command = WORK_Z.matcher(command).replaceAll(Utils.formatter.format(workPosition.getZ()));
 
         // Prompt for additional substitutions
         Matcher m = PROMPT_REGEX.matcher(command);
