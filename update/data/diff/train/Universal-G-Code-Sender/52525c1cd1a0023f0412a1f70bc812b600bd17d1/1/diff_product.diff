diff --git a/old_product.java b/new_product.java
index d3a30fc..4a55283 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,6 +1,6 @@
 @Override
     public void streamCommands() {
-        if (this.commandBuffer.currentCommand() == null) {
+        if (this.commandBuffer.size() == 0) {
             // NO-OP
             return;
         }
@@ -10,23 +10,17 @@
             return;
         }
         
-        // The GcodeCommandBuffer class always preloads the next command, so as
-        // long as the currentCommand exists and hasn't been sent it is the next
-        // which should be sent.
-        
-        while ((this.commandBuffer.currentCommand().isSent() == false) &&
-                CommUtils.checkRoomInBuffer(this.activeCommandList, this.commandBuffer.currentCommand())) {
-            GcodeCommand command = this.commandBuffer.currentCommand();
+        // Try sending the first command.
+        while (CommUtils.checkRoomInBuffer(this.sentBufferSize, this.commandBuffer.peek())) {
+            String commandString = this.commandBuffer.pop();
+            this.activeStringList.add(commandString);
+            this.sentBufferSize += commandString.length();
             
-            command.setSent(true);
-            this.activeCommandList.add(command);
-
-            // Newlines are embedded when they get queued.
-            this.sendStringToComm(command.getCommandString());
+            // Newlines are embedded when they get queued so just send it.
+            this.sendStringToComm(commandString);
             
+            GcodeCommand command = new GcodeCommand(commandString);
+            command.setSent(true);
             dispatchListenerEvents(COMMAND_SENT, this.commandSentListeners, command);
-
-            // Load the next command.
-            this.commandBuffer.nextCommand();
         }
     }
\ No newline at end of file
