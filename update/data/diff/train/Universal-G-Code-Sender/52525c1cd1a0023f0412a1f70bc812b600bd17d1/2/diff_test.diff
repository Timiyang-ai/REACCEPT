diff --git a/old_test.java b/new_test.java
index 5be17a1..08413b9 100644
--- a/old_test.java
+++ b/new_test.java
@@ -3,29 +3,29 @@
         
         System.out.println("queueStringForComm");
         String input = "someCommand";
-        GrblCommunicator instance = new GrblCommunicator(mg.in, mg.out, gcb, acl);
+        GrblCommunicator instance = new GrblCommunicator(mg.in, mg.out, cb, asl);
         
         try {
             instance.queueStringForComm(input);
-            // The gcb preloads commands so the size represents queued commands.
-            assertEquals(0, gcb.size());
+            // The cb preloads commands so the size represents queued commands.
+            assertEquals(1, cb.size());
             
             // Test that instance adds newline to improperly formed command.
-            assertEquals(input + "\n", gcb.currentCommand().getCommandString());
+            assertEquals(input + "\n", cb.peek());
             
             instance.queueStringForComm(input);
             instance.queueStringForComm(input);
             
             // Test that instance continues to queue inputs.
-            assertEquals(2, gcb.size());
+            assertEquals(3, cb.size());
             
             input = "someCommand\n";
-            gcb = new GcodeCommandBuffer();
-            instance = new GrblCommunicator(mg.in, mg.out, gcb, acl);
+            cb = new LinkedList<String>();
+            instance = new GrblCommunicator(mg.in, mg.out, cb, asl);
             
             instance.queueStringForComm(input);
             // Test that instance doesn't add superfluous newlines.
-            assertEquals(input, gcb.currentCommand().getCommandString());
+            assertEquals(input, cb.peek());
 
         } catch (Exception e) {
             fail("queueStringForComm threw an exception: "+e.getMessage());
