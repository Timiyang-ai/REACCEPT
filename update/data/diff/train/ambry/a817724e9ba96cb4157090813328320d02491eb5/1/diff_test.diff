diff --git a/old_test.java b/new_test.java
index 49e28b9..fc9e307 100644
--- a/old_test.java
+++ b/new_test.java
@@ -2,31 +2,22 @@
   public void processResponseTest() throws Exception {
     RestRequest restRequest = createRestRequest(RestMethod.GET, "/", null);
     //rest request being null
-    try {
-      securityService.processResponse(null, new MockRestResponseChannel(), DEFAULT_INFO, null).get();
-      Assert.fail("Should have thrown IllegalArgumentException ");
-    } catch (IllegalArgumentException e) {
-    }
+    TestUtils.assertException(IllegalArgumentException.class,
+        () -> securityService.processResponse(null, new MockRestResponseChannel(), DEFAULT_INFO).get(), null);
 
     //restResponseChannel being null
-    try {
-      securityService.processResponse(restRequest, null, DEFAULT_INFO, null).get();
-      Assert.fail("Should have thrown IllegalArgumentException ");
-    } catch (IllegalArgumentException e) {
-    }
+    TestUtils.assertException(IllegalArgumentException.class,
+        () -> securityService.processResponse(restRequest, null, DEFAULT_INFO).get(), null);
 
     //blob info being null
-    try {
-      securityService.processResponse(restRequest, new MockRestResponseChannel(), null, null).get();
-      Assert.fail("Should have thrown IllegalArgumentException ");
-    } catch (IllegalArgumentException e) {
-    }
+    TestUtils.assertException(IllegalArgumentException.class,
+        () -> securityService.processResponse(restRequest, new MockRestResponseChannel(), null).get(), null);
 
     // without callbacks
     RestMethod[] methods = new RestMethod[]{RestMethod.POST, RestMethod.GET, RestMethod.HEAD};
     for (RestMethod restMethod : methods) {
-      restRequest = createRestRequest(restMethod, "/", null);
-      securityService.processResponse(restRequest, new MockRestResponseChannel(), DEFAULT_INFO, null).get();
+      securityService.processResponse(createRestRequest(restMethod, "/", null), new MockRestResponseChannel(),
+          DEFAULT_INFO).get();
     }
 
     // with callbacks
