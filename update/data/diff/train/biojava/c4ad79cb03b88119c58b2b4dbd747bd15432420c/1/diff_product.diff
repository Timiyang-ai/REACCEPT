diff --git a/old_product.java b/new_product.java
index 93dab17..e895523 100644
--- a/old_product.java
+++ b/new_product.java
@@ -16,12 +16,22 @@ public Structure getStructureForDomain(ScopDomain domain, ScopDatabase scopDatab
 			map = new AtomPositionMap(StructureTools.getAllAtomArray(fullStructure), AtomPositionMap.ANYTHING_MATCHER);
 			rrs = ResidueRangeAndLength.parseMultiple(domain.getRanges(), map);
 		}
-		for (Chain chain : fullStructure.getChains()) {
-			if (!structure.hasChain(chain.getChainID())) {
+		for (Chain chain : fullStructure.getNonPolyChains()) {
+
+			if (!structure.hasPdbChain(chain.getName())) {
 				continue; // we can't do anything with a chain our domain
 			}
-			// doesn't contain
-			Chain newChain = structure.getChainByPDB(chain.getChainID());
+
+			Chain newChain;
+			if (! structure.hasNonPolyChain(chain.getId())) {
+				newChain = new ChainImpl();
+				newChain.setId(chain.getId());
+				newChain.setName(chain.getName());
+				newChain.setEntityInfo(chain.getEntityInfo());
+				structure.addChain(newChain);
+			} else {
+				newChain = structure.getNonPolyChain(chain.getId());
+			}
 			List<Group> ligands = StructureTools.filterLigands(chain.getAtomGroups());
 			for (Group group : ligands) {
 				boolean shouldContain = true;
@@ -36,7 +46,9 @@ public Structure getStructureForDomain(ScopDomain domain, ScopDatabase scopDatab
 				boolean alreadyContains = newChain.getAtomGroups().contains(group); // we don't want to add duplicate
 																					// ligands
 				if (shouldContain && !alreadyContains) {
+
 					newChain.addGroup(group);
+
 				}
 			}
 		}
