diff --git a/old_test.java b/new_test.java
index 0a9b0e5..5e3b5f9 100644
--- a/old_test.java
+++ b/new_test.java
@@ -5,27 +5,46 @@
 		InputStream inStream = this.getClass().getResourceAsStream("/BondFeature.gb");
 		assertNotNull(inStream);
 
-		GenbankReader<ProteinSequence, AminoAcidCompound> GenbankProtein
-				= new GenbankReader<ProteinSequence, AminoAcidCompound>(
+		GenbankReader<ProteinSequence, AminoAcidCompound> genbankProtein
+				= new GenbankReader<>(
 						inStream,
-						new GenericGenbankHeaderParser<ProteinSequence, AminoAcidCompound>(),
+						new GenericGenbankHeaderParser<>(),
 						new ProteinSequenceCreator(AminoAcidCompoundSet.getAminoAcidCompoundSet())
 				);
-		@SuppressWarnings("unused")
-		LinkedHashMap<String, ProteinSequence> proteinSequences = GenbankProtein.process();
-		inStream.close();
+
+		LinkedHashMap<String, ProteinSequence> proteinSequences = genbankProtein.process();
+
+		assertNotNull(proteinSequences);
+		assertEquals(1, proteinSequences.size());
+
+		ProteinSequence proteinSequence = proteinSequences.get("NP_000257");
+		assertNotNull(proteinSequences.get("NP_000257"));
+		assertEquals("NP_000257", proteinSequence.getAccession().getID());
+		assertEquals("4557789", proteinSequence.getAccession().getIdentifier());
+		assertEquals("GENBANK", proteinSequence.getAccession().getDataSource().name());
+		assertEquals(1, proteinSequence.getAccession().getVersion().intValue());
+		assertTrue(genbankProtein.isClosed());
 
 		logger.info("process DNA");
 		inStream = this.getClass().getResourceAsStream("/NM_000266.gb");
 		assertNotNull(inStream);
 
-		GenbankReader<DNASequence, NucleotideCompound> GenbankDNA
-				= new GenbankReader<DNASequence, NucleotideCompound>(
+		GenbankReader<DNASequence, NucleotideCompound> genbankDNA
+				= new GenbankReader<>(
 						inStream,
-						new GenericGenbankHeaderParser<DNASequence, NucleotideCompound>(),
+						new GenericGenbankHeaderParser<>(),
 						new DNASequenceCreator(DNACompoundSet.getDNACompoundSet())
 				);
-		@SuppressWarnings("unused")
-		LinkedHashMap<String, DNASequence> dnaSequences = GenbankDNA.process();
-		inStream.close();
+		LinkedHashMap<String, DNASequence> dnaSequences = genbankDNA.process();
+
+		assertNotNull(dnaSequences);
+		assertEquals(1, dnaSequences.size());
+
+		DNASequence dnaSequence = dnaSequences.get("NM_000266");
+		assertNotNull(dnaSequences.get("NM_000266"));
+		assertEquals("NM_000266", dnaSequence.getAccession().getID());
+		assertEquals("223671892", dnaSequence.getAccession().getIdentifier());
+		assertEquals("GENBANK", dnaSequence.getAccession().getDataSource().name());
+		assertEquals(3, dnaSequence.getAccession().getVersion().intValue());
+		assertTrue(genbankDNA.isClosed());
 	}
\ No newline at end of file
