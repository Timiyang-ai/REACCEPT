diff --git a/old_test.java b/new_test.java
index 00cb610..30cece0 100644
--- a/old_test.java
+++ b/new_test.java
@@ -4,7 +4,6 @@
         final String name = "name";
 
         final CountDownLatch restartLatch = new CountDownLatch(1);
-        List<Closeable> closeables = Lists.newArrayList();
 
         InstanceSerializer<String> slowSerializer = new JsonInstanceSerializer<String>(String.class)
         {
@@ -29,15 +28,15 @@
             }
         };
 
+        CuratorFramework client = null;
+        ServiceDiscovery<String> discovery = null;
         try
         {
-            CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));
-            closeables.add(client);
+            client = CuratorFrameworkFactory.newClient(server.getConnectString(), new RetryOneTime(1));
             client.start();
 
             ServiceInstance<String> instance = ServiceInstance.<String>builder().payload("thing").name(name).port(10064).build();
-            ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder(String.class).basePath("/test").client(client).thisInstance(instance).serializer(slowSerializer).watchInstances(true).build();
-            closeables.add(discovery);
+            discovery = ServiceDiscoveryBuilder.builder(String.class).basePath("/test").client(client).thisInstance(instance).serializer(slowSerializer).watchInstances(true).build();
             discovery.start();
 
             Assert.assertFalse(discovery.queryForInstances(name).isEmpty(), "Service should start registered.");
@@ -54,10 +53,7 @@
         }
         finally
         {
-            Collections.reverse(closeables);
-            for ( Closeable c : closeables )
-            {
-                CloseableUtils.closeQuietly(c);
-            }
+            CloseableUtils.closeQuietly(discovery);
+            CloseableUtils.closeQuietly(client);
         }
     }
\ No newline at end of file
