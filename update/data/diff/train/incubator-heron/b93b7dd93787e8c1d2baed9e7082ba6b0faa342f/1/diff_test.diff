diff --git a/old_test.java b/new_test.java
index 16062ef..1a5897d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -3,19 +3,20 @@
 
     int paddingPercentage = 10;
     Map<Integer, List<InstanceId>> packing = new HashMap<>();
-    packing.put(1, Arrays.asList(
+    packing.put(7, Arrays.asList(
         new InstanceId("spout", 1, 0),
         new InstanceId("bolt", 2, 0)));
-    packing.put(2, Arrays.asList(
+    packing.put(3, Arrays.asList(
         new InstanceId("spout", 3, 0),
         new InstanceId("bolt", 4, 0)));
 
     PackingPlan packingPlan = generatePacking(packing);
-    ArrayList<Container> containers = PackingUtils.getContainers(packingPlan, paddingPercentage);
-    Assert.assertEquals(2, containers.size());
-    for (int i = 0; i < 2; i++) {
-      Assert.assertEquals(paddingPercentage, containers.get(i).getPaddingPercentage());
-      Assert.assertEquals(packingPlan.getMaxContainerResources(), containers.get(i).getCapacity());
-      Assert.assertEquals(2, containers.get(i).getInstances().size());
+    Map<Integer, Container> containers = PackingUtils.getContainers(packingPlan, paddingPercentage);
+    Assert.assertEquals(packing.size(), containers.size());
+    for (Integer containerId : packing.keySet()) {
+      Container foundContainer = containers.get(containerId);
+      Assert.assertEquals(paddingPercentage, foundContainer.getPaddingPercentage());
+      Assert.assertEquals(packingPlan.getMaxContainerResources(), foundContainer.getCapacity());
+      Assert.assertEquals(2, foundContainer.getInstances().size());
     }
   }
\ No newline at end of file
