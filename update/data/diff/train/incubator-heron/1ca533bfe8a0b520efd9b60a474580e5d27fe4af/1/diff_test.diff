diff --git a/old_test.java b/new_test.java
index 85a11d5..162d7fc 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,52 +1,14 @@
 @Test
   public void testKillTopology() throws Exception {
-    HttpURLConnection httpURLConnection = Mockito.mock(HttpURLConnection.class);
 
-    // Failed to get connection
-    PowerMockito.spy(NetworkUtils.class);
-    PowerMockito.doReturn(null).when(NetworkUtils.class, "getHttpConnection", Mockito.anyString());
-    Assert.assertFalse(controller.killTopology());
-    PowerMockito.verifyStatic();
-    NetworkUtils.getHttpConnection(Mockito.anyString());
-
-    // Failed to send request
-    PowerMockito.spy(NetworkUtils.class);
-    PowerMockito.doReturn(httpURLConnection)
-        .when(NetworkUtils.class, "getHttpConnection", Mockito.anyString());
-    PowerMockito.doReturn(false)
-        .when(NetworkUtils.class, "sendHttpDeleteRequest", Mockito.any(HttpURLConnection.class));
-    Assert.assertFalse(controller.killTopology());
-    PowerMockito.verifyStatic();
-    NetworkUtils.getHttpConnection(Mockito.anyString());
-    NetworkUtils.sendHttpDeleteRequest(Mockito.any(HttpURLConnection.class));
+    HttpJsonClient httpJsonClient = PowerMockito.spy(new HttpJsonClient(""));
+    PowerMockito.whenNew(HttpJsonClient.class).withAnyArguments().thenReturn(httpJsonClient);
 
-    // Failed to get response
-    PowerMockito.spy(NetworkUtils.class);
-    PowerMockito.doReturn(httpURLConnection)
-        .when(NetworkUtils.class, "getHttpConnection", Mockito.anyString());
-    PowerMockito.doReturn(true)
-        .when(NetworkUtils.class, "sendHttpDeleteRequest", Mockito.any(HttpURLConnection.class));
-    PowerMockito.doReturn(false)
-        .when(NetworkUtils.class, "checkHttpResponseCode",
-            Mockito.any(HttpURLConnection.class), Mockito.anyInt());
+    // Test a bad DELETE
+    PowerMockito.doThrow(new IOException()).when(httpJsonClient,  "delete", Mockito.anyInt());
     Assert.assertFalse(controller.killTopology());
-    PowerMockito.verifyStatic();
-    NetworkUtils.getHttpConnection(Mockito.anyString());
-    NetworkUtils.sendHttpDeleteRequest(Mockito.any(HttpURLConnection.class));
-    NetworkUtils.checkHttpResponseCode(Mockito.any(HttpURLConnection.class), Mockito.anyInt());
 
-    // Success
-    PowerMockito.spy(NetworkUtils.class);
-    PowerMockito.doReturn(httpURLConnection)
-        .when(NetworkUtils.class, "getHttpConnection", Mockito.anyString());
-    PowerMockito.doReturn(true)
-        .when(NetworkUtils.class, "sendHttpDeleteRequest", Mockito.any(HttpURLConnection.class));
-    PowerMockito.doReturn(true)
-        .when(NetworkUtils.class, "checkHttpResponseCode",
-            Mockito.any(HttpURLConnection.class), Mockito.anyInt());
+    // Test a good path
+    PowerMockito.doNothing().when(httpJsonClient).delete(Mockito.anyInt());
     Assert.assertTrue(controller.killTopology());
-    PowerMockito.verifyStatic();
-    NetworkUtils.getHttpConnection(Mockito.anyString());
-    NetworkUtils.sendHttpDeleteRequest(Mockito.any(HttpURLConnection.class));
-    NetworkUtils.checkHttpResponseCode(Mockito.any(HttpURLConnection.class), Mockito.anyInt());
   }
\ No newline at end of file
