diff --git a/old_test.java b/new_test.java
index 4b3469e..31d17c4 100644
--- a/old_test.java
+++ b/new_test.java
@@ -25,6 +25,8 @@
     Config config = Mockito.mock(Config.class);
     Mockito.when(config.getStringValue(ConfigKeys.get("STATEMGR_CONNECTION_STRING"))).
         thenReturn(connectionString);
+    NetworkUtils.TunnelConfig tunnelConfig =
+        NetworkUtils.TunnelConfig.build(config, NetworkUtils.HeronSystem.STATE_MANAGER);
 
     Process process = Mockito.mock(Process.class);
 
@@ -32,20 +34,20 @@
     // address0 and address1 are directly reachable
     // address2 are reachable after tunneling
     PowerMockito.spy(NetworkUtils.class);
-    PowerMockito.doReturn(new Pair<InetSocketAddress, Process>(address0, process)).
+    PowerMockito.doReturn(new Pair<>(address0, process)).
         when(NetworkUtils.class, "establishSSHTunnelIfNeeded",
-            Mockito.eq(address0), Mockito.anyString(), Mockito.anyInt(),
-            Mockito.anyInt(), Mockito.anyInt(), Mockito.anyInt(), Mockito.anyBoolean());
-    PowerMockito.doReturn(new Pair<InetSocketAddress, Process>(address1, process)).
+            eq(address0), anyString(), any(NetworkUtils.TunnelType.class), anyInt(),
+            anyInt(), anyInt(), anyInt());
+    PowerMockito.doReturn(new Pair<>(address1, process)).
         when(NetworkUtils.class, "establishSSHTunnelIfNeeded",
-            Mockito.eq(address1), Mockito.anyString(), Mockito.anyInt(),
-            Mockito.anyInt(), Mockito.anyInt(), Mockito.anyInt(), Mockito.anyBoolean());
-    PowerMockito.doReturn(new Pair<InetSocketAddress, Process>(tunnelAddress, process)).
+            eq(address1), anyString(), any(NetworkUtils.TunnelType.class), anyInt(),
+            anyInt(), anyInt(), anyInt());
+    PowerMockito.doReturn(new Pair<>(tunnelAddress, process)).
         when(NetworkUtils.class, "establishSSHTunnelIfNeeded",
-            Mockito.eq(address2), Mockito.anyString(), Mockito.anyInt(),
-            Mockito.anyInt(), Mockito.anyInt(), Mockito.anyInt(), Mockito.anyBoolean());
+            eq(address2), anyString(), any(NetworkUtils.TunnelType.class), anyInt(),
+            anyInt(), anyInt(), anyInt());
 
-    Pair<String, List<Process>> ret = ZkUtils.setupZkTunnel(config);
+    Pair<String, List<Process>> ret = ZkUtils.setupZkTunnel(config, tunnelConfig);
 
     // Assert with expected results
     String expectedConnectionString =
