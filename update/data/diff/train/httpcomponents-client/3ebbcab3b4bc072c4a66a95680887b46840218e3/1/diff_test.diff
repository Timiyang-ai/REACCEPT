diff --git a/old_test.java b/new_test.java
index 18504d2..b57c1c4 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,16 +1,16 @@
 @Test
     public void testReleaseConnection() throws Exception {
 
-        PoolingHttpClientConnectionManager mgr = new PoolingHttpClientConnectionManager();
+        final PoolingHttpClientConnectionManager mgr = new PoolingHttpClientConnectionManager();
         mgr.setMaxTotal(1);
 
-        HttpHost target = getServerHttp();
-        HttpRoute route = new HttpRoute(target, null, false);
-        int      rsplen = 8;
-        String      uri = "/random/" + rsplen;
+        final HttpHost target = getServerHttp();
+        final HttpRoute route = new HttpRoute(target, null, false);
+        final int      rsplen = 8;
+        final String      uri = "/random/" + rsplen;
 
-        HttpRequest request = new BasicHttpRequest("GET", uri, HttpVersion.HTTP_1_1);
-        HttpContext context = new BasicHttpContext();
+        final HttpRequest request = new BasicHttpRequest("GET", uri, HttpVersion.HTTP_1_1);
+        final HttpContext context = new BasicHttpContext();
 
         HttpClientConnection conn = getConnection(mgr, route);
         mgr.connect(conn, route.getTargetHost(), route.getLocalAddress(), 0, context);
@@ -18,10 +18,10 @@
         context.setAttribute(ExecutionContext.HTTP_CONNECTION, conn);
         context.setAttribute(ExecutionContext.HTTP_TARGET_HOST, target);
 
-        HttpProcessor httpProcessor = new ImmutableHttpProcessor(
+        final HttpProcessor httpProcessor = new ImmutableHttpProcessor(
                 new HttpRequestInterceptor[] { new RequestContent(), new RequestConnControl() });
 
-        HttpRequestExecutor exec = new HttpRequestExecutor();
+        final HttpRequestExecutor exec = new HttpRequestExecutor();
         exec.preProcess(request, httpProcessor, context);
         HttpResponse response = exec.execute(request, conn, context);
 
@@ -38,7 +38,7 @@
             // this should fail quickly, connection has not been released
             getConnection(mgr, route, 10L, TimeUnit.MILLISECONDS);
             Assert.fail("ConnectionPoolTimeoutException should have been thrown");
-        } catch (ConnectionPoolTimeoutException e) {
+        } catch (final ConnectionPoolTimeoutException e) {
             // expected
         }
 
