diff --git a/old_product.java b/new_product.java
index 9df9e47..922491e 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,9 +1,5 @@
-public static SparseMatrix AAT(SparseMatrix A, SparseMatrix AT) {
-        if (A.ncols != AT.nrows) {
-            throw new IllegalArgumentException(String.format("Matrix dimensions do not match for matrix multiplication: %d x %d vs %d x %d", A.nrows(), A.ncols(), AT.nrows(), AT.ncols()));
-        }
-
-        int m = AT.ncols;
+private SparseMatrix aat(SparseMatrix AT) {
+        int m = nrows;
         int[] done = new int[m];
         for (int i = 0; i < m; i++) {
             done[i] = -1;
@@ -15,8 +11,8 @@ public static SparseMatrix AAT(SparseMatrix A, SparseMatrix AT) {
         for (int j = 0; j < m; j++) {
             for (int i = AT.colIndex[j]; i < AT.colIndex[j + 1]; i++) {
                 int k = AT.rowIndex[i];
-                for (int l = A.colIndex[k]; l < A.colIndex[k + 1]; l++) {
-                    int h = A.rowIndex[l];
+                for (int l = colIndex[k]; l < colIndex[k + 1]; l++) {
+                    int h = rowIndex[l];
                     // Test if contribution already included.
                     if (done[h] != j) {
                         done[h] = j;
@@ -33,14 +29,14 @@ public static SparseMatrix AAT(SparseMatrix A, SparseMatrix AT) {
             done[i] = -1;
         }
 
-        // Second pass determines columns of adat. Code is identical to first
+        // Second pass determines columns of aat. Code is identical to first
         // pass except colIndex and rowIndex get assigned at appropriate places.
         for (int j = 0; j < m; j++) {
             aat.colIndex[j] = nvals;
             for (int i = AT.colIndex[j]; i < AT.colIndex[j + 1]; i++) {
                 int k = AT.rowIndex[i];
-                for (int l = A.colIndex[k]; l < A.colIndex[k + 1]; l++) {
-                    int h = A.rowIndex[l];
+                for (int l = colIndex[k]; l < colIndex[k + 1]; l++) {
+                    int h = rowIndex[l];
                     if (done[h] != j) {
                         done[h] = j;
                         aat.rowIndex[nvals] = h;
@@ -64,9 +60,9 @@ public static SparseMatrix AAT(SparseMatrix A, SparseMatrix AT) {
         for (int i = 0; i < m; i++) {
             for (int j = AT.colIndex[i]; j < AT.colIndex[i + 1]; j++) {
                 int k = AT.rowIndex[j];
-                for (int l = A.colIndex[k]; l < A.colIndex[k + 1]; l++) {
-                    int h = A.rowIndex[l];
-                    temp[h] += AT.x[j] * A.x[l];
+                for (int l = colIndex[k]; l < colIndex[k + 1]; l++) {
+                    int h = rowIndex[l];
+                    temp[h] += AT.x[j] * x[l];
                 }
             }
 
