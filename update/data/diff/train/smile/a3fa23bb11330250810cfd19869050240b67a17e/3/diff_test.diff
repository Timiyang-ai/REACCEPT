diff --git a/old_test.java b/new_test.java
index 9b87435..4a379ab 100644
--- a/old_test.java
+++ b/new_test.java
@@ -36,19 +36,19 @@
         SingularValueDecomposition result = Math.svd(A);
         assertTrue(Math.equals(s, result.getSingularValues(), 1E-7));
 
-        assertEquals(U.length, result.getU().length);
-        assertEquals(U[0].length, result.getU()[0].length);
+        assertEquals(U.length, result.getU().nrows());
+        assertEquals(U[0].length, result.getU().ncols());
         for (int i = 0; i < U.length; i++) {
             for (int j = 0; j < U[i].length; j++) {
-                assertEquals(Math.abs(U[i][j]), Math.abs(result.getU()[i][j]), 1E-7);
+                assertEquals(Math.abs(U[i][j]), Math.abs(result.getU().get(i, j)), 1E-7);
             }
         }
 
-        assertEquals(V.length, result.getV().length);
-        assertEquals(V[0].length, result.getV()[0].length);
+        assertEquals(V.length, result.getV().nrows());
+        assertEquals(V[0].length, result.getV().ncols());
         for (int i = 0; i < V.length; i++) {
             for (int j = 0; j < V[i].length; j++) {
-                assertEquals(Math.abs(V[i][j]), Math.abs(result.getV()[i][j]), 1E-7);
+                assertEquals(Math.abs(V[i][j]), Math.abs(result.getV().get(i, j)), 1E-7);
             }
         }
     }
\ No newline at end of file
