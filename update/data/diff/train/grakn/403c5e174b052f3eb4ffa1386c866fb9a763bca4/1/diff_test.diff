diff --git a/old_test.java b/new_test.java
index d90c3a0..8a0fd3d 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,7 +1,19 @@
-@Ignore
-    @Test
+@Test
     public void testDegrees() throws Exception {
-        instantiateSimpleConcepts();
+        // create instances
+        EntityType thing = graph.putEntityType("thing");
+        EntityType anotherThing = graph.putEntityType("another");
+
+        Entity entity1 = graph.putEntity("1", thing);
+        Entity entity2 = graph.putEntity("2", thing);
+        Entity entity3 = graph.putEntity("3", thing);
+        Entity entity4 = graph.putEntity("4", anotherThing);
+
+        RoleType relation1 = graph.putRoleType("relation1");
+        RoleType relation2 = graph.putRoleType("relation2");
+        thing.playsRole(relation1).playsRole(relation2);
+        anotherThing.playsRole(relation1).playsRole(relation2);
+        RelationType related = graph.putRelationType("related").hasRole(relation1).hasRole(relation2);
 
         // relate them
         String id1 = UUID.randomUUID().toString();
@@ -22,7 +34,21 @@
         graph.commit();
 
         // assert degrees are correct
-        instantiateSimpleConcepts();
+        // create instances
+        thing = graph.putEntityType("thing");
+        anotherThing = graph.putEntityType("another");
+
+        entity1 = graph.putEntity("1", thing);
+        entity2 = graph.putEntity("2", thing);
+        entity3 = graph.putEntity("3", thing);
+        entity4 = graph.putEntity("4", anotherThing);
+
+        relation1 = graph.putRoleType("relation1");
+        relation2 = graph.putRoleType("relation2");
+        thing.playsRole(relation1).playsRole(relation2);
+        anotherThing.playsRole(relation1).playsRole(relation2);
+        related = graph.putRelationType("related").hasRole(relation1).hasRole(relation2);
+
         Map<Instance, Long> correctDegrees = new HashMap<>();
         correctDegrees.put(entity1, 1l);
         correctDegrees.put(entity2, 3l);
@@ -55,9 +81,14 @@
         });
 
         // compute degrees on subgraph
+        graph = MindmapsClient.getGraph(keyspace);
+        thing = graph.getEntityType("thing");
+        related = graph.getRelationType("related");
         computer = new Analytics(keyspace,Sets.newHashSet(thing, related));
+        graph.close();
         degrees = computer.degrees();
 
+        graph = MindmapsClient.getGraph(keyspace);
         correctDegrees.put(graph.getRelation(id3), 1l);
 
         assertTrue(!degrees.isEmpty());
