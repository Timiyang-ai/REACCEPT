diff --git a/old_product.java b/new_product.java
index 482def6..2bc8cab 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,23 +1,30 @@
-public double getRPSForSecond(final double elapsedSinceStartOfTestSec) {
+public Pair<Double, Long> getRPSForSecond(final double elapsedSinceStartOfTestSec) {
         JMeterProperty data = getData();
         if (data instanceof NullProperty) {
-            return -1;
+            return Pair.of(-1.0, 0L);
         }
         CollectionProperty rows = (CollectionProperty) data;
         PropertyIterator scheduleIT = rows.iterator();
         double newSec = elapsedSinceStartOfTestSec;
+        double result = -1;
+        boolean resultComputed = false;
+        long totalDuration = 0;
         while (scheduleIT.hasNext()) {
             @SuppressWarnings("unchecked")
             List<Object> curProp = (List<Object>) scheduleIT.next().getObjectValue();
             int duration = getIntValue(curProp, DURATION_FIELD_NO);
-            double fromRps = getDoubleValue(curProp, FROM_FIELD_NO);
-            double toRps = getDoubleValue(curProp, TO_FIELD_NO);
-            if (newSec - duration <= 0) {
-                return fromRps + newSec * (toRps - fromRps) / (double) duration;
-            } else {
-                // We're not yet in the slot
-                newSec -= duration;
+            totalDuration += duration;
+            if(!resultComputed) {
+                double fromRps = getDoubleValue(curProp, FROM_FIELD_NO);
+                double toRps = getDoubleValue(curProp, TO_FIELD_NO);
+                if (newSec - duration <= 0) {
+                    result = fromRps + newSec * (toRps - fromRps) / (double) duration;
+                    resultComputed = true;
+                } else {
+                    // We're not yet in the slot
+                    newSec -= duration;
+                }
             }
         }
-        return -1;
+        return Pair.of(result, totalDuration);
     }
\ No newline at end of file
