diff --git a/old_test.java b/new_test.java
index 92dfdcc..baa88ee 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,4 +1,4 @@
-protected void publishService(FrameworkMethod method) {
+protected void publishApi(FrameworkMethod method) {
         version++;
 
         try {
@@ -21,16 +21,16 @@ protected void publishService(FrameworkMethod method) {
                 throw new Exception("Missing test annotation @Configuration.");
             }
 
-            // Get the back end service simulator to use
-            BackEndService backEnd = method.getMethod().getAnnotation(BackEndService.class);
+            // Get the back end API simulator to use
+            BackEndApi backEnd = method.getMethod().getAnnotation(BackEndApi.class);
             if (backEnd == null) {
-                backEnd = getTestClass().getJavaClass().getAnnotation(BackEndService.class);
+                backEnd = getTestClass().getJavaClass().getAnnotation(BackEndApi.class);
             }
-            Class<? extends IPolicyTestBackEndService> backEndService = null;
+            Class<? extends IPolicyTestBackEndApi> backEndApi = null;
             if (backEnd == null) {
-                backEndService = EchoBackEndService.class;
+                backEndApi = EchoBackEndApi.class;
             } else {
-                backEndService = backEnd.value();
+                backEndApi = backEnd.value();
             }
 
 
@@ -40,16 +40,16 @@ protected void publishService(FrameworkMethod method) {
             policy.setPolicyImpl("class:" + policyUnderTest.getName());
             policy.setPolicyJsonConfig(config.value());
 
-            Service service = new Service();
-            service.setEndpoint(backEndService.getName());
-            service.setEndpointType("TEST");
-            service.setOrganizationId(orgId);
-            service.setServiceId(serviceId);
-            service.setVersion(String.valueOf(version));
-            service.setPublicService(true);
-            service.setServicePolicies(Collections.singletonList(policy));
+            Api api = new Api();
+            api.setEndpoint(backEndApi.getName());
+            api.setEndpointType("TEST");
+            api.setOrganizationId(orgId);
+            api.setApiId(apiId);
+            api.setVersion(String.valueOf(version));
+            api.setPublicAPI(true);
+            api.setApiPolicies(Collections.singletonList(policy));
 
-            getEngine().getRegistry().publishService(service, new IAsyncResultHandler<Void>() {
+            getEngine().getRegistry().publishApi(api, new IAsyncResultHandler<Void>() {
                 @Override
                 public void handle(IAsyncResult<Void> result) {
                     if (result.isError()) {
