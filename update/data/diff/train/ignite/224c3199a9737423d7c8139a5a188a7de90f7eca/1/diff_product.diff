diff --git a/old_product.java b/new_product.java
index 2fdaff1..e735e3c 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,6 +1,4 @@
 private void updateSingleValue(boolean singleNode, final boolean locQry) throws Exception {
-        fail("https://issues.apache.org/jira/browse/IGNITE-9470");
-
         final int VALS = 100;
 
         final int writers = 4;
@@ -33,30 +31,40 @@ private void updateSingleValue(boolean singleNode, final boolean locQry) throws
                         try {
                             Integer key = rnd.nextInt(VALS);
 
-                            cache.cache.invoke(key, new CacheEntryProcessor<Integer, MvccTestSqlIndexValue, Object>() {
-                                @Override public Object process(MutableEntry<Integer, MvccTestSqlIndexValue> e, Object... args) {
-                                    Integer key = e.getKey();
+                            while (true) {
+                                try {
+                                    cache.cache.invoke(key, new CacheEntryProcessor<Integer, MvccTestSqlIndexValue, Object>() {
+                                        @Override public Object process(MutableEntry<Integer, MvccTestSqlIndexValue> e,
+                                            Object... args) {
+                                            Integer key = e.getKey();
+
+                                            MvccTestSqlIndexValue val = e.getValue();
 
-                                    MvccTestSqlIndexValue val = e.getValue();
+                                            int newIdxVal;
 
-                                    int newIdxVal;
+                                            if (val.idxVal1 < INC_BY) {
+                                                assertEquals(key.intValue(), val.idxVal1);
 
-                                    if (val.idxVal1 < INC_BY) {
-                                        assertEquals(key.intValue(), val.idxVal1);
+                                                newIdxVal = val.idxVal1 + INC_BY;
+                                            }
+                                            else {
+                                                assertEquals(INC_BY + key, val.idxVal1);
 
-                                        newIdxVal = val.idxVal1 + INC_BY;
-                                    }
-                                    else {
-                                        assertEquals(INC_BY + key, val.idxVal1);
+                                                newIdxVal = key;
+                                            }
 
-                                        newIdxVal = key;
-                                    }
+                                            e.setValue(new MvccTestSqlIndexValue(newIdxVal));
 
-                                    e.setValue(new MvccTestSqlIndexValue(newIdxVal));
+                                            return null;
+                                        }
+                                    });
 
-                                    return null;
+                                    break;
                                 }
-                            });
+                                catch (CacheException e) {
+                                    MvccFeatureChecker.assertMvccWriteConflict(e);
+                                }
+                            }
                         }
                         finally {
                             cache.readUnlock();
