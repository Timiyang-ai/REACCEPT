diff --git a/old_product.java b/new_product.java
index 0680f56..3150ea8 100644
--- a/old_product.java
+++ b/new_product.java
@@ -7,17 +7,19 @@ protected void removeBadMatches(Dependency dependency) {
          */
         //Set<Evidence> groupId = dependency.getVendorEvidence().getEvidence("pom", "groupid");
         //Set<Evidence> artifactId = dependency.getVendorEvidence().getEvidence("pom", "artifactid");
-        for (Identifier i : dependency.getIdentifiers()) {
+        for (Identifier i : dependency.getVulnerableSoftwareIdentifiers()) {
             //TODO move this startsWith expression to the base suppression file
-            if ("cpe".equals(i.getType())) {
-                if ((i.getValue().matches(".*c\\+\\+.*")
-                        || i.getValue().startsWith("cpe:/a:file:file")
-                        || i.getValue().startsWith("cpe:/a:mozilla:mozilla")
-                        || i.getValue().startsWith("cpe:/a:cvs:cvs")
-                        || i.getValue().startsWith("cpe:/a:ftp:ftp")
-                        || i.getValue().startsWith("cpe:/a:tcp:tcp")
-                        || i.getValue().startsWith("cpe:/a:ssh:ssh")
-                        || i.getValue().startsWith("cpe:/a:lookup:lookup"))
+            if (i instanceof CpeIdentifier) {
+                final CpeIdentifier cpeId = (CpeIdentifier) i;
+                final Cpe cpe = cpeId.getCpe();
+                if ((cpe.getProduct().matches(".*c\\+\\+.*")
+                        || ("file".equals(cpe.getVendor()) && "file".equals(cpe.getProduct()))
+                        || ("mozilla".equals(cpe.getVendor()) && "mozilla".equals(cpe.getProduct()))
+                        || ("cvs".equals(cpe.getVendor()) && "cvs".equals(cpe.getProduct()))
+                        || ("ftp".equals(cpe.getVendor()) && "ftp".equals(cpe.getProduct()))
+                        || ("tcp".equals(cpe.getVendor()) && "tcp".equals(cpe.getProduct()))
+                        || ("ssh".equals(cpe.getVendor()) && "ssh".equals(cpe.getProduct()))
+                        || ("lookup".equals(cpe.getVendor()) && "lookup".equals(cpe.getProduct())))
                         && (dependency.getFileName().toLowerCase().endsWith(".jar")
                         || dependency.getFileName().toLowerCase().endsWith("pom.xml")
                         || dependency.getFileName().toLowerCase().endsWith(".dll")
@@ -31,34 +33,30 @@ protected void removeBadMatches(Dependency dependency) {
                         || dependency.getFileName().toLowerCase().endsWith(".tgz")
                         || dependency.getFileName().toLowerCase().endsWith(".ear")
                         || dependency.getFileName().toLowerCase().endsWith(".war"))) {
-                    //itr.remove();
-                    dependency.removeIdentifier(i);
-                } else if ((i.getValue().startsWith("cpe:/a:jquery:jquery")
-                        || i.getValue().startsWith("cpe:/a:prototypejs:prototype")
-                        || i.getValue().startsWith("cpe:/a:yahoo:yui"))
+                    dependency.removeVulnerableSoftwareIdentifier(i);
+                } else if ((("jquery".equals(cpe.getVendor()) && "jquery".equals(cpe.getProduct()))
+                        || ("prototypejs".equals(cpe.getVendor()) && "prototype".equals(cpe.getProduct()))
+                        || ("yahoo".equals(cpe.getVendor()) && "yui".equals(cpe.getProduct())))
                         && (dependency.getFileName().toLowerCase().endsWith(".jar")
                         || dependency.getFileName().toLowerCase().endsWith("pom.xml")
                         || dependency.getFileName().toLowerCase().endsWith(".dll")
                         || dependency.getFileName().toLowerCase().endsWith(".exe"))) {
-                    //itr.remove();
-                    dependency.removeIdentifier(i);
-                } else if ((i.getValue().startsWith("cpe:/a:microsoft:excel")
-                        || i.getValue().startsWith("cpe:/a:microsoft:word")
-                        || i.getValue().startsWith("cpe:/a:microsoft:visio")
-                        || i.getValue().startsWith("cpe:/a:microsoft:powerpoint")
-                        || i.getValue().startsWith("cpe:/a:microsoft:office")
-                        || i.getValue().startsWith("cpe:/a:core_ftp:core_ftp"))
+                    dependency.removeVulnerableSoftwareIdentifier(i);
+                } else if ((("microsoft".equals(cpe.getVendor()) && "excel".equals(cpe.getProduct()))
+                        || ("microsoft".equals(cpe.getVendor()) && "word".equals(cpe.getProduct()))
+                        || ("microsoft".equals(cpe.getVendor()) && "visio".equals(cpe.getProduct()))
+                        || ("microsoft".equals(cpe.getVendor()) && "powerpoint".equals(cpe.getProduct()))
+                        || ("microsoft".equals(cpe.getVendor()) && "office".equals(cpe.getProduct()))
+                        || ("core_ftp".equals(cpe.getVendor()) && "core_ftp".equals(cpe.getProduct())))
                         && (dependency.getFileName().toLowerCase().endsWith(".jar")
                         || dependency.getFileName().toLowerCase().endsWith(".ear")
                         || dependency.getFileName().toLowerCase().endsWith(".war")
                         || dependency.getFileName().toLowerCase().endsWith("pom.xml"))) {
-                    //itr.remove();
-                    dependency.removeIdentifier(i);
-                } else if (i.getValue().startsWith("cpe:/a:apache:maven")
+                    dependency.removeVulnerableSoftwareIdentifier(i);
+                } else if (("apache".equals(cpe.getVendor()) && "maven".equals(cpe.getProduct()))
                         && !dependency.getFileName().toLowerCase().matches("maven-core-[\\d\\.]+\\.jar")) {
-                    //itr.remove();
-                    dependency.removeIdentifier(i);
-                } else if (i.getValue().startsWith("cpe:/a:m-core:m-core")) {
+                    dependency.removeVulnerableSoftwareIdentifier(i);
+                } else if (("m-core".equals(cpe.getVendor()) && "m-core".equals(cpe.getProduct()))) {
                     boolean found = false;
                     for (Evidence e : dependency.getEvidence(EvidenceType.PRODUCT)) {
                         if ("m-core".equalsIgnoreCase(e.getValue())) {
@@ -75,13 +73,11 @@ protected void removeBadMatches(Dependency dependency) {
                         }
                     }
                     if (!found) {
-                        //itr.remove();
-                        dependency.removeIdentifier(i);
+                        dependency.removeVulnerableSoftwareIdentifier(i);
                     }
-                } else if (i.getValue().startsWith("cpe:/a:jboss:jboss")
+                } else if (("jboss".equals(cpe.getVendor()) && "jboss".equals(cpe.getProduct()))
                         && !dependency.getFileName().toLowerCase().matches("jboss-?[\\d\\.-]+(GA)?\\.jar")) {
-                    //itr.remove();
-                    dependency.removeIdentifier(i);
+                    dependency.removeVulnerableSoftwareIdentifier(i);
                 }
             }
         }
