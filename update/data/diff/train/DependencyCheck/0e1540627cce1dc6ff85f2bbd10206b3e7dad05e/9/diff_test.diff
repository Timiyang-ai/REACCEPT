diff --git a/old_test.java b/new_test.java
index 5a41284..efa5730 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,19 +1,21 @@
 @Test
-    public void testRemoveBadMatches() {
+    public void testRemoveBadMatches() throws Exception {
         Dependency dependency = new Dependency();
         dependency.setFileName("some.jar");
         dependency.setFilePath("some.jar");
-        dependency.addIdentifier("cpe", "cpe:/a:m-core:m-core", "");
+        Cpe cpe = builder.part(Part.APPLICATION).vendor("m-core").product("m-core").build();
+        CpeIdentifier id = new CpeIdentifier(cpe, Confidence.HIGHEST);
+        dependency.addVulnerableSoftwareIdentifier(id);
 
-        assertEquals(1, dependency.getIdentifiers().size());
+        assertEquals(1, dependency.getVulnerableSoftwareIdentifiers().size());
 
         FalsePositiveAnalyzer instance = new FalsePositiveAnalyzer();
         instance.removeBadMatches(dependency);
 
-        assertEquals(0, dependency.getIdentifiers().size());
-        dependency.addIdentifier("cpe", "cpe:/a:m-core:m-core", "");
-        dependency.addEvidence(EvidenceType.PRODUCT,"test", "name", "m-core", Confidence.HIGHEST);
+        assertEquals(0, dependency.getVulnerableSoftwareIdentifiers().size());
+        dependency.addVulnerableSoftwareIdentifier(id);
+        dependency.addEvidence(EvidenceType.PRODUCT, "test", "name", "m-core", Confidence.HIGHEST);
 
         instance.removeBadMatches(dependency);
-        assertEquals(1, dependency.getIdentifiers().size());
+        assertEquals(1, dependency.getVulnerableSoftwareIdentifiers().size());
     }
\ No newline at end of file
