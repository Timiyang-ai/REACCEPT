diff --git a/old_product.java b/new_product.java
index 0de6bc2..3244608 100644
--- a/old_product.java
+++ b/new_product.java
@@ -4,23 +4,11 @@ protected void determineCPE(Dependency dependency) throws CorruptIndexException,
         Confidence versionConf = Confidence.HIGH;
 
         String vendors = addEvidenceWithoutDuplicateTerms("", dependency.getVendorEvidence(), vendorConf);
-        //dependency.getVendorEvidence().toString(vendorConf);
-//        if ("".equals(vendors)) {
-//            vendors = STRING_THAT_WILL_NEVER_BE_IN_THE_INDEX;
-//        }
         String products = addEvidenceWithoutDuplicateTerms("", dependency.getProductEvidence(), productConf);
-        ///dependency.getProductEvidence().toString(productConf);
-//        if ("".equals(products)) {
-//            products = STRING_THAT_WILL_NEVER_BE_IN_THE_INDEX;
-//        }
         String versions = addEvidenceWithoutDuplicateTerms("", dependency.getVersionEvidence(), versionConf);
-        //dependency.getVersionEvidence().toString(versionConf);
-//        if ("".equals(versions)) {
-//            versions = STRING_THAT_WILL_NEVER_BE_IN_THE_INDEX;
-//        }
 
         boolean found = false;
-        int cnt = 0;
+        int ctr = 0;
         do {
             List<Entry> entries = searchCPE(vendors, products, versions, dependency.getProductEvidence().getWeighting(),
                     dependency.getVendorEvidence().getWeighting());
@@ -41,14 +29,14 @@ protected void determineCPE(Dependency dependency) throws CorruptIndexException,
 
 
             if (!found) {
-                int round = cnt % 3;
+                int round = ctr % 3;
                 if (round == 0) {
                     vendorConf = reduceConfidence(vendorConf);
                     if (dependency.getVendorEvidence().contains(vendorConf)) {
                         //vendors += " " + dependency.getVendorEvidence().toString(vendorConf);
                         vendors = addEvidenceWithoutDuplicateTerms(vendors, dependency.getVendorEvidence(), vendorConf);
                     } else {
-                        cnt += 1;
+                        ctr += 1;
                         round += 1;
                     }
                 }
@@ -58,7 +46,7 @@ protected void determineCPE(Dependency dependency) throws CorruptIndexException,
                         //products += " " + dependency.getProductEvidence().toString(productConf);
                         products = addEvidenceWithoutDuplicateTerms(products, dependency.getProductEvidence(), productConf);
                     } else {
-                        cnt += 1;
+                        ctr += 1;
                         round += 1;
                     }
                 }
@@ -70,5 +58,5 @@ protected void determineCPE(Dependency dependency) throws CorruptIndexException,
                     }
                 }
             }
-        } while (!found && (++cnt) < 9);
+        } while (!found && (++ctr) < 9);
     }
\ No newline at end of file
