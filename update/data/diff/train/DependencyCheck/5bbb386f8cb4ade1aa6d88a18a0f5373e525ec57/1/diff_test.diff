diff --git a/old_test.java b/new_test.java
index aac4453..8519122 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,38 +1,37 @@
 @Test
     public void testAnalyzeDependency() throws Exception {
         Dependency dependency = new Dependency();
-        EvidenceCollection versions = dependency.getVersionEvidence();
 
-        versions.addEvidence("util", "version", "33.3", Confidence.HIGHEST);
-        versions.addEvidence("other", "version", "alpha", Confidence.HIGHEST);
-        versions.addEvidence("other", "Implementation-Version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "util", "version", "33.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "other", "version", "alpha", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "other", "Implementation-Version", "1.2.3", Confidence.HIGHEST);
 
         VersionFilterAnalyzer instance = new VersionFilterAnalyzer();
         instance.initializeSettings(getSettings());
 
         instance.analyzeDependency(dependency, null);
-        assertEquals(3, versions.size());
+        assertEquals(3, dependency.getEvidence(EvidenceType.VERSION).size());
 
-        versions.addEvidence("pom", "version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "pom", "version", "1.2.3", Confidence.HIGHEST);
 
         instance.analyzeDependency(dependency, null);
-        assertEquals(4, versions.size());
+        assertEquals(4, dependency.getEvidence(EvidenceType.VERSION).size());
 
-        versions.addEvidence("file", "version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "file", "version", "1.2.3", Confidence.HIGHEST);
         instance.analyzeDependency(dependency, null);
-        assertEquals(2, versions.size());
+        assertEquals(2, dependency.getEvidence(EvidenceType.VERSION).size());
 
-        versions.addEvidence("Manifest", "Implementation-Version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "Manifest", "Implementation-Version", "1.2.3", Confidence.HIGHEST);
         instance.analyzeDependency(dependency, null);
-        assertEquals(3, versions.size());
+        assertEquals(3, dependency.getEvidence(EvidenceType.VERSION).size());
 
-        versions.addEvidence("nexus", "version", "1.2.3", Confidence.HIGHEST);
-        versions.addEvidence("other", "version", "alpha", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "nexus", "version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "other", "version", "alpha", Confidence.HIGHEST);
         instance.analyzeDependency(dependency, null);
-        assertEquals(4, versions.size());
+        assertEquals(4, dependency.getEvidence(EvidenceType.VERSION).size());
 
-        versions.addEvidence("central", "version", "1.2.3", Confidence.HIGHEST);
-        versions.addEvidence("other", "version", "alpha", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "central", "version", "1.2.3", Confidence.HIGHEST);
+        dependency.addEvidence(EvidenceType.VERSION, "other", "version", "alpha", Confidence.HIGHEST);
         instance.analyzeDependency(dependency, null);
-        assertEquals(5, versions.size());
+        assertEquals(5, dependency.getEvidence(EvidenceType.VERSION).size());
     }
\ No newline at end of file
