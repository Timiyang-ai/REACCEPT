diff --git a/old_product.java b/new_product.java
index 3b0eef0..d68eeee 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,36 +1,38 @@
 public Cache getCache(String cacheName, CacheConfig cacheConfig) {
+        Cache cache = null;
+
         if (cacheName == null || "".equals(cacheName)) {
             throw new IllegalArgumentException("cacheName cannot be null or empty string");
         }
 
-        // find the cache in the records if possible
-        Cache cache = this.cacheRecord.get(cacheName);
-        if (cache == null) {
-            cache = this.getRequestMap().get(cacheName);
-        }
+        if (cacheConfig != null && CacheScope.REQUEST.equals(cacheConfig.getCacheScope()) ) {
+            Map<String, MapCache> caches = getRequestCaches();
+            if (caches != null) {
+                cache = caches.get(cacheName);
+            }
 
-        // handle provider
-        if (getCacheProvider() != null) {
-            if (cache == null 
-                    && cacheConfig != null 
-                    && ! CacheScope.REQUEST.equals(cacheConfig.getCacheScope()) ) {
-                try {
-                    cache = getCacheProvider().getCache(cacheName, cacheConfig);
-                } catch (Exception e) {
-                    log.warn("Failure in provider ("+getCacheProvider()+"): " + e.getMessage());
+            if (cache == null) {
+                cache = instantiateMapCache(cacheName, cacheConfig);
+            }
+        } else {
+            // find the cache in the records if possible
+            cache = this.cacheRecord.get(cacheName);
+
+            if (cache == null) {
+                // handle provider
+                if (getCacheProvider() != null) {
+                    try {
+                        cache = getCacheProvider().getCache(cacheName, cacheConfig);
+                    } catch (Exception e) {
+                        log.warn("Failure in provider ("+getCacheProvider()+"): " + e.getMessage());
+                    }
                 }
             }
-        }
 
-        // no cache found so make one
-        if (cache == null) {
-            // create the cache type based on the cache config
-            if (cacheConfig != null 
-                    && CacheScope.REQUEST.equals(cacheConfig.getCacheScope()) ) {
-                cache = instantiateMapCache(cacheName, cacheConfig);
-            } else {
+            if (cache == null) {
                 cache = instantiateEhCache(cacheName, cacheConfig);
             }
         }
+
         return cache;
     }
\ No newline at end of file
