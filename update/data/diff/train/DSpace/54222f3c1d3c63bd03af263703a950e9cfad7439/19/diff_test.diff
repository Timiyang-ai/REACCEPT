diff --git a/old_test.java b/new_test.java
index ff52639..0b7cffb 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,23 +1,23 @@
 @Test
     public void testAbort() throws SQLException, AuthorizeException
     {
-        new NonStrictExpectations(AuthorizeManager.class)
+        new NonStrictExpectations(authorizeService.getClass())
         {{
             // Allow Admin permissions - needed to create a new EPerson
-            AuthorizeManager.isAdmin((Context) any); result = true;
+            authorizeService.isAdmin((Context) any); result = true;
         }};
-        
+
         // To test abort() we need a new Context object
         Context instance = new Context();
         
         // Create a new EPerson (DO NOT COMMIT IT)
         String createdEmail = "susie@email.com";
-        EPerson newUser = EPerson.create(instance);
-        newUser.setFirstName("Susan");
-        newUser.setLastName("Doe");
+        EPerson newUser = ePersonService.create(instance);
+        newUser.setFirstName(context, "Susan");
+        newUser.setLastName(context, "Doe");
         newUser.setEmail(createdEmail);
         newUser.setCanLogIn(true);
-        newUser.setLanguage(I18nUtil.getDefaultLocale().getLanguage());
+        newUser.setLanguage(context, I18nUtil.getDefaultLocale().getLanguage());
         
         // Abort our context
         instance.abort();
@@ -26,7 +26,7 @@
         
         // Open a new context, let's make sure that EPerson isn't there
         Context newInstance = new Context();
-        EPerson found = EPerson.findByEmail(newInstance, createdEmail);
+        EPerson found = ePersonService.findByEmail(newInstance, createdEmail);
         assertThat("testAbort 1", found, nullValue());
 
         // Cleanup our contexts
