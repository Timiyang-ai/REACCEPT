diff --git a/old_test.java b/new_test.java
index 8824285..bbb7c5b 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,30 +1,30 @@
 @Test
     public void testGetSpecialGroups() throws SQLException, AuthorizeException
     {
-        new NonStrictExpectations(AuthorizeManager.class)
+        new NonStrictExpectations(authorizeService.getClass())
         {{
             // Allow Admin permissions - needed to create a new Group
-            AuthorizeManager.isAdmin((Context) any); result = true;
+            authorizeService.isAdmin((Context) any); result = true;
         }};
         
         // To test special groups we need a new Context object
         Context instance = new Context();
         
         // Create a new group & add it as a special group
-        Group group = Group.create(instance);
-        int groupID = group.getID();
+        Group group = groupService.create(instance);
+        UUID groupID = group.getID();
         instance.setSpecialGroup(groupID);
         
         // Also add Administrator group as a special group
-        Group adminGroup = Group.find(instance, Group.ADMIN_ID);
-        int adminGroupID = adminGroup.getID();
+        Group adminGroup = groupService.findByName(instance, Group.ADMIN);
+        UUID adminGroupID = adminGroup.getID();
         instance.setSpecialGroup(adminGroupID);
         
         // Now get our special groups
-        Group[] specialGroups = instance.getSpecialGroups();
-        assertThat("testGetSpecialGroup 0", specialGroups.length, equalTo(2));
-        assertThat("testGetSpecialGroup 1", specialGroups[0], equalTo(group));
-        assertThat("testGetSpecialGroup 1", specialGroups[1], equalTo(adminGroup));
+        List<Group> specialGroups = instance.getSpecialGroups();
+        assertThat("testGetSpecialGroup 0", specialGroups.size(), equalTo(2));
+        assertThat("testGetSpecialGroup 1", specialGroups.get(0), equalTo(group));
+        assertThat("testGetSpecialGroup 1", specialGroups.get(1), equalTo(adminGroup));
 
         // Cleanup our context
         cleanupContext(instance);
