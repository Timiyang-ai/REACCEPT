diff --git a/old_test.java b/new_test.java
index eec67d0..002f6c9 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,6 +1,6 @@
 @Test(enabled=false)
    public void testCloneServer() throws Exception {
-      ServerDetails testServer2 = client.cloneServer(testServerId, testHostName2, ServerCloneOptions.Builder.cpucores(1));
+      ServerDetails testServer2 = client.cloneServer(testServerId, testHostName2, CloneServerOptions.Builder.cpucores(1));
 
       assertNotNull(testServer2.getId());
       assertEquals(testServer2.getHostname(), "jclouds-test2");
@@ -8,16 +8,16 @@
       
       testServerId2 = testServer2.getId();
 
-      RetryablePredicate<ServerState> cloneChecker = new ServerStatusChecker(client, testServerId2, 300, 10, TimeUnit.SECONDS);
-      assertTrue(cloneChecker.apply(ServerState.STOPPED));
+      RetryablePredicate<Server.State> cloneChecker = new ServerStatusChecker(client, testServerId2, 300, 10, TimeUnit.SECONDS);
+      assertTrue(cloneChecker.apply(Server.State.STOPPED));
 
       client.startServer(testServer2.getId());
 
       // TODO ServerStatus==STOPPED suggests the previous call to start should have worked
-      cloneChecker = new RetryablePredicate<ServerState>(
-            new Predicate<ServerState>() {
+      cloneChecker = new RetryablePredicate<Server.State>(
+            new Predicate<Server.State>() {
 
-               public boolean apply(ServerState value) {
+               public boolean apply(Server.State value) {
                   ServerStatus status = client.getServerStatus(testServerId2, ServerStatusOptions.Builder.state());
                   if (status.getState() == value) {
                      return true;
@@ -29,7 +29,7 @@
 
             }, 300, 10, TimeUnit.SECONDS);
 
-      assertTrue(cloneChecker.apply(ServerState.RUNNING)
+      assertTrue(cloneChecker.apply(Server.State.RUNNING)
 
       );
    }
\ No newline at end of file
