diff --git a/old_product.java b/new_product.java
index 34e7bb7..c09503b 100644
--- a/old_product.java
+++ b/new_product.java
@@ -7,12 +7,7 @@ public Optional<Candidate> retrieveStockAt(@NonNull final CandidatesSegment segm
 				.addEqualsFilter(I_MD_Candidate.COLUMN_MD_Candidate_Type, X_MD_Candidate.MD_CANDIDATE_TYPE_STOCK)
 				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Warehouse_ID, segment.getWarehouseId())
 				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Product_ID, segment.getProductId())
-				.addCompareFilter(I_MD_Candidate.COLUMN_DateProjected, Operator.LESS_OR_EQUAL, segment.getProjectedDate());
-
-		if (segment.getLocatorIdNotNull() > 0)
-		{
-			builder.addInArrayFilter(I_MD_Candidate.COLUMN_M_Locator_ID, null, 0, segment.getLocatorIdNotNull());
-		}
+				.addCompareFilter(I_MD_Candidate.COLUMN_DateProjected, Operator.LESS_OR_EQUAL, segment.getDate());
 
 		final I_MD_Candidate candidateRecord = builder
 				.orderBy().addColumn(I_MD_Candidate.COLUMNNAME_DateProjected, false).endOrderBy()
