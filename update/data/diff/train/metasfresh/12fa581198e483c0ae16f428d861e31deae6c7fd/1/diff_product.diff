diff --git a/old_product.java b/new_product.java
index fa863e6..4a7891f 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,4 +1,5 @@
-public Candidate onSupplyCandidateNewOrChange(@NonNull final Candidate supplyCandidate)
+@VisibleForTesting
+	Candidate onSupplyCandidateNewOrChange(@NonNull final Candidate supplyCandidate)
 	{
 		Preconditions.checkArgument(supplyCandidate.getType() == Type.SUPPLY, "Given parameter 'supplyCandidate' has type=%s; supplyCandidate=%s", supplyCandidate.getType(), supplyCandidate);
 
@@ -13,16 +14,17 @@ public Candidate onSupplyCandidateNewOrChange(@NonNull final Candidate supplyCan
 		final Candidate parentStockCandidateWithId;
 		if (supplyCandidateDeltaWithId.getParentIdNotNull() > 0)
 		{
-			// this supply candidate is not new and already has a stock candidate as its parent
+			// this supply candidate is not new and already has a stock candidate as its parent. be sure to update exactly *that* scandidate
 			parentStockCandidateWithId = updateStock(
 					supplyCandidateDeltaWithId,
-					() -> {
-						// don't check if we might create a new stock candidate, because we know we don't. Get the one that already exists and just update its quantity
-						final Candidate stockCandidate = candidateRepository.retrieve(supplyCandidateDeltaWithId.getParentId());
-						return candidateRepository.updateQty(
-								stockCandidate.withQuantity(
-										stockCandidate.getQuantity().add(supplyCandidateDeltaWithId.getQuantity())));
-					});
+					() ->
+						{
+							// don't check if we might create a new stock candidate, because we know we don't. Get the one that already exists and just update its quantity
+							final Candidate stockCandidate = candidateRepository.retrieve(supplyCandidateDeltaWithId.getParentId());
+							return candidateRepository.updateQty(
+									stockCandidate.withQuantity(
+											stockCandidate.getQuantity().add(supplyCandidateDeltaWithId.getQuantity())));
+						});
 		}
 		else
 		{
