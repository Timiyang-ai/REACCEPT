diff --git a/old_product.java b/new_product.java
index cbd0bae..16b8804 100644
--- a/old_product.java
+++ b/new_product.java
@@ -4,32 +4,32 @@ public UnassignResult unassignCandidate(@NonNull final AssignableInvoiceCandidat
 
 		final List<UnassignedPairOfCandidates> unassignedPairs = result.getUnassignedPairs();
 
-		final RefundMode refundMode = CollectionUtils.extractSingleElement(
+		final RefundMode refundMode = extractSingleElement(
 				unassignedPairs,
 				pair -> pair.getRefundInvoiceCandidate().getRefundConfig().getRefundMode());
 
 		if (RefundMode.ALL_MAX_SCALE.equals(refundMode))
 		{
 			Check.errorIf(unassignedPairs.size() > 1, "If refundMode={}, then there can be only one refund candidate; unassignResult={}", refundMode, result);
-			final UnassignedPairOfCandidates unassignedPair = CollectionUtils.singleElement(unassignedPairs);
+			final UnassignedPairOfCandidates unassignedPair = singleElement(unassignedPairs);
 
 			final RefundInvoiceCandidate refundCandidate = unassignedPair.getRefundInvoiceCandidate();
 			final RefundConfig currentRefundConfig = refundCandidate.getRefundConfig();
-			final RefundConfig targetRefundConfig = refundCandidate
+			final RefundConfig newRefundConfig = refundCandidate
 					.getRefundContract()
 					.getRefundConfig(refundCandidate.getAssignedQuantity().getAsBigDecimal());
 
 			// if accumulated: check if the current quantity still matches the respective candidate's current refund-config's minQty;
-			if (!currentRefundConfig.getId().equals(targetRefundConfig.getId()))
+			if (!currentRefundConfig.getId().equals(newRefundConfig.getId()))
 			{
 				// if not, then update the candidates' refund-config and money; don't forget I_C_Invoice_Candidate_Assignment.C_Flatrate_RefundConfig_ID
-				resetMoneyAmount(refundCandidate);
+				resetMoneyAmount(refundCandidate, newRefundConfig);
 			}
 			return result;
 		}
 
 		// refundMode == PER_SCALE
-		final RefundContract refundContract = CollectionUtils.extractSingleElement(
+		final RefundContract refundContract = extractSingleElement(
 				unassignedPairs,
 				pair -> pair.getRefundInvoiceCandidate().getRefundContract());
 
