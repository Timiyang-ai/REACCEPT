diff --git a/old_product.java b/new_product.java
index 67a8bef..34e7bb7 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,22 +2,22 @@ public Optional<Candidate> retrieveStockAt(@NonNull final CandidatesSegment segm
 	{
 		final IQueryBL queryBL = Services.get(IQueryBL.class);
 
-		final IQueryBuilder<I_MD_Candidate> queryBuilder = queryBL.createQueryBuilder(I_MD_Candidate.class)
+		final IQueryBuilder<I_MD_Candidate> builder = queryBL.createQueryBuilder(I_MD_Candidate.class)
 				.addOnlyActiveRecordsFilter()
 				.addEqualsFilter(I_MD_Candidate.COLUMN_MD_Candidate_Type, X_MD_Candidate.MD_CANDIDATE_TYPE_STOCK)
-				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Warehouse_ID, segment.getWarehouse())
-				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Product_ID, segment.getProduct().getM_Product_ID())
+				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Warehouse_ID, segment.getWarehouseId())
+				.addEqualsFilter(I_MD_Candidate.COLUMN_M_Product_ID, segment.getProductId())
 				.addCompareFilter(I_MD_Candidate.COLUMN_DateProjected, Operator.LESS_OR_EQUAL, segment.getProjectedDate());
 
-		if (segment.getLocator() != null)
+		if (segment.getLocatorIdNotNull() > 0)
 		{
-			queryBuilder.addInArrayFilter(I_MD_Candidate.COLUMN_M_Locator_ID, null, segment.getLocator().getM_Locator_ID());
+			builder.addInArrayFilter(I_MD_Candidate.COLUMN_M_Locator_ID, null, 0, segment.getLocatorIdNotNull());
 		}
 
-		final I_MD_Candidate candidateRecord = queryBuilder
+		final I_MD_Candidate candidateRecord = builder
 				.orderBy().addColumn(I_MD_Candidate.COLUMNNAME_DateProjected, false).endOrderBy()
 				.create()
 				.first();
 
-		return fromCandidateRecord(candidateRecord);
+		return fromCandidateRecord(Optional.ofNullable(candidateRecord));
 	}
\ No newline at end of file
