diff --git a/old_product.java b/new_product.java
index f72430d..2ed33eb 100644
--- a/old_product.java
+++ b/new_product.java
@@ -2,15 +2,15 @@ public boolean addEvent(@NonNull final HUTraceEvent huTraceEvent)
 	{
 		final HUTraceEventQuery query = huTraceEvent.asQuery();
 
-		final I_M_HU_Trace dbRecord;
-		final List<I_M_HU_Trace> existingDbRecords = queryDbRecord(query);
+		final List<HUTraceEvent> existingDbRecords = RetrieveDbRecordsUtil.query(huTraceEvent.asQuery());
 		final boolean inserted = existingDbRecords.isEmpty();
+
 		if (inserted)
 		{
-			dbRecord = newInstance(I_M_HU_Trace.class);
+			final I_M_HU_Trace dbRecord = newInstance(I_M_HU_Trace.class);
 			logger.info("Found no existing M_HU_Trace record; creating new one; query={}", query);
 
-			copyToDbRecord(huTraceEvent, dbRecord);
+			HuTraceEventToDbRecordUtil.copyToDbRecord(huTraceEvent, dbRecord);
 			save(dbRecord);
 		}
 		else
@@ -19,8 +19,8 @@ public boolean addEvent(@NonNull final HUTraceEvent huTraceEvent)
 					"Expected only one M_HU_Trace record for the given query, but found {}; query={}, M_HU_Trace records={}",
 					existingDbRecords.size(), query, existingDbRecords);
 
-			dbRecord = existingDbRecords.get(0);
-			logger.info("Found exiting M_HU_Trace record; nothing to do; query={}; record={}", query, dbRecord);
+			HUTraceEvent existingHuTraceEvent = existingDbRecords.get(0);
+			logger.info("Found exiting HUTraceEvent record with ID={}; nothing to do; query={}", existingHuTraceEvent.getHuTraceEventId(), query);
 		}
 
 		return inserted;
