diff --git a/old_product.java b/new_product.java
index 6a31147..122b34c 100644
--- a/old_product.java
+++ b/new_product.java
@@ -1,58 +1,3 @@
 public static String wrap(final String str, int wrapLength, String newLineStr, final boolean wrapLongWords) {
-        if (str == null) {
-            return null;
-        }
-        if (newLineStr == null) {
-            newLineStr = SystemUtils.LINE_SEPARATOR;
-        }
-        if (wrapLength < 1) {
-            wrapLength = 1;
-        }
-        final int inputLineLength = str.length();
-        int offset = 0;
-        final StringBuilder wrappedLine = new StringBuilder(inputLineLength + 32);
-        
-        while (offset < inputLineLength) {
-            if (str.charAt(offset) == ' ') {
-                offset++;
-                continue;
-            }
-            // only last line without leading spaces is left
-            if(inputLineLength - offset <= wrapLength) {
-                break;
-            }
-            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);
-
-            if (spaceToWrapAt >= offset) {
-                // normal case
-                wrappedLine.append(str.substring(offset, spaceToWrapAt));
-                wrappedLine.append(newLineStr);
-                offset = spaceToWrapAt + 1;
-                
-            } else {
-                // really long word or URL
-                if (wrapLongWords) {
-                    // wrap really long word one line at a time
-                    wrappedLine.append(str.substring(offset, wrapLength + offset));
-                    wrappedLine.append(newLineStr);
-                    offset += wrapLength;
-                } else {
-                    // do not wrap really long word, just extend beyond limit
-                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);
-                    if (spaceToWrapAt >= 0) {
-                        wrappedLine.append(str.substring(offset, spaceToWrapAt));
-                        wrappedLine.append(newLineStr);
-                        offset = spaceToWrapAt + 1;
-                    } else {
-                        wrappedLine.append(str.substring(offset));
-                        offset = inputLineLength;
-                    }
-                }
-            }
-        }
-
-        // Whatever is left in line is short enough to just pass through
-        wrappedLine.append(str.substring(offset));
-
-        return wrappedLine.toString();
+        return wrap(str, wrapLength, newLineStr, wrapLongWords, " ");
     }
\ No newline at end of file
