diff --git a/old_test.java b/new_test.java
index 4526625..0817817 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,21 +1,21 @@
 @Test
     public void testInsert() {
 
-        StrBuilder sb = new StrBuilder();
+        final StrBuilder sb = new StrBuilder();
         sb.append("barbaz");
         assertEquals("barbaz", sb.toString());
 
         try {
             sb.insert(-1, FOO);
             fail("insert(-1, Object) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, FOO);
             fail("insert(7, Object) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -32,14 +32,14 @@
         try {
             sb.insert(-1, "foo");
             fail("insert(-1, String) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, "foo");
             fail("insert(7, String) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -56,14 +56,14 @@
         try {
             sb.insert(-1, new char[]{'f', 'o', 'o'});
             fail("insert(-1, char[]) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, new char[]{'f', 'o', 'o'});
             fail("insert(7, char[]) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -83,14 +83,14 @@
         try {
             sb.insert(-1, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);
             fail("insert(-1, char[], 3, 3) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);
             fail("insert(7, char[], 3, 3) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -103,28 +103,28 @@
         try {
             sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, -1, 3);
             fail("insert(0, char[], -1, 3) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 10, 3);
             fail("insert(0, char[], 10, 3) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, -1);
             fail("insert(0, char[], 0, -1) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, 10);
             fail("insert(0, char[], 0, 10) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -141,14 +141,14 @@
         try {
             sb.insert(-1, true);
             fail("insert(-1, boolean) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, true);
             fail("insert(7, boolean) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -165,14 +165,14 @@
         try {
             sb.insert(-1, '!');
             fail("insert(-1, char) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, '!');
             fail("insert(7, char) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -186,14 +186,14 @@
         try {
             sb.insert(-1, 0);
             fail("insert(-1, int) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, 0);
             fail("insert(7, int) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -207,14 +207,14 @@
         try {
             sb.insert(-1, 1L);
             fail("insert(-1, long) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, 1L);
             fail("insert(7, long) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -228,14 +228,14 @@
         try {
             sb.insert(-1, 2.3F);
             fail("insert(-1, float) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, 2.3F);
             fail("insert(7, float) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
@@ -249,14 +249,14 @@
         try {
             sb.insert(-1, 4.5D);
             fail("insert(-1, double) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
         try {
             sb.insert(7, 4.5D);
             fail("insert(7, double) expected StringIndexOutOfBoundsException");
-        } catch (IndexOutOfBoundsException e) {
+        } catch (final IndexOutOfBoundsException e) {
             // expected
         }
 
