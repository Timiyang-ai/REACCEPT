diff --git a/old_test.java b/new_test.java
index b18fd41..e7c7e2b 100644
--- a/old_test.java
+++ b/new_test.java
@@ -1,11 +1,11 @@
 @Test
     public void test_isAssignable_ClassArray_ClassArray() throws Exception {
-        Class<?>[] array2 = new Class[] {Object.class, Object.class};
-        Class<?>[] array1 = new Class[] {Object.class};
-        Class<?>[] array1s = new Class[] {String.class};
-        Class<?>[] array0 = new Class[] {};
-        Class<?>[] arrayPrimitives = { Integer.TYPE, Boolean.TYPE };
-        Class<?>[] arrayWrappers = { Integer.class, Boolean.class };
+        final Class<?>[] array2 = new Class[] {Object.class, Object.class};
+        final Class<?>[] array1 = new Class[] {Object.class};
+        final Class<?>[] array1s = new Class[] {String.class};
+        final Class<?>[] array0 = new Class[] {};
+        final Class<?>[] arrayPrimitives = { Integer.TYPE, Boolean.TYPE };
+        final Class<?>[] arrayWrappers = { Integer.class, Boolean.class };
 
         assertFalse(ClassUtils.isAssignable(array1, array2));
         assertFalse(ClassUtils.isAssignable(null, array2));
@@ -19,7 +19,7 @@
         assertTrue(ClassUtils.isAssignable(array1s, array1s));
         assertTrue(ClassUtils.isAssignable(array1s, array1));
 
-        boolean autoboxing = SystemUtils.isJavaVersionAtLeast(JAVA_1_5);
+        final boolean autoboxing = SystemUtils.isJavaVersionAtLeast(JAVA_1_5);
 
         assertEquals(autoboxing, ClassUtils.isAssignable(arrayPrimitives, arrayWrappers));
         assertEquals(autoboxing, ClassUtils.isAssignable(arrayWrappers, arrayPrimitives));
