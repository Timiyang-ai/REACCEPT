diff --git a/old_test.java b/new_test.java
index ab647d5..b7ab2be 100644
--- a/old_test.java
+++ b/new_test.java
@@ -10,10 +10,18 @@
         assertEquals('7', Conversion.boolsToHexDigit(new boolean[]{true, true, true, false}));
         assertEquals('8', Conversion.boolsToHexDigit(new boolean[]{false, false, false, true}));
         assertEquals('9', Conversion.boolsToHexDigit(new boolean[]{true, false, false, true}));
-        assertEquals('A', Conversion.boolsToHexDigit(new boolean[]{false, true, false, true}));
-        assertEquals('B', Conversion.boolsToHexDigit(new boolean[]{true, true, false, true}));
-        assertEquals('C', Conversion.boolsToHexDigit(new boolean[]{false, false, true, true}));
-        assertEquals('D', Conversion.boolsToHexDigit(new boolean[]{true, false, true, true}));
-        assertEquals('E', Conversion.boolsToHexDigit(new boolean[]{false, true, true, true}));
-        assertEquals('F', Conversion.boolsToHexDigit(new boolean[]{true, true, true, true}));
+        assertEquals('a', Conversion.boolsToHexDigit(new boolean[]{false, true, false, true}));
+        assertEquals('b', Conversion.boolsToHexDigit(new boolean[]{true, true, false, true}));
+        assertEquals('c', Conversion.boolsToHexDigit(new boolean[]{false, false, true, true}));
+        assertEquals('d', Conversion.boolsToHexDigit(new boolean[]{true, false, true, true}));
+        assertEquals('e', Conversion.boolsToHexDigit(new boolean[]{false, true, true, true}));
+        assertEquals('f', Conversion.boolsToHexDigit(new boolean[]{true, true, true, true}));
+        assertEquals('1', Conversion.boolsToHexDigit(new boolean[]{true}));
+        assertEquals('f', Conversion.boolsToHexDigit(new boolean[]{true, true, true, true, true}));
+        try {
+            assertEquals('0', Conversion.boolsToHexDigit(new boolean[]{}));
+            fail("Thrown " + ArrayIndexOutOfBoundsException.class.getName() + " expected");
+        } catch (final ArrayIndexOutOfBoundsException e) {
+            // OK
+        }
     }
\ No newline at end of file
