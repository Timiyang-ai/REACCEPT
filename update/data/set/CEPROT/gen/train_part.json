[
    {
        "focal_src": "public int rebalanceNode(RebalancePartitionsInfo stealInfo) { VAdminProto.InitiateRebalanceNodeRequest rebalanceNodeRequest = VAdminProto.InitiateRebalanceNodeRequest.newBuilder().setAttempt(stealInfo.getAttempt()).setDonorId(stealInfo.getDonorId()).setStealerId(stealInfo.getStealerId()).addAllPartitions(stealInfo.getPartitionList()).addAllUnbalancedStore(stealInfo.getUnbalancedStoreList()).addAllDeletePartitions(stealInfo.getDeletePartitionsList()).addAllStealMasterPartitions(stealInfo.getStealMasterPartitions()).addAllStoreToRODir(decodeROStoreVersionDirMap(stealInfo.getStoreToRODir())).build(); VAdminProto.VoldemortAdminRequest adminRequest = VAdminProto.VoldemortAdminRequest.newBuilder().setType(VAdminProto.AdminRequestType.INITIATE_REBALANCE_NODE).setInitiateRebalanceNode(rebalanceNodeRequest).build(); VAdminProto.AsyncOperationStatusResponse.Builder response = sendAndReceive(stealInfo.getStealerId(), adminRequest, VAdminProto.AsyncOperationStatusResponse.newBuilder()); if(response.hasError())throwException(response.getError()); return response.getRequestId(); } ",
        "focal_tgt": "public int rebalanceNode(RebalancePartitionsInfo stealInfo) { VAdminProto.InitiateRebalanceNodeRequest rebalanceNodeRequest = VAdminProto.InitiateRebalanceNodeRequest.newBuilder().setAttempt(stealInfo.getAttempt()).setDonorId(stealInfo.getDonorId()).setStealerId(stealInfo.getStealerId()).addAllPartitions(stealInfo.getPartitionList()).addAllUnbalancedStore(stealInfo.getUnbalancedStoreList()).addAllDeletePartitions(stealInfo.getDeletePartitionsList()).addAllStealMasterPartitions(stealInfo.getStealMasterPartitions()).addAllStealerRoStoreToDir(decodeROStoreVersionDirMap(stealInfo.getStealerNodeROStoreToDir())).addAllDonorRoStoreToDir(decodeROStoreVersionDirMap(stealInfo.getDonorNodeROStoreToDir())).build(); VAdminProto.VoldemortAdminRequest adminRequest = VAdminProto.VoldemortAdminRequest.newBuilder().setType(VAdminProto.AdminRequestType.INITIATE_REBALANCE_NODE).setInitiateRebalanceNode(rebalanceNodeRequest).build(); VAdminProto.AsyncOperationStatusResponse.Builder response = sendAndReceive(stealInfo.getStealerId(), adminRequest, VAdminProto.AsyncOperationStatusResponse.newBuilder()); if(response.hasError())throwException(response.getError()); return response.getRequestId(); } ",
        "test_src": "@Test public void testRebalanceNode() { HashMap < ByteArray, byte[] > entrySet = ServerTestUtils.createRandomKeyValuePairs(TEST_STREAM_KEYS_SIZE); List < Integer > fetchAndUpdatePartitionsList = Arrays.asList(0, 2); int fetchPartitionKeyCount = 0; Store < ByteArray, byte[] > store = getStore(0, testStoreName); for(Entry < ByteArray, byte[] > entry : entrySet.entrySet()) { store.put(entry.getKey(), new Versioned < byte[] > (entry.getValue())); if(isKeyPartition(entry.getKey(), 0, testStoreName, fetchAndUpdatePartitionsList)) { fetchPartitionKeyCount ++ ; } } List < Integer > rebalancePartitionList = Arrays.asList(1, 3); RebalancePartitionsInfo stealInfo = new RebalancePartitionsInfo(1, 0, rebalancePartitionList, rebalancePartitionList, rebalancePartitionList, Arrays.asList(testStoreName), new HashMap < String, String > (), 0); int asyncId = adminClient.rebalanceNode(stealInfo); assertNotSame(\"Got a valid rebalanceAsyncId\", - 1, asyncId); getAdminClient().waitForCompletion(1, asyncId, 120, TimeUnit.SECONDS); store = getStore(1, testStoreName); for(Entry < ByteArray, byte[] > entry : entrySet.entrySet()) { if(isKeyPartition(entry.getKey(), 1, testStoreName, rebalancePartitionList)) { assertSame(\"entry should be present at store\", 1, store.get(entry.getKey()).size()); assertEquals(\"entry value should match\", new String(entry.getValue()), new String(store.get(entry.getKey()).get(0).getValue())); } } } ",
        "test_tgt": "@Test public void testRebalanceNode() { HashMap < ByteArray, byte[] > entrySet = ServerTestUtils.createRandomKeyValuePairs(TEST_STREAM_KEYS_SIZE); List < Integer > fetchAndUpdatePartitionsList = Arrays.asList(0, 2); int fetchPartitionKeyCount = 0; Store < ByteArray, byte[] > store = getStore(0, testStoreName); for(Entry < ByteArray, byte[] > entry : entrySet.entrySet()) { store.put(entry.getKey(), new Versioned < byte[] > (entry.getValue())); if(isKeyPartition(entry.getKey(), 0, testStoreName, fetchAndUpdatePartitionsList)) { fetchPartitionKeyCount ++ ; } } List < Integer > rebalancePartitionList = Arrays.asList(1, 3); RebalancePartitionsInfo stealInfo = new RebalancePartitionsInfo(1, 0, rebalancePartitionList, rebalancePartitionList, rebalancePartitionList, Arrays.asList(testStoreName), new HashMap < String, String > (), new HashMap < String, String > (), 0); int asyncId = adminClient.rebalanceNode(stealInfo); assertNotSame(\"Got a valid rebalanceAsyncId\", - 1, asyncId); getAdminClient().waitForCompletion(1, asyncId, 120, TimeUnit.SECONDS); store = getStore(1, testStoreName); for(Entry < ByteArray, byte[] > entry : entrySet.entrySet()) { if(isKeyPartition(entry.getKey(), 1, testStoreName, rebalancePartitionList)) { assertSame(\"entry should be present at store\", 1, store.get(entry.getKey()).size()); assertEquals(\"entry value should match\", new String(entry.getValue()), new String(store.get(entry.getKey()).get(0).getValue())); } } } ",
        "label": 1,
        "focal_db": [
            5598530,
            "voldemort/voldemort",
            "/data/local_comment_repos/voldemort@voldemort",
            "d24f295f897528431bcdf914e9b8919987252298",
            "b797680bf03944204c9f679e3224f3f7f1f2fdbc",
            "src/java/voldemort/client/protocol/admin/AdminClient.java",
            "36cac4763a20bd466d5a4988ba78776ffef67d5e",
            "src/java/voldemort/client/protocol/admin/AdminClient.java",
            "public int rebalanceNode(RebalancePartitionsInfo stealInfo) {\n        VAdminProto.InitiateRebalanceNodeRequest rebalanceNodeRequest = VAdminProto.InitiateRebalanceNodeRequest.newBuilder()\n                                                                                                                .setAttempt(stealInfo.getAttempt())\n                                                                                                                .setDonorId(stealInfo.getDonorId())\n                                                                                                                .setStealerId(stealInfo.getStealerId())\n                                                                                                                .addAllPartitions(stealInfo.getPartitionList())\n                                                                                                                .addAllUnbalancedStore(stealInfo.getUnbalancedStoreList())\n                                                                                                                .addAllDeletePartitions(stealInfo.getDeletePartitionsList())\n                                                                                                                .addAllStealMasterPartitions(stealInfo.getStealMasterPartitions())\n                                                                                                                .addAllStoreToRODir(decodeROStoreVersionDirMap(stealInfo.getStoreToRODir()))\n                                                                                                                .build();\n        VAdminProto.VoldemortAdminRequest adminRequest = VAdminProto.VoldemortAdminRequest.newBuilder()\n                                                                                          .setType(VAdminProto.AdminRequestType.INITIATE_REBALANCE_NODE)\n                                                                                          .setInitiateRebalanceNode(rebalanceNodeRequest)\n                                                                                          .build();\n        VAdminProto.AsyncOperationStatusResponse.Builder response = sendAndReceive(stealInfo.getStealerId(),\n                                                                                   adminRequest,\n                                                                                   VAdminProto.AsyncOperationStatusResponse.newBuilder());\n\n        if(response.hasError())\n            throwException(response.getError());\n\n        return response.getRequestId();\n    }",
            "/**\n * Rebalance a stealer,donor node pair for the given storeName.<br>\n * stealInfo also have a storeName list, this is passed to client to persist\n * in case of failure and start balancing all the stores in the list only.\n *\n * @param stealInfo\n * @return The request id of the async operation\n */\n",
            "public int rebalanceNode(RebalancePartitionsInfo stealInfo) {\n        VAdminProto.InitiateRebalanceNodeRequest rebalanceNodeRequest = VAdminProto.InitiateRebalanceNodeRequest.newBuilder()\n                                                                                                                .setAttempt(stealInfo.getAttempt())\n                                                                                                                .setDonorId(stealInfo.getDonorId())\n                                                                                                                .setStealerId(stealInfo.getStealerId())\n                                                                                                                .addAllPartitions(stealInfo.getPartitionList())\n                                                                                                                .addAllUnbalancedStore(stealInfo.getUnbalancedStoreList())\n                                                                                                                .addAllDeletePartitions(stealInfo.getDeletePartitionsList())\n                                                                                                                .addAllStealMasterPartitions(stealInfo.getStealMasterPartitions())\n                                                                                                                .addAllStealerRoStoreToDir(decodeROStoreVersionDirMap(stealInfo.getStealerNodeROStoreToDir()))\n                                                                                                                .addAllDonorRoStoreToDir(decodeROStoreVersionDirMap(stealInfo.getDonorNodeROStoreToDir()))\n                                                                                                                .build();\n        VAdminProto.VoldemortAdminRequest adminRequest = VAdminProto.VoldemortAdminRequest.newBuilder()\n                                                                                          .setType(VAdminProto.AdminRequestType.INITIATE_REBALANCE_NODE)\n                                                                                          .setInitiateRebalanceNode(rebalanceNodeRequest)\n                                                                                          .build();\n        VAdminProto.AsyncOperationStatusResponse.Builder response = sendAndReceive(stealInfo.getStealerId(),\n                                                                                   adminRequest,\n                                                                                   VAdminProto.AsyncOperationStatusResponse.newBuilder());\n\n        if(response.hasError())\n            throwException(response.getError());\n\n        return response.getRequestId();\n    }",
            "/**\n * Rebalance a stealer,donor node pair for the given storeName.<br>\n * stealInfo also have a storeName list, this is passed to client to persist\n * in case of failure and start balancing all the stores in the list only.\n *\n * @param stealInfo\n * @return The request id of the async operation\n */\n"
        ],
        "test_db": [
            5598534,
            "voldemort/voldemort",
            "/data/local_comment_repos/voldemort@voldemort",
            "d24f295f897528431bcdf914e9b8919987252298",
            "f30820f0f3ba6a1fb9a9a5e629586f48d0253bc8",
            "test/unit/voldemort/client/AdminServiceBasicTest.java",
            "803b3985535f7e15925321145d8da696f56884b5",
            "test/unit/voldemort/client/AdminServiceBasicTest.java",
            "@Test\n    public void testRebalanceNode() {\n        HashMap<ByteArray, byte[]> entrySet = ServerTestUtils.createRandomKeyValuePairs(TEST_STREAM_KEYS_SIZE);\n        List<Integer> fetchAndUpdatePartitionsList = Arrays.asList(0, 2);\n\n        // insert it into server-0 store\n        int fetchPartitionKeyCount = 0;\n        Store<ByteArray, byte[]> store = getStore(0, testStoreName);\n        for(Entry<ByteArray, byte[]> entry: entrySet.entrySet()) {\n            store.put(entry.getKey(), new Versioned<byte[]>(entry.getValue()));\n            if(isKeyPartition(entry.getKey(), 0, testStoreName, fetchAndUpdatePartitionsList)) {\n                fetchPartitionKeyCount++;\n            }\n        }\n\n        List<Integer> rebalancePartitionList = Arrays.asList(1, 3);\n        RebalancePartitionsInfo stealInfo = new RebalancePartitionsInfo(1,\n                                                                        0,\n                                                                        rebalancePartitionList,\n                                                                        rebalancePartitionList,\n                                                                        rebalancePartitionList,\n                                                                        Arrays.asList(testStoreName),\n                                                                        new HashMap<String, String>(),\n                                                                        0);\n        int asyncId = adminClient.rebalanceNode(stealInfo);\n        assertNotSame(\"Got a valid rebalanceAsyncId\", -1, asyncId);\n\n        getAdminClient().waitForCompletion(1, asyncId, 120, TimeUnit.SECONDS);\n\n        // assert data is copied correctly\n        store = getStore(1, testStoreName);\n        for(Entry<ByteArray, byte[]> entry: entrySet.entrySet()) {\n            if(isKeyPartition(entry.getKey(), 1, testStoreName, rebalancePartitionList)) {\n                assertSame(\"entry should be present at store\", 1, store.get(entry.getKey()).size());\n                assertEquals(\"entry value should match\",\n                             new String(entry.getValue()),\n                             new String(store.get(entry.getKey()).get(0).getValue()));\n            }\n        }\n    }",
            "// check the basic rebalanceNode call.\n",
            "@Test\n    public void testRebalanceNode() {\n        HashMap<ByteArray, byte[]> entrySet = ServerTestUtils.createRandomKeyValuePairs(TEST_STREAM_KEYS_SIZE);\n        List<Integer> fetchAndUpdatePartitionsList = Arrays.asList(0, 2);\n\n        // insert it into server-0 store\n        int fetchPartitionKeyCount = 0;\n        Store<ByteArray, byte[]> store = getStore(0, testStoreName);\n        for(Entry<ByteArray, byte[]> entry: entrySet.entrySet()) {\n            store.put(entry.getKey(), new Versioned<byte[]>(entry.getValue()));\n            if(isKeyPartition(entry.getKey(), 0, testStoreName, fetchAndUpdatePartitionsList)) {\n                fetchPartitionKeyCount++;\n            }\n        }\n\n        List<Integer> rebalancePartitionList = Arrays.asList(1, 3);\n        RebalancePartitionsInfo stealInfo = new RebalancePartitionsInfo(1,\n                                                                        0,\n                                                                        rebalancePartitionList,\n                                                                        rebalancePartitionList,\n                                                                        rebalancePartitionList,\n                                                                        Arrays.asList(testStoreName),\n                                                                        new HashMap<String, String>(),\n                                                                        new HashMap<String, String>(),\n                                                                        0);\n        int asyncId = adminClient.rebalanceNode(stealInfo);\n        assertNotSame(\"Got a valid rebalanceAsyncId\", -1, asyncId);\n\n        getAdminClient().waitForCompletion(1, asyncId, 120, TimeUnit.SECONDS);\n\n        // assert data is copied correctly\n        store = getStore(1, testStoreName);\n        for(Entry<ByteArray, byte[]> entry: entrySet.entrySet()) {\n            if(isKeyPartition(entry.getKey(), 1, testStoreName, rebalancePartitionList)) {\n                assertSame(\"entry should be present at store\", 1, store.get(entry.getKey()).size());\n                assertEquals(\"entry value should match\",\n                             new String(entry.getValue()),\n                             new String(store.get(entry.getKey()).get(0).getValue()));\n            }\n        }\n    }",
            "// check the basic rebalanceNode call.\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "rebalance",
                "rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Initiate",
                "Initiate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "rebalance",
                "rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Initiate",
                "Initiate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attempt",
                "Attempt",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attempt",
                "Attempt",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Donor",
                "Donor",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Donor",
                "Donor",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stealer",
                "Stealer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stealer",
                "Stealer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Unbalanced",
                "Unbalanced",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Unbalanced",
                "Unbalanced",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Delete",
                "Delete",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Delete",
                "Delete",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Steal",
                "Steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Master",
                "Master",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Steal",
                "Steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Master",
                "Master",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Stealer",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Ro",
                "insert"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RO",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Dir",
                "Dir",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "decode",
                "decode",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RO",
                "RO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Version",
                "Version",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dir",
                "Dir",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Stealer",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Node",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RO",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Store",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "To",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Dir",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "All",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Donor",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Ro",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Store",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "To",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Dir",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "decode",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RO",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Store",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Version",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Dir",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Map",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "steal",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Info",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Donor",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Node",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RO",
                "insert"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RO",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Dir",
                "Dir",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Voldemort",
                "Voldemort",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "admin",
                "admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Voldemort",
                "Voldemort",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "INITIATE",
                "INITIATE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "REBALANCE",
                "REBALANCE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NODE",
                "NODE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Initiate",
                "Initiate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "rebalance",
                "rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Async",
                "Async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Operation",
                "Operation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "send",
                "send",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Receive",
                "Receive",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "steal",
                "steal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stealer",
                "Stealer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "admin",
                "admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Admin",
                "Admin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proto",
                "Proto",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Async",
                "Async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Operation",
                "Operation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "response",
                "response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean testConnection(Long id) { DataSourceVO dataSourceVO = this.getDataSource(id); try { DataSource dataSource = new DataSource(); BeanUtils.copyProperties(dataSource, dataSourceVO); return dataSource.testConnection(); } catch(Exception e) { return false; } } ",
        "focal_tgt": "public boolean testConnection(Long id) { DataSourceVO dataSourceVO = this.getDataSourceVoById(id); try { DataSource dataSource = new DataSource(); BeanUtils.copyProperties(dataSource, dataSourceVO); return dataSource.testConnection(); } catch(Exception e) { return false; } } ",
        "test_src": "@Test public void testTestConnection() { try { boolean result = false; try { DataSource dataSource = initSystemDataSourceAndDataSourceIdNotExist(); result = dataSource.testConnection(); assertFalse(true); } catch(Exception e) { assertTrue( ! result); } DataSource dataSource2 = initSystemDataSourceAndDataSourceIdExist(); boolean result2 = dataSource2.testConnection(); assertTrue(result2); DataSource dataSource3 = initCustomDataSourceCannotConnect(); boolean result3 = dataSource3.testConnection(); assertTrue( ! result3); DataSource dataSource4 = initCustomDataSourceCanConnect(); boolean result4 = dataSource4.testConnection(); assertTrue(result4); } catch(Exception e) { assertFalse(true); } } ",
        "test_tgt": "@Test public void testTestConnection() { DataSource dataSource = initSystemDataSourceAndDataSourceIdExist(); boolean result = dataSource.testConnection(); assertTrue(result); DataSource dataSource2 = initCustomDataSourceCanConnect(); boolean result2 = dataSource2.testConnection(); assertTrue(result2); } ",
        "label": 1,
        "focal_db": [
            1770038,
            "dayatang/dddlib",
            "/data/comment_repos/dayatang@dddlib",
            "b0ad6e66eb547e12ab3831bea04ada3e94feba6c",
            "7e649678955b0ffe09ecf1f37e87913f6ab8bdad",
            "koala-gqc/koala-gqc-applicationImpl/src/main/java/org/openkoala/gqc/application/impl/DataSourceApplicationImpl.java",
            "893c5cbc783689543a24e0ea9fa13ed1933911e2",
            "koala-gqc/koala-gqc-applicationImpl/src/main/java/org/openkoala/gqc/application/impl/DataSourceApplicationImpl.java",
            "public boolean testConnection(Long id) {\n\t\tDataSourceVO dataSourceVO = this.getDataSource(id);\n\t\t// \u5c06domain\u8f6c\u6210VO\n\t\ttry {\n\t\t\tDataSource dataSource = new DataSource();\n\t\t\tBeanUtils.copyProperties(dataSource, dataSourceVO);\n\t\t\treturn dataSource.testConnection();\n\t\t} catch (Exception e) {\n//\t\t\te.printStackTrace();\n\t\t\treturn false;\n\t\t}\n\t}",
            "/**\n * \u6d4b\u8bd5\u6570\u636e\u6e90\u8fde\u63a5\n *\n * @return\n */\n",
            "public boolean testConnection(Long id) {\n\t\tDataSourceVO dataSourceVO = this.getDataSourceVoById(id);\n\t\t// \u5c06domain\u8f6c\u6210VO\n\t\ttry {\n\t\t\tDataSource dataSource = new DataSource();\n\t\t\tBeanUtils.copyProperties(dataSource, dataSourceVO);\n\t\t\treturn dataSource.testConnection();\n\t\t} catch (Exception e) {\n\t\t\treturn false;\n\t\t}\n\t}",
            "/**\n * \u6d4b\u8bd5\u6570\u636e\u6e90\u8fde\u63a5\n *\n * @return\n */\n"
        ],
        "test_db": [
            1770060,
            "dayatang/dddlib",
            "/data/comment_repos/dayatang@dddlib",
            "b0ad6e66eb547e12ab3831bea04ada3e94feba6c",
            "611ba519ac1630da847228a81a277f38a0cf1a99",
            "koala-gqc/koala-gqc-core/src/test/java/org/openkoala/gqc/core/domain/DataSourceTest.java",
            "bebd18806c1c93cefcc7d6550de6a00f99b478ad",
            "koala-gqc/koala-gqc-core/src/test/java/org/openkoala/gqc/core/domain/DataSourceTest.java",
            "@Test\n\tpublic void testTestConnection() {\n\t\ttry {\n\t\t\tboolean result = false;\n\t\t\ttry {\n\t\t\t\t//\u7cfb\u7edf\u6570\u636e\u6e90\uff0c\u6570\u636e\u6e90id\u4e0d\u5b58\u5728\n\t\t\t\tDataSource dataSource = initSystemDataSourceAndDataSourceIdNotExist();\n\t\t\t\tresult = dataSource.testConnection();\n\t\t\t\t\n\t\t\t\tassertFalse(true);\n\t\t\t} catch (Exception e) {\n\t\t\t\tassertTrue(!result);\n\t\t\t}\n\t\t\t\n\t\t\t//\u7cfb\u7edf\u6570\u636e\u6e90\uff0c\u6570\u636e\u6e90id\u5b58\u5728\n\t\t\tDataSource dataSource2 = initSystemDataSourceAndDataSourceIdExist();\n\t\t\tboolean result2 = dataSource2.testConnection();\n\t\t\tassertTrue(result2);\n\t\t\t\n\t\t\t//\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\uff0c\u4e0d\u80fd\u8fde\u63a5\n\t\t\tDataSource dataSource3 = initCustomDataSourceCannotConnect();\n\t\t\tboolean result3 = dataSource3.testConnection();\n\t\t\tassertTrue(!result3);\n\t\t\t\n\t\t\t//\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\uff0c\u80fd\u8fde\u63a5\n\t\t\tDataSource dataSource4 = initCustomDataSourceCanConnect();\n\t\t\tboolean result4 = dataSource4.testConnection();\n\t\t\tassertTrue(result4);\n\t\t\t\n\t\t} catch (Exception e) {\n\t\t\tassertFalse(true);\n\t\t}\n\t\t\n\t}",
            "",
            "@Test\n\tpublic void testTestConnection() {\n\t\t//\u7cfb\u7edf\u6570\u636e\u6e90\uff0c\u6570\u636e\u6e90id\u5b58\u5728\n\t\tDataSource dataSource = initSystemDataSourceAndDataSourceIdExist();\n\t\tboolean result = dataSource.testConnection();\n\t\tassertTrue(result);\n\t\t\n\t\t//\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\uff0c\u80fd\u8fde\u63a5\n\t\tDataSource dataSource2 = initCustomDataSourceCanConnect();\n\t\tboolean result2 = dataSource2.testConnection();\n\t\tassertTrue(result2);\n\t}",
            "/**\n * \u6d4b\u8bd5\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "test",
                "test",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connection",
                "Connection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "VO",
                "VO",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "VO",
                "VO",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Vo",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "By",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Properties",
                "Properties",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "VO",
                "VO",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "test",
                "test",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connection",
                "Connection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public long getLastAccessedTime() { if(lastAccessedTime == 0)return nativegetcreationtime(); else return lastAccessedTime; } ",
        "focal_tgt": "public long getLastAccessedTime() { return(lastAccessedTime == 0) ? getCreationTime() : lastAccessedTime; } ",
        "test_src": "@TestTargetNew(level = TestLevel.COMPLETE, notes = \"\", method = \"getLastAccessedTime\", args = { })@KnownFailure(\"Time returned is corrupted\")@AndroidOnly(\"Uses bks key store. Change useBKS to false to run on the RI\")public void test_getLastAccessedTime() { try { long diff = new Date().getTime() - clientSession.getLastAccessedTime(); assertTrue(diff < 10000); } catch(Exception ex) { fail(\"Unexpected exception \" + ex); } } ",
        "test_tgt": "@TestTargetNew(level = TestLevel.COMPLETE, notes = \"\", method = \"getLastAccessedTime\", args = { })@AndroidOnly(\"Uses bks key store. Change useBKS to false to run on the RI\")public void test_getLastAccessedTime() { try { long diff = new Date().getTime() - clientSession.getLastAccessedTime(); assertTrue(diff < 10000); } catch(Exception ex) { fail(\"Unexpected exception \" + ex); } } ",
        "label": 1,
        "focal_db": [
            317256,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "9c9a7be6f40e9c1fc24956fc37e6af43f413ff78",
            "b218271470f1a62fb7bb2c5acd4e1e2ceab1faf2",
            "libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java",
            "9aa4b8618f80cf42c54e8b310e88a0b40f3d6ef7",
            "libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java",
            "public long getLastAccessedTime() {\n        if (lastAccessedTime == 0)\n            return nativegetcreationtime();\n        else\n            return lastAccessedTime;\n    }",
            "/**\n * Gives the last time this concrete SSL session was accessed. Accessing\n * here is to mean that a new connection with the same SSL context data was\n * established.\n *\n * @return the session's accessing time in milli seconds since 12.00 PM,\n * January 1st, 1970\n */\n",
            "public long getLastAccessedTime() {\n        return (lastAccessedTime == 0) ? getCreationTime() : lastAccessedTime;\n    }",
            "/**\n * Gives the last time this concrete SSL session was accessed. Accessing\n * here is to mean that a new connection with the same SSL context data was\n * established.\n *\n * @return the session's last access time in milliseconds since the epoch\n */\n"
        ],
        "test_db": [
            317258,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "9c9a7be6f40e9c1fc24956fc37e6af43f413ff78",
            "6eca114c71e54e433707c2243385c0acf3ec8979",
            "libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java",
            "430d11710e3d90d78b49b5e8bce6e8316082dc21",
            "libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java",
            "@TestTargetNew(\n        level = TestLevel.COMPLETE,\n        notes = \"\",\n        method = \"getLastAccessedTime\",\n        args = {}\n    )\n    @KnownFailure(\"Time returned is corrupted\")\n    @AndroidOnly(\"Uses bks key store. Change useBKS to false to run on the RI\")\n    public void test_getLastAccessedTime() {\n        try {\n            // check if last access time was in the last 10 seconds\n            long diff = new Date().getTime() - clientSession.getLastAccessedTime();\n            assertTrue (diff < 10000);\n        } catch (Exception ex) {\n            fail(\"Unexpected exception \" + ex);\n        }\n    }",
            "/**\n * @tests javax.net.ssl.SSLSession#getLastAccessedTime()\n */\n",
            "@TestTargetNew(\n        level = TestLevel.COMPLETE,\n        notes = \"\",\n        method = \"getLastAccessedTime\",\n        args = {}\n    )\n    @AndroidOnly(\"Uses bks key store. Change useBKS to false to run on the RI\")\n    public void test_getLastAccessedTime() {\n        try {\n            // check if last access time was in the last 10 seconds\n            long diff = new Date().getTime() - clientSession.getLastAccessedTime();\n            assertTrue (diff < 10000);\n        } catch (Exception ex) {\n            fail(\"Unexpected exception \" + ex);\n        }\n    }",
            "/**\n * @tests javax.net.ssl.SSLSession#getLastAccessedTime()\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Last",
                "Last",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Accessed",
                "Accessed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "return",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "last",
                "last",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Accessed",
                "Accessed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "?",
                "replace"
            ],
            [
                "nativegetcreationtime",
                "get",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Creation",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Time",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ":",
                "replace"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "last",
                "last",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Accessed",
                "Accessed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public CriteriaQuery sizeGe(String propName, int size) { criterion = criterion.and(criterionBuilder.sizeGe(propName, size)); return this; } ",
        "focal_tgt": "public CriteriaQuery sizeGe(String propName, int size) { criterion = criterion.and(Criteria.sizeGe(propName, size)); return this; } ",
        "test_src": "@Test public void testSizeGe() { assertEquals(new SizeGeCriterion(\"id\", 3), instance.sizeGe(\"id\", 3).getQueryCriterion()); } ",
        "test_tgt": "@Test public void testSizeGe() { assertEquals(Criteria.sizeGe(\"id\", 3), instance.sizeGe(\"id\", 3).getQueryCriterion()); } ",
        "label": 1,
        "focal_db": [
            1769066,
            "dayatang/dddlib",
            "/data/comment_repos/dayatang@dddlib",
            "566855c10bb0d875e493ef0c5d4d075c80c20a78",
            "be6ead25da6edea839c77c08a8ccc71728dc7fe1",
            "dddlib-domain/src/main/java/org/dayatang/domain/CriteriaQuery.java",
            "be832da5e8058b0ae8ea1780c7307c9511c20967",
            "dddlib-domain/src/main/java/org/dayatang/domain/CriteriaQuery.java",
            "public CriteriaQuery sizeGe(String propName, int size) {\n        criterion = criterion.and(criterionBuilder.sizeGe(propName, size));\n        return this;\n    }",
            "/**\n * \u6dfb\u52a0\u4e00\u4e2a\u201c\u96c6\u5408\u5c5e\u6027\u7684\u7ed3\u679c\u6570\u91cf \u5927\u4e8e\u6216\u7b49\u4e8e size\u201d\u7684\u67e5\u8be2\u6761\u4ef6\u3002\u4f8b\u5982Order\u5bf9\u8c61\u6709\u4e2a\u7c7b\u578b\u4e3aList&lt;OrderItem&gt;\u7684\n * \u96c6\u5408\u5c5e\u6027items\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u8ba2\u8d2d\u4e865\u79cd\u62165\u79cd\u4ee5\u4e0a\u7269\u54c1\u7684\u8ba2\u5355\uff0c\u5219propName\u4e3aitems\uff0csize\u4e3a5.\n *\n * @param propName \u5c5e\u6027\u540d\uff0c\u5fc5\u987b\u662f\u96c6\u5408\u5c5e\u6027\uff08x-to-many\u6216ElementCollection\uff09\n * @param size \u96c6\u5408\u5c5e\u6027\u7684\u7ed3\u679c\u6570\u91cf\n * @return \u5f53\u524d\u67e5\u8be2\u5bf9\u8c61\n */\n",
            "public CriteriaQuery sizeGe(String propName, int size) {\n        criterion = criterion.and(Criteria.sizeGe(propName, size));\n        return this;\n    }",
            "/**\n * \u6dfb\u52a0\u4e00\u4e2a\u201c\u96c6\u5408\u5c5e\u6027\u7684\u7ed3\u679c\u6570\u91cf \u5927\u4e8e\u6216\u7b49\u4e8e size\u201d\u7684\u67e5\u8be2\u6761\u4ef6\u3002\u4f8b\u5982Order\u5bf9\u8c61\u6709\u4e2a\u7c7b\u578b\u4e3aList&lt;OrderItem&gt;\u7684\n * \u96c6\u5408\u5c5e\u6027items\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u8ba2\u8d2d\u4e865\u79cd\u62165\u79cd\u4ee5\u4e0a\u7269\u54c1\u7684\u8ba2\u5355\uff0c\u5219propName\u4e3aitems\uff0csize\u4e3a5.\n *\n * @param propName \u5c5e\u6027\u540d\uff0c\u5fc5\u987b\u662f\u96c6\u5408\u5c5e\u6027\uff08x-to-many\u6216ElementCollection\uff09\n * @param size \u96c6\u5408\u5c5e\u6027\u7684\u7ed3\u679c\u6570\u91cf\n * @return \u5f53\u524d\u67e5\u8be2\u5bf9\u8c61\n */\n"
        ],
        "test_db": [
            1769126,
            "dayatang/dddlib",
            "/data/comment_repos/dayatang@dddlib",
            "566855c10bb0d875e493ef0c5d4d075c80c20a78",
            "e25d49f1423a0476b1687c92774c165cad4ae109",
            "dddlib-domain/src/test/java/org/dayatang/domain/repository/CriteriaQueryTest.java",
            "096288d40740672bbbc0da8a745d9a123bbe90b4",
            "dddlib-domain/src/test/java/org/dayatang/domain/repository/CriteriaQueryTest.java",
            "@Test\n    public void testSizeGe() {\n    \tassertEquals(new SizeGeCriterion(\"id\", 3), instance.sizeGe(\"id\", 3).getQueryCriterion());\n    }",
            "/**\n * Test of sizeGe method, of class CriteriaQuery.\n */\n",
            "@Test\n    public void testSizeGe() {\n    \tassertEquals(Criteria.sizeGe(\"id\", 3), instance.sizeGe(\"id\", 3).getQueryCriterion());\n    }",
            "/**\n * Test of sizeGe method, of class CriteriaQuery.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Criteria",
                "Criteria",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ge",
                "Ge",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "prop",
                "prop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "criterion",
                "criterion",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "criterion",
                "criterion",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "and",
                "and",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "criterion",
                "Criteria",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Builder",
                "",
                "delete"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ge",
                "Ge",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prop",
                "prop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void addProperty(String property); ",
        "focal_tgt": "public void addLocalProperty(String property); ",
        "test_src": "@Test public void testAddProperty__localCategory_asPropertyName()throws Exception { ResourceInstance resource = createNiceMock(ResourceInstance.class); ResourceDefinition resourceDefinition = createNiceMock(ResourceDefinition.class); Schema schema = createNiceMock(Schema.class); Map < String, Set < String > > mapSchemaProps = new HashMap < String, Set < String > > (); Set < String > setProps = new HashSet < String > (); setProps.add(\"property\"); setProps.add(\"property2\"); mapSchemaProps.put(\"category\", setProps); Set < String > setInnerProps = new HashSet < String > (); setInnerProps.add(\"property3\"); setInnerProps.add(\"property4\"); mapSchemaProps.put(\"category/nestedCategory\", setInnerProps); mapSchemaProps.put(null, Collections.singleton(\"property5\")); expect(resource.getResourceDefinition()).andReturn(resourceDefinition).anyTimes(); expect(resourceDefinition.getType()).andReturn(Resource.Type.Service).anyTimes(); expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema).anyTimes(); expect(schema.getCategoryProperties()).andReturn(mapSchemaProps).anyTimes(); replay(m_controller, resource, resourceDefinition, schema); Query query = new TestQuery(resource, null); query.addProperty(null, \"category\", null); Map < String, Set < String > > mapProperties = query.getProperties(); assertEquals(2, mapProperties.size()); Set < String > setResultProps = mapProperties.get(\"category\"); assertEquals(2, setResultProps.size()); assertTrue(setResultProps.contains(\"property\")); assertTrue(setResultProps.contains(\"property2\")); setResultProps = mapProperties.get(\"category/nestedCategory\"); assertEquals(2, setResultProps.size()); assertTrue(setResultProps.contains(\"property3\")); assertTrue(setResultProps.contains(\"property4\")); verify(m_controller, resource, resourceDefinition, schema); } ",
        "test_tgt": "@Test public void testAddProperty__localCategory_asPropertyName()throws Exception { ResourceInstance resource = createNiceMock(ResourceInstance.class); ResourceDefinition resourceDefinition = createNiceMock(ResourceDefinition.class); Schema schema = createNiceMock(Schema.class); expect(resource.getResourceDefinition()).andReturn(resourceDefinition).anyTimes(); expect(resourceDefinition.getType()).andReturn(Resource.Type.Service).anyTimes(); expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema).anyTimes(); expect(resource.getSubResources()).andReturn(Collections. < String, ResourceInstance > emptyMap()).anyTimes(); replay(m_controller, resource, resourceDefinition, schema); Query query = new TestQuery(resource, null); query.addProperty(null, \"category\", null); Set < String > setProperties = query.getProperties(); assertEquals(1, setProperties.size()); assertTrue(setProperties.contains(\"category\")); verify(m_controller, resource, resourceDefinition, schema); } ",
        "label": 1,
        "focal_db": [
            425535,
            "apache/ambari",
            "/data/comment_repos/apache@ambari",
            "476bdf8ff218b25212679a912bbc9928ff20bad1",
            "c38855834c0e667ee5e1ec1ea904a13d4a7cf17f",
            "ambari-server/src/main/java/org/apache/ambari/server/api/query/Query.java",
            "76b2368d9a70edbe344ad07a9117735834af7af2",
            "ambari-server/src/main/java/org/apache/ambari/server/api/query/Query.java",
            "public void addProperty(String property);",
            "/**\n * Add a property to the query.\n * This is the select portion of the query.\n *\n * @param property the property id which contains the group, property name\n *                 and whether the property is temporal\n */\n",
            "public void addLocalProperty(String property);",
            "/**\n * Add a local (not sub-resource) property to the query.\n * This is the select portion of the query.\n *\n * @param property the property id which contains the group, property name\n *                 and whether the property is temporal\n */\n"
        ],
        "test_db": [
            425541,
            "apache/ambari",
            "/data/comment_repos/apache@ambari",
            "476bdf8ff218b25212679a912bbc9928ff20bad1",
            "4ac4b4f4da6bf61f50d7af403eb9c21068de70fd",
            "ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java",
            "a0b41b4bf053cc753fbde74a14e22c3242ab0126",
            "ambari-server/src/test/java/org/apache/ambari/server/api/query/QueryImplTest.java",
            "@Test\n  public void testAddProperty__localCategory_asPropertyName() throws Exception  {\n    ResourceInstance resource = createNiceMock(ResourceInstance.class);\n    ResourceDefinition resourceDefinition = createNiceMock(ResourceDefinition.class);\n    Schema schema = createNiceMock(Schema.class);\n\n    Map<String, Set<String>> mapSchemaProps = new HashMap<String, Set<String>>();\n    Set<String> setProps = new HashSet<String>();\n    setProps.add(\"property\");\n    setProps.add(\"property2\");\n    mapSchemaProps.put(\"category\", setProps);\n    Set<String> setInnerProps = new HashSet<String>();\n    setInnerProps.add(\"property3\");\n    setInnerProps.add(\"property4\");\n    mapSchemaProps.put(\"category/nestedCategory\", setInnerProps);\n    mapSchemaProps.put(null, Collections.singleton(\"property5\"));\n\n    //expectations\n    expect(resource.getResourceDefinition()).andReturn(resourceDefinition).anyTimes();\n\n    expect(resourceDefinition.getType()).andReturn(Resource.Type.Service).anyTimes();\n\n    expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema).anyTimes();\n    expect(schema.getCategoryProperties()).andReturn(mapSchemaProps).anyTimes();\n\n    replay(m_controller, resource, resourceDefinition, schema);\n\n    Query query = new TestQuery(resource, null);\n    query.addProperty(null, \"category\", null);\n\n    Map<String, Set<String>> mapProperties = query.getProperties();\n    assertEquals(2, mapProperties.size());\n    Set<String> setResultProps = mapProperties.get(\"category\");\n    assertEquals(2, setResultProps.size());\n    assertTrue(setResultProps.contains(\"property\"));\n    assertTrue(setResultProps.contains(\"property2\"));\n\n    setResultProps = mapProperties.get(\"category/nestedCategory\");\n    assertEquals(2, setResultProps.size());\n    assertTrue(setResultProps.contains(\"property3\"));\n    assertTrue(setResultProps.contains(\"property4\"));\n\n    verify(m_controller, resource, resourceDefinition, schema);\n  }",
            "// the category name is give as the property name\n",
            "@Test\n  public void testAddProperty__localCategory_asPropertyName() throws Exception  {\n    ResourceInstance resource = createNiceMock(ResourceInstance.class);\n    ResourceDefinition resourceDefinition = createNiceMock(ResourceDefinition.class);\n    Schema schema = createNiceMock(Schema.class);\n\n    //expectations\n    expect(resource.getResourceDefinition()).andReturn(resourceDefinition).anyTimes();\n\n    expect(resourceDefinition.getType()).andReturn(Resource.Type.Service).anyTimes();\n\n    expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema).anyTimes();\n    expect(resource.getSubResources()).andReturn(Collections.<String, ResourceInstance>emptyMap()).anyTimes();\n\n    replay(m_controller, resource, resourceDefinition, schema);\n\n    Query query = new TestQuery(resource, null);\n    query.addProperty(null, \"category\", null);\n\n    Set<String> setProperties = query.getProperties();\n    assertEquals(1, setProperties.size());\n    assertTrue(setProperties.contains(\"category\"));\n\n    verify(m_controller, resource, resourceDefinition, schema);\n  }",
            "// the category name is give as the property name\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "",
                "Local",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Property",
                "Property",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "property",
                "property",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public abstract Result collectResults(File branchTrace, TestVector vector); ",
        "focal_tgt": "public abstract AgentResult collectResults(File branchTrace, TestVector vector); ",
        "test_src": "@Test public void testCollectResults() { TestVector t = new TestVector(new WorkflowTrace(), null, null, ExecutorType.TLS, null); Result r = agent.collectResults(new File(\"../resources/EvolutionaryFuzzer/AFLTest/graph.trace\"), t); assertTrue(\"Failure: Test result should have exactly 4 Vertices\", r.getBranchTrace().getVerticesSet().size() == 4); assertTrue(\"Failure: Test result should have exactly 6 Edges\", r.getBranchTrace().getEdgeMap().size() == 6); } ",
        "test_tgt": "@Test public void testCollectResults() { TestVector t = new TestVector(new WorkflowTrace(), null, null, ExecutorType.TLS, null); AgentResult r = agent.collectResults(new File(\"../resources/EvolutionaryFuzzer/AFLTest/graph.trace\"), t); assertTrue(\"Failure: Test result should have exactly 4 Vertices\", r.getBranchTrace().getVerticesSet().size() == 4); assertTrue(\"Failure: Test result should have exactly 6 Edges\", r.getBranchTrace().getEdgeMap().size() == 6); } ",
        "label": 1,
        "focal_db": [
            3401134,
            "RUB-NDS/TLS-Attacker",
            "/data/comment_repos/RUB-NDS@TLS-Attacker",
            "bd78fc9a453ce5e67ffbce9f96a9b467599a8891",
            "2bae21773d47cd5fbdd41fce93308e414a479e0f",
            "EvolutionaryFuzzer/src/main/java/tlsattacker/fuzzer/agent/Agent.java",
            "fa3359b527c28eb393330a07003efb2e10a2205f",
            "EvolutionaryFuzzer/src/main/java/tlsattacker/fuzzer/agent/Agent.java",
            "public abstract Result collectResults(File branchTrace, TestVector vector);",
            "/**\n * This method is used to receive the Results of the current TestVector\n *\n * @param branchTrace\n *            File containing the Branch Information\n * @param vector\n *            The TestVector that was executed.\n * @return Result Object which contains all Information of the executed\n *         TestVector.\n */\n",
            "public abstract AgentResult collectResults(File branchTrace, TestVector vector);",
            "/**\n * This method is used to receive the Results of the current TestVector\n *\n * @param branchTrace\n *            File containing the Branch Information\n * @param vector\n *            The TestVector that was executed.\n * @return AgentResult Object which contains all Information of the executed\n *         TestVector.\n */\n"
        ],
        "test_db": [
            3401179,
            "RUB-NDS/TLS-Attacker",
            "/data/comment_repos/RUB-NDS@TLS-Attacker",
            "bd78fc9a453ce5e67ffbce9f96a9b467599a8891",
            "b69b99d1efe965c04ad934f9d9fc9feb2b40a51c",
            "EvolutionaryFuzzer/src/test/java/tlsattacker/fuzzer/agent/AflAgentTest.java",
            "a881723d943f40ab56056051bee20ab68a29a63f",
            "EvolutionaryFuzzer/src/test/java/tlsattacker/fuzzer/agent/AflAgentTest.java",
            "@Test\n    public void testCollectResults() {\n        TestVector t = new TestVector(new WorkflowTrace(), null, null, ExecutorType.TLS, null);\n        Result r = agent.collectResults(new File(\"../resources/EvolutionaryFuzzer/AFLTest/graph.trace\"), t);\n        assertTrue(\"Failure: Test result should have exactly 4 Vertices\",\n                r.getBranchTrace().getVerticesSet().size() == 4);\n        assertTrue(\"Failure: Test result should have exactly 6 Edges\", r.getBranchTrace().getEdgeMap().size() == 6);\n    }",
            "/**\n */\n",
            "@Test\n    public void testCollectResults() {\n        TestVector t = new TestVector(new WorkflowTrace(), null, null, ExecutorType.TLS, null);\n        AgentResult r = agent.collectResults(new File(\"../resources/EvolutionaryFuzzer/AFLTest/graph.trace\"), t);\n        assertTrue(\"Failure: Test result should have exactly 4 Vertices\",\n                r.getBranchTrace().getVerticesSet().size() == 4);\n        assertTrue(\"Failure: Test result should have exactly 6 Edges\", r.getBranchTrace().getEdgeMap().size() == 6);\n    }",
            "/**\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "abstract",
                "abstract",
                "equal"
            ],
            [
                "",
                "Agent",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Result",
                "Result",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Results",
                "Results",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "branch",
                "branch",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Trace",
                "Trace",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Test",
                "Test",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Vector",
                "Vector",
                "equal"
            ],
            [
                "vector",
                "vector",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "private FElem parse(final QueryContext ctx)throws QueryException { final Item opt = expr.length > 1 ? expr[1].item(ctx, info) : null; final TokenMap map = new FuncParams(Q_OPTIONS, info).parse(opt); final boolean header = map.contains(HEADER) && eq(map.get(HEADER), TRUE); byte sep = CsvParser.SEPMAPPINGS[0]; final byte[]s = map.get(SEPARATOR); if(s != null) { if(s.length != 1)BXCS_SEP.thrw(info); sep = s[0]; } final CsvParser parser = new CsvParser(sep, header); try { return parser.convert(checkStr(expr[0], ctx)); } catch(final IOException ex) { throw BXCS_ERROR.thrw(info, ex); } } ",
        "focal_tgt": "private FElem parse(final QueryContext ctx)throws QueryException { final byte[]input = checkStr(expr[0], ctx); final Item opt = expr.length > 1 ? expr[1].item(ctx, info) : null; final TokenMap map = new FuncParams(Q_OPTIONS, info).parse(opt); final boolean header = map.contains(HEADER) && eq(map.get(HEADER), TRUE); byte sep = CsvParser.SEPMAPPINGS[0]; final byte[]s = map.get(SEPARATOR); if(s != null) { if(s.length != 1)BXCS_SEP.thrw(info); sep = s[0]; } try { return new CsvParser(sep, header).convert(input); } catch(final IOException ex) { throw BXCS_ERROR.thrw(info, ex); } } ",
        "test_src": "@Test public void parse() { query(EXISTS.args(_HTML_PARSE.args(\"&lt;html/&gt;\") + \"/*:html\"), \"true\"); query(_HTML_PARSE.args(\"&lt;html/&gt;\", \" map{'nons':=true()}\"), \"<html/>\"); } ",
        "test_tgt": "@Test public void parse() { query(EXISTS.args(_HTML_PARSE.args(\"&lt;html/&gt;\") + \"/*:html\"), \"true\"); query(_HTML_PARSE.args(\"&lt;html/&gt;\", \" {'nons':true()}\"), \"<html/>\"); } ",
        "label": 1,
        "focal_db": [
            4640931,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "fcb196b7b0ea93cf8a39824a1a45fd76588d5cfe",
            "a786005725399bd0f4348b513b8db27925929350",
            "basex-core/src/main/java/org/basex/query/func/FNCsv.java",
            "7ca4211fca3aa95963e7a85effa8eff2b7e17bd9",
            "basex-core/src/main/java/org/basex/query/func/FNCsv.java",
            "private FElem parse(final QueryContext ctx) throws QueryException {\n    final Item opt = expr.length > 1 ? expr[1].item(ctx, info) : null;\n    final TokenMap map = new FuncParams(Q_OPTIONS, info).parse(opt);\n\n    final boolean header = map.contains(HEADER) && eq(map.get(HEADER), TRUE);\n    byte sep = CsvParser.SEPMAPPINGS[0];\n    final byte[] s = map.get(SEPARATOR);\n    if(s != null) {\n      if(s.length != 1) BXCS_SEP.thrw(info);\n      sep = s[0];\n    }\n    final CsvParser parser = new CsvParser(sep, header);\n\n    try {\n      return parser.convert(checkStr(expr[0], ctx));\n    } catch(final IOException ex) {\n      throw BXCS_ERROR.thrw(info, ex);\n    }\n  }",
            "/**\n * Converts CSV input to an element node.\n * @param ctx query context\n * @return element node\n * @throws QueryException query exception\n */\n",
            "private FElem parse(final QueryContext ctx) throws QueryException {\n    final byte[] input = checkStr(expr[0], ctx);\n    final Item opt = expr.length > 1 ? expr[1].item(ctx, info) : null;\n    final TokenMap map = new FuncParams(Q_OPTIONS, info).parse(opt);\n\n    final boolean header = map.contains(HEADER) && eq(map.get(HEADER), TRUE);\n    byte sep = CsvParser.SEPMAPPINGS[0];\n    final byte[] s = map.get(SEPARATOR);\n    if(s != null) {\n      if(s.length != 1) BXCS_SEP.thrw(info);\n      sep = s[0];\n    }\n    try {\n      return new CsvParser(sep, header).convert(input);\n    } catch(final IOException ex) {\n      throw BXCS_ERROR.thrw(info, ex);\n    }\n  }",
            "/**\n * Converts CSV input to an element node.\n * @param ctx query context\n * @return element node\n * @throws QueryException query exception\n */\n"
        ],
        "test_db": [
            4640949,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "fcb196b7b0ea93cf8a39824a1a45fd76588d5cfe",
            "c3cbe95a34f80ab782483a5c043f523767bd18fa",
            "basex-core/src/test/java/org/basex/test/query/func/FNHtmlTest.java",
            "e21d19659ecb152c96744c284c8eb06da4bc6267",
            "basex-core/src/test/java/org/basex/test/query/func/FNHtmlTest.java",
            "@Test\n  public void parse() {\n    // check if the function returns a HTML root node\n    query(EXISTS.args(_HTML_PARSE.args(\"&lt;html/&gt;\") + \"/*:html\"), \"true\");\n    // check if the function returns <html/>\n    query(_HTML_PARSE.args(\"&lt;html/&gt;\", \" map{'nons':=true()}\"), \"<html/>\");\n  }",
            "/**\n * Test method.\n */\n",
            "@Test\n  public void parse() {\n    // check if the function returns a HTML root node\n    query(EXISTS.args(_HTML_PARSE.args(\"&lt;html/&gt;\") + \"/*:html\"), \"true\");\n    // check if the function returns <html/>\n    query(_HTML_PARSE.args(\"&lt;html/&gt;\", \" {'nons':true()}\"), \"<html/>\");\n  }",
            "/**\n * Test method.\n */\n"
        ],
        "edit_seq": [
            [
                "private",
                "private",
                "equal"
            ],
            [
                "F",
                "F",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Elem",
                "Elem",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "byte",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "input",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "check",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Str",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "expr",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ctx",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Item",
                "Item",
                "equal"
            ],
            [
                "opt",
                "opt",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "expr",
                "expr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "expr",
                "expr",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "item",
                "item",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Func",
                "Func",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Params",
                "Params",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Q",
                "Q",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "OPTIONS",
                "OPTIONS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "opt",
                "opt",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "header",
                "header",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HEADER",
                "HEADER",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "eq",
                "eq",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HEADER",
                "HEADER",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "TRUE",
                "TRUE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "sep",
                "sep",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Csv",
                "Csv",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEPMAPPINGS",
                "SEPMAPPINGS",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SEPARATOR",
                "SEPARATOR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "BXCS",
                "BXCS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SEP",
                "SEP",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "thrw",
                "thrw",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "sep",
                "sep",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "final",
                "try",
                "replace"
            ],
            [
                "Csv",
                "{",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Parser",
                "",
                "delete"
            ],
            [
                "parser",
                "return",
                "replace"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Csv",
                "Csv",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sep",
                "sep",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "header",
                "header",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "try",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "parser",
                "",
                "delete"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "convert",
                "convert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "check",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Str",
                "input",
                "replace"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "expr",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ctx",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "IO",
                "IO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "BXCS",
                "BXCS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ERROR",
                "ERROR",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "thrw",
                "thrw",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ex",
                "ex",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Weld initialize() { SEWeldDeployment deployment = new SEWeldDeployment() { }; bootstrap.startContainer(Environments.SE, deployment, this.applicationBeanStore); final BeanDeploymentArchive mainBeanDepArch = deployment.getBeanDeploymentArchives().get(0); this.manager = bootstrap.getManager(mainBeanDepArch); bootstrap.startInitialization(); bootstrap.deployBeans(); WeldManagerUtils.getInstanceByType(manager, ShutdownManager.class).setBootstrap(bootstrap); bootstrap.validateBeans(); bootstrap.endInitialization(); instanceManager = WeldManagerUtils.getInstanceByType(manager, InstanceManager.class); return this; } ",
        "focal_tgt": "public WeldContainer initialize() { SEWeldDeployment deployment = new SEWeldDeployment() { }; bootstrap.startContainer(Environments.SE, deployment, this.applicationBeanStore); final BeanDeploymentArchive mainBeanDepArch = deployment.getBeanDeploymentArchives().get(0); this.manager = bootstrap.getManager(mainBeanDepArch); bootstrap.startInitialization(); bootstrap.deployBeans(); WeldManagerUtils.getInstanceByType(manager, ShutdownManager.class).setBootstrap(bootstrap); bootstrap.validateBeans(); bootstrap.endInitialization(); InstanceManager instanceManager = WeldManagerUtils.getInstanceByType(manager, InstanceManager.class); return new WeldContainer(instanceManager, manager); } ",
        "test_src": "@Test public void testInitialize() { Weld weld = new Weld().initialize(); MainTestBean mainTestBean = weld.instance().select(MainTestBean.class).get(); Assert.assertNotNull(mainTestBean); ParametersTestBean paramsBean = mainTestBean.getParametersTestBean(); Assert.assertNotNull(paramsBean); Assert.assertNotNull(paramsBean.getParameters()); shutdownManager(weld.getBeanManager()); } ",
        "test_tgt": "@Test public void testInitialize() { WeldContainer weld = new Weld().initialize(); MainTestBean mainTestBean = weld.instance().select(MainTestBean.class).get(); Assert.assertNotNull(mainTestBean); ParametersTestBean paramsBean = mainTestBean.getParametersTestBean(); Assert.assertNotNull(paramsBean); Assert.assertNotNull(paramsBean.getParameters()); shutdownManager(weld.getBeanManager()); } ",
        "label": 1,
        "focal_db": [
            5643907,
            "weld/core",
            "/data/local_comment_repos/weld@core",
            "56f27100c80a4277d38f30733c688850a2debaf6",
            "4d19b67c0287a5d38eaade79e787e566f64cb59f",
            "src/main/java/org/jboss/weld/environment/se/Weld.java",
            "c430a84cdf4dd3b07cfd93d964884cc1b9876c1c",
            "src/main/java/org/jboss/weld/environment/se/Weld.java",
            "public Weld initialize()\n   {\n\n      SEWeldDeployment deployment = new SEWeldDeployment()\n      {\n      };\n      bootstrap.startContainer(Environments.SE, deployment, this.applicationBeanStore);\n      final BeanDeploymentArchive mainBeanDepArch = deployment.getBeanDeploymentArchives().get(0);\n      this.manager = bootstrap.getManager(mainBeanDepArch);\n      bootstrap.startInitialization();\n      bootstrap.deployBeans();\n      WeldManagerUtils.getInstanceByType(manager, ShutdownManager.class).setBootstrap(bootstrap);\n      bootstrap.validateBeans();\n      bootstrap.endInitialization();\n\n      instanceManager = WeldManagerUtils.getInstanceByType(manager, InstanceManager.class);\n\n      return this;\n   }",
            "",
            "public WeldContainer initialize()\n   {\n\n      SEWeldDeployment deployment = new SEWeldDeployment()\n      {\n      };\n      bootstrap.startContainer(Environments.SE, deployment, this.applicationBeanStore);\n      final BeanDeploymentArchive mainBeanDepArch = deployment.getBeanDeploymentArchives().get(0);\n      this.manager = bootstrap.getManager(mainBeanDepArch);\n      bootstrap.startInitialization();\n      bootstrap.deployBeans();\n      WeldManagerUtils.getInstanceByType(manager, ShutdownManager.class).setBootstrap(bootstrap);\n      bootstrap.validateBeans();\n      bootstrap.endInitialization();\n\n      InstanceManager instanceManager = WeldManagerUtils.getInstanceByType(manager, InstanceManager.class);\n\n      return new WeldContainer(instanceManager, manager);\n\n   }",
            "/**\n * Boots Weld and creates and returns a WeldContainer instance, through which\n * beans and events can be accesed.\n */\n"
        ],
        "test_db": [
            5643913,
            "weld/core",
            "/data/local_comment_repos/weld@core",
            "56f27100c80a4277d38f30733c688850a2debaf6",
            "0e8d791b1d4591cf48da9828b9f65c2afe3eb18d",
            "src/test/java/org/jboss/weld/environment/se/test/WeldMainTest.java",
            "49456b634778260b9f62497fd144b7f493ee5d0e",
            "src/test/java/org/jboss/weld/environment/se/test/WeldMainTest.java",
            "@Test\n   public void testInitialize()\n   {\n\n      Weld weld = new Weld().initialize();\n\n      MainTestBean mainTestBean = weld.instance().select(MainTestBean.class).get();\n      Assert.assertNotNull(mainTestBean);\n\n      ParametersTestBean paramsBean = mainTestBean.getParametersTestBean();\n      Assert.assertNotNull(paramsBean);\n      Assert.assertNotNull(paramsBean.getParameters());\n\n      shutdownManager(weld.getBeanManager());\n   }",
            "/**\n * Test the alternate API for boting Weld from an SE app.\n */\n",
            "@Test\n   public void testInitialize()\n   {\n\n      WeldContainer weld = new Weld().initialize();\n\n      MainTestBean mainTestBean = weld.instance().select(MainTestBean.class).get();\n      Assert.assertNotNull(mainTestBean);\n\n      ParametersTestBean paramsBean = mainTestBean.getParametersTestBean();\n      Assert.assertNotNull(paramsBean);\n      Assert.assertNotNull(paramsBean.getParameters());\n\n      shutdownManager(weld.getBeanManager());\n   }",
            "/**\n * Test the alternate API for boting WeldContainer from an SE app.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Weld",
                "Weld",
                "equal"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Container",
                "insert"
            ],
            [
                "initialize",
                "initialize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "SE",
                "SE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Weld",
                "Weld",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deployment",
                "Deployment",
                "equal"
            ],
            [
                "deployment",
                "deployment",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "SE",
                "SE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Weld",
                "Weld",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deployment",
                "Deployment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Container",
                "Container",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Environments",
                "Environments",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SE",
                "SE",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "deployment",
                "deployment",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "application",
                "application",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deployment",
                "Deployment",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Archive",
                "Archive",
                "equal"
            ],
            [
                "main",
                "main",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dep",
                "Dep",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Arch",
                "Arch",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "deployment",
                "deployment",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deployment",
                "Deployment",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Archives",
                "Archives",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "manager",
                "manager",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "main",
                "main",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dep",
                "Dep",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Arch",
                "Arch",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Initialization",
                "Initialization",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "deploy",
                "deploy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Beans",
                "Beans",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Weld",
                "Weld",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "manager",
                "manager",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Shutdown",
                "Shutdown",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bootstrap",
                "Bootstrap",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Beans",
                "Beans",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bootstrap",
                "bootstrap",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "end",
                "end",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Initialization",
                "Initialization",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "Instance",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Manager",
                "insert"
            ],
            [
                "instance",
                "instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Weld",
                "Weld",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "manager",
                "manager",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "new",
                "replace"
            ],
            [
                "",
                "Weld",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Container",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "instance",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Manager",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "manager",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "protected void prepareConfiguration(String path, Configuration conf, org.apache.hadoop.conf.Configuration hadoopConf) { String ufsHdfsImpl = mConfiguration.get(Constants.UNDERFS_HDFS_IMPL); if( ! StringUtils.isEmpty(ufsHdfsImpl)) { hadoopConf.set(\"fs.hdfs.impl\", ufsHdfsImpl); } hadoopConf.set(\"fs.hdfs.impl.disable.cache\", System.getProperty(\"fs.hdfs.impl.disable.cache\", \"false\")); HdfsUnderFileSystemUtils.addKey(hadoopConf, conf, Constants.UNDERFS_HDFS_CONFIGURATION); } ",
        "focal_tgt": "protected void prepareConfiguration(String path, org.apache.hadoop.conf.Configuration hadoopConf) { String ufsHdfsImpl = Configuration.get(Constants.UNDERFS_HDFS_IMPL); if( ! StringUtils.isEmpty(ufsHdfsImpl)) { hadoopConf.set(\"fs.hdfs.impl\", ufsHdfsImpl); } hadoopConf.set(\"fs.hdfs.impl.disable.cache\", System.getProperty(\"fs.hdfs.impl.disable.cache\", \"false\")); HdfsUnderFileSystemUtils.addKey(hadoopConf, Constants.UNDERFS_HDFS_CONFIGURATION); } ",
        "test_src": "@Test public void prepareConfigurationTest()throws Exception { Configuration tConf = new Configuration(); org.apache.hadoop.conf.Configuration hConf = new org.apache.hadoop.conf.Configuration(); mMockHdfsUnderFileSystem.prepareConfiguration(\"\", tConf, hConf); Assert.assertEquals(\"org.apache.hadoop.hdfs.DistributedFileSystem\", hConf.get(\"fs.hdfs.impl\")); Assert.assertFalse(hConf.getBoolean(\"fs.hdfs.impl.disable.cache\", false)); Assert.assertNotNull(hConf.get(Constants.UNDERFS_HDFS_CONFIGURATION)); } ",
        "test_tgt": "@Test public void prepareConfigurationTest()throws Exception { Configuration.defaultInit(); org.apache.hadoop.conf.Configuration conf = new org.apache.hadoop.conf.Configuration(); mMockHdfsUnderFileSystem.prepareConfiguration(\"\", conf); Assert.assertEquals(\"org.apache.hadoop.hdfs.DistributedFileSystem\", conf.get(\"fs.hdfs.impl\")); Assert.assertFalse(conf.getBoolean(\"fs.hdfs.impl.disable.cache\", false)); Assert.assertNotNull(conf.get(Constants.UNDERFS_HDFS_CONFIGURATION)); } ",
        "label": 1,
        "focal_db": [
            255511,
            "Alluxio/alluxio",
            "/data/comment_repos/Alluxio@alluxio",
            "e2d4f90be1bd523215bcb099361f5305f7d78a0d",
            "6a4927b6e49db62d2fc255df751dc5dfb8d29fb3",
            "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java",
            "f974100314f2a86ac9821e865c5e4a594d172d6a",
            "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java",
            "protected void prepareConfiguration(String path, Configuration conf,\n      org.apache.hadoop.conf.Configuration hadoopConf) {\n    // On Hadoop 2.x this is strictly unnecessary since it uses ServiceLoader to automatically\n    // discover available file system implementations. However this configuration setting is\n    // required for earlier Hadoop versions plus it is still honoured as an override even in 2.x so\n    // if present propagate it to the Hadoop configuration\n    String ufsHdfsImpl = mConfiguration.get(Constants.UNDERFS_HDFS_IMPL);\n    if (!StringUtils.isEmpty(ufsHdfsImpl)) {\n      hadoopConf.set(\"fs.hdfs.impl\", ufsHdfsImpl);\n    }\n\n    // To disable the instance cache for hdfs client, otherwise it causes the\n    // FileSystem closed exception. Being configurable for unit/integration\n    // test only, and not expose to the end-user currently.\n    hadoopConf.set(\"fs.hdfs.impl.disable.cache\",\n        System.getProperty(\"fs.hdfs.impl.disable.cache\", \"false\"));\n\n    HdfsUnderFileSystemUtils.addKey(hadoopConf, conf, Constants.UNDERFS_HDFS_CONFIGURATION);\n  }",
            "/**\n * Prepares the Hadoop configuration necessary to successfully obtain a {@link FileSystem}\n * instance that can access the provided path.\n * <p>\n * Derived implementations that work with specialised Hadoop {@linkplain FileSystem} API\n * compatible implementations can override this method to add implementation specific\n * configuration necessary for obtaining a usable {@linkplain FileSystem} instance.\n * </p>\n *\n * @param path file system path\n * @param conf Alluxio Configuration\n * @param hadoopConf Hadoop configuration\n */\n",
            "protected void prepareConfiguration(String path,\n      org.apache.hadoop.conf.Configuration hadoopConf) {\n    // On Hadoop 2.x this is strictly unnecessary since it uses ServiceLoader to automatically\n    // discover available file system implementations. However this configuration setting is\n    // required for earlier Hadoop versions plus it is still honoured as an override even in 2.x so\n    // if present propagate it to the Hadoop configuration\n    String ufsHdfsImpl = Configuration.get(Constants.UNDERFS_HDFS_IMPL);\n    if (!StringUtils.isEmpty(ufsHdfsImpl)) {\n      hadoopConf.set(\"fs.hdfs.impl\", ufsHdfsImpl);\n    }\n\n    // To disable the instance cache for hdfs client, otherwise it causes the\n    // FileSystem closed exception. Being configurable for unit/integration\n    // test only, and not expose to the end-user currently.\n    hadoopConf.set(\"fs.hdfs.impl.disable.cache\",\n        System.getProperty(\"fs.hdfs.impl.disable.cache\", \"false\"));\n\n    HdfsUnderFileSystemUtils.addKey(hadoopConf, Constants.UNDERFS_HDFS_CONFIGURATION);\n  }",
            "/**\n * Prepares the Hadoop configuration necessary to successfully obtain a {@link FileSystem}\n * instance that can access the provided path.\n * <p>\n * Derived implementations that work with specialised Hadoop {@linkplain FileSystem} API\n * compatible implementations can override this method to add implementation specific\n * configuration necessary for obtaining a usable {@linkplain FileSystem} instance.\n * </p>\n *\n * @param path file system path\n * @param hadoopConf Hadoop configuration\n */\n"
        ],
        "test_db": [
            255514,
            "Alluxio/alluxio",
            "/data/comment_repos/Alluxio@alluxio",
            "e2d4f90be1bd523215bcb099361f5305f7d78a0d",
            "4509b18ff79e39b4f12d6c1a6919407768daf167",
            "underfs/hdfs/src/test/java/alluxio/underfs/hdfs/HdfsUnderFileSystemTest.java",
            "eb4f86494ac42e95b3b28a4df5352b0228550255",
            "underfs/hdfs/src/test/java/alluxio/underfs/hdfs/HdfsUnderFileSystemTest.java",
            "@Test\n  public void prepareConfigurationTest() throws Exception {\n    Configuration tConf = new Configuration();\n    org.apache.hadoop.conf.Configuration hConf = new org.apache.hadoop.conf.Configuration();\n    mMockHdfsUnderFileSystem.prepareConfiguration(\"\", tConf, hConf);\n    Assert.assertEquals(\"org.apache.hadoop.hdfs.DistributedFileSystem\", hConf.get(\"fs.hdfs.impl\"));\n    Assert.assertFalse(hConf.getBoolean(\"fs.hdfs.impl.disable.cache\", false));\n    Assert.assertNotNull(hConf.get(Constants.UNDERFS_HDFS_CONFIGURATION));\n  }",
            "/**\n * Tests the {@link HdfsUnderFileSystem#prepareConfiguration} method.\n *\n * Checks the hdfs implements class and alluxio underfs config setting\n */\n",
            "@Test\n  public void prepareConfigurationTest() throws Exception {\n    Configuration.defaultInit();\n    org.apache.hadoop.conf.Configuration conf = new org.apache.hadoop.conf.Configuration();\n    mMockHdfsUnderFileSystem.prepareConfiguration(\"\", conf);\n    Assert.assertEquals(\"org.apache.hadoop.hdfs.DistributedFileSystem\", conf.get(\"fs.hdfs.impl\"));\n    Assert.assertFalse(conf.getBoolean(\"fs.hdfs.impl.disable.cache\", false));\n    Assert.assertNotNull(conf.get(Constants.UNDERFS_HDFS_CONFIGURATION));\n  }",
            "/**\n * Tests the {@link HdfsUnderFileSystem#prepareConfiguration} method.\n *\n * Checks the hdfs implements class and alluxio underfs config setting\n */\n"
        ],
        "edit_seq": [
            [
                "protected",
                "protected",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "prepare",
                "prepare",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Configuration",
                "",
                "delete"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "apache",
                "apache",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "conf",
                "conf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Conf",
                "Conf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "ufs",
                "ufs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "m",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Constants",
                "Constants",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UNDERFS",
                "UNDERFS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "HDFS",
                "HDFS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "IMPL",
                "IMPL",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ufs",
                "ufs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Conf",
                "Conf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "fs",
                "fs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hdfs",
                "hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "impl",
                "impl",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ufs",
                "ufs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Conf",
                "Conf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "fs",
                "fs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hdfs",
                "hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "impl",
                "impl",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "disable",
                "disable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "cache",
                "cache",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Property",
                "Property",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "fs",
                "fs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hdfs",
                "hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "impl",
                "impl",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "disable",
                "disable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "cache",
                "cache",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Under",
                "Under",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Conf",
                "Conf",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "conf",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Constants",
                "Constants",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UNDERFS",
                "UNDERFS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "HDFS",
                "HDFS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "CONFIGURATION",
                "CONFIGURATION",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Nonnull String toScript(@Nonnull final TransformRequest request) { final StringBuilder script = new StringBuilder(); script.append(\"class Transform (sqlContext: org.apache.spark.sql.SQLContext, sparkContextService: com.thinkbiganalytics.spark.SparkContextService) extends \"); script.append(transformScriptClass.getName()); script.append(\"(sqlContext, sparkContextService) {\\n\"); script.append(\"override def dataFrame: org.apache.spark.sql.DataFrame = {\"); script.append(request.getScript()); script.append(\"}\\n\"); if(request.getParent() != null) { script.append(\"override def parentDataFrame: org.apache.spark.sql.DataFrame = {\"); script.append(request.getParent().getScript()); script.append(\"}\\n\"); script.append(\"override def parentTable: String = {\\\"\"); script.append(StringEscapeUtils.escapeJava(request.getParent().getTable())); script.append(\"\\\"}\\n\"); } script.append(\"}\\n\"); script.append(\"new Transform(sqlContext, sparkContextService).run()\\n\"); return script.toString(); } ",
        "focal_tgt": "@Nonnull@VisibleForTesting String toScript(@Nonnull final TransformRequest request) { final StringBuilder script = new StringBuilder(); script.append(\"class Transform (sqlContext: org.apache.spark.sql.SQLContext, sparkContextService: com.thinkbiganalytics.spark.SparkContextService) extends \"); script.append(transformScriptClass.getName()); script.append(\"(sqlContext, sparkContextService) {\\n\"); script.append(\"override def dataFrame: org.apache.spark.sql.DataFrame = {\"); script.append(request.getScript()); script.append(\"}\\n\"); if(request.getParent() != null) { script.append(\"override def parentDataFrame: org.apache.spark.sql.DataFrame = {\"); script.append(request.getParent().getScript()); script.append(\"}\\n\"); script.append(\"override def parentTable: String = {\\\"\"); script.append(StringEscapeUtils.escapeJava(request.getParent().getTable())); script.append(\"\\\"}\\n\"); } script.append(\"}\\n\"); script.append(\"new Transform(sqlContext, sparkContextService).run()\\n\"); return script.toString(); } ",
        "test_src": "@Test public void toScript()throws Exception { final TransformRequest request = new TransformRequest(); request.setScript(\"sqlContext.range(1,10)\"); final TransformService service = new TransformService(TransformScript.class, Mockito.mock(SparkScriptEngine.class), Mockito.mock(SparkContextService.class), Mockito.mock(TransformJobTracker.class)); final String expected = IOUtils.toString(getClass().getResourceAsStream(\"transform-service-script1.scala\"), \"UTF-8\"); Assert.assertEquals(expected, service.toScript(request)); } ",
        "test_tgt": "@Test public void toScript()throws Exception { final TransformRequest request = new TransformRequest(); request.setScript(\"sqlContext.range(1,10)\"); final TransformService service = new TransformService(TransformScript.class, Mockito.mock(SparkScriptEngine.class), Mockito.mock(SparkContextService.class), Mockito.mock(JobTrackerService.class)); final String expected = IOUtils.toString(getClass().getResourceAsStream(\"transform-service-script1.scala\"), \"UTF-8\"); Assert.assertEquals(expected, service.toScript(request)); } ",
        "label": 1,
        "focal_db": [
            3666286,
            "Teradata/kylo",
            "/data/comment_repos/Teradata@kylo",
            "66ead2706dd08eded94247a111dd8942b0286e54",
            "f175b9d53ddcace7bf63c20b29c6a3aa968868b6",
            "integrations/spark/spark-shell-client/spark-shell-client-app/src/main/java/com/thinkbiganalytics/spark/service/TransformService.java",
            "6d9edfabf94248b9bbbb54225c014be732f0417f",
            "integrations/spark/spark-shell-client/spark-shell-client-app/src/main/java/com/thinkbiganalytics/spark/service/TransformService.java",
            "@Nonnull\n    String toScript(@Nonnull final TransformRequest request) {\n        final StringBuilder script = new StringBuilder();\n        script.append(\"class Transform (sqlContext: org.apache.spark.sql.SQLContext, sparkContextService: com.thinkbiganalytics.spark.SparkContextService) extends \");\n        script.append(transformScriptClass.getName());\n        script.append(\"(sqlContext, sparkContextService) {\\n\");\n\n        script.append(\"override def dataFrame: org.apache.spark.sql.DataFrame = {\");\n        script.append(request.getScript());\n        script.append(\"}\\n\");\n\n        if (request.getParent() != null) {\n            script.append(\"override def parentDataFrame: org.apache.spark.sql.DataFrame = {\");\n            script.append(request.getParent().getScript());\n            script.append(\"}\\n\");\n            script.append(\"override def parentTable: String = {\\\"\");\n            script.append(StringEscapeUtils.escapeJava(request.getParent().getTable()));\n            script.append(\"\\\"}\\n\");\n        }\n\n        script.append(\"}\\n\");\n        script.append(\"new Transform(sqlContext, sparkContextService).run()\\n\");\n\n        return script.toString();\n    }",
            "/**\n * Converts the specified transformation request to a Scala script that can be executed by the script engine.\n *\n * @param request the transformation request\n * @return the Scala script\n */\n",
            "@Nonnull\n    @VisibleForTesting\n    String toScript(@Nonnull final TransformRequest request) {\n        final StringBuilder script = new StringBuilder();\n        script.append(\"class Transform (sqlContext: org.apache.spark.sql.SQLContext, sparkContextService: com.thinkbiganalytics.spark.SparkContextService) extends \");\n        script.append(transformScriptClass.getName());\n        script.append(\"(sqlContext, sparkContextService) {\\n\");\n\n        script.append(\"override def dataFrame: org.apache.spark.sql.DataFrame = {\");\n        script.append(request.getScript());\n        script.append(\"}\\n\");\n\n        if (request.getParent() != null) {\n            script.append(\"override def parentDataFrame: org.apache.spark.sql.DataFrame = {\");\n            script.append(request.getParent().getScript());\n            script.append(\"}\\n\");\n            script.append(\"override def parentTable: String = {\\\"\");\n            script.append(StringEscapeUtils.escapeJava(request.getParent().getTable()));\n            script.append(\"\\\"}\\n\");\n        }\n\n        script.append(\"}\\n\");\n        script.append(\"new Transform(sqlContext, sparkContextService).run()\\n\");\n\n        return script.toString();\n    }",
            "/**\n * Converts the specified transformation request to a Scala script that can be executed by the script engine.\n *\n * @param request the transformation request\n * @return the Scala script\n */\n"
        ],
        "test_db": [
            3666293,
            "Teradata/kylo",
            "/data/comment_repos/Teradata@kylo",
            "66ead2706dd08eded94247a111dd8942b0286e54",
            "1f0957deb70e67edd4db9a02aa2646d12aa2fb18",
            "integrations/spark/spark-shell-client/spark-shell-client-app/src/test/java/com/thinkbiganalytics/spark/service/TransformServiceTest.java",
            "50d35002f03527f8a41a32932bc71c3ea7472b04",
            "integrations/spark/spark-shell-client/spark-shell-client-app/src/test/java/com/thinkbiganalytics/spark/service/TransformServiceTest.java",
            "@Test\n    public void toScript() throws Exception {\n        // Build the request\n        final TransformRequest request = new TransformRequest();\n        request.setScript(\"sqlContext.range(1,10)\");\n\n        // Test converting request to script\n        final TransformService service = new TransformService(TransformScript.class, Mockito.mock(SparkScriptEngine.class), Mockito.mock(SparkContextService.class),\n                                                              Mockito.mock(TransformJobTracker.class));\n\n        final String expected = IOUtils.toString(getClass().getResourceAsStream(\"transform-service-script1.scala\"), \"UTF-8\");\n        Assert.assertEquals(expected, service.toScript(request));\n    }",
            "/**\n * Verify converting a transformation request to a Scala script.\n */\n",
            "@Test\n    public void toScript() throws Exception {\n        // Build the request\n        final TransformRequest request = new TransformRequest();\n        request.setScript(\"sqlContext.range(1,10)\");\n\n        // Test converting request to script\n        final TransformService service = new TransformService(TransformScript.class, Mockito.mock(SparkScriptEngine.class), Mockito.mock(SparkContextService.class),\n                                                              Mockito.mock(JobTrackerService.class));\n\n        final String expected = IOUtils.toString(getClass().getResourceAsStream(\"transform-service-script1.scala\"), \"UTF-8\");\n        Assert.assertEquals(expected, service.toScript(request));\n    }",
            "/**\n * Verify converting a transformation request to a Scala script.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nonnull",
                "Nonnull",
                "equal"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Visible",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "For",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Testing",
                "insert"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Nonnull",
                "Nonnull",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Transform",
                "Transform",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                "Transform",
                "Transform",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "apache",
                "apache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SQL",
                "SQL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "com",
                "com",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "thinkbiganalytics",
                "thinkbiganalytics",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Spark",
                "Spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "transform",
                "transform",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "override",
                "override",
                "equal"
            ],
            [
                "def",
                "def",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Frame",
                "Frame",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "apache",
                "apache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Frame",
                "Frame",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parent",
                "Parent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "override",
                "override",
                "equal"
            ],
            [
                "def",
                "def",
                "equal"
            ],
            [
                "parent",
                "parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Frame",
                "Frame",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "apache",
                "apache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Frame",
                "Frame",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parent",
                "Parent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "override",
                "override",
                "equal"
            ],
            [
                "def",
                "def",
                "equal"
            ],
            [
                "parent",
                "parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Table",
                "Table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "``",
                "``",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Escape",
                "Escape",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "escape",
                "escape",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Java",
                "Java",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parent",
                "Parent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Table",
                "Table",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "``",
                "``",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Transform",
                "Transform",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "sql",
                "sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "spark",
                "spark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "run",
                "run",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "\\",
                "\\",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "n",
                "n",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static RequestBuilder delete(String url) { return new RequestBuilder(HTTPMethod.DELETE, url); } ",
        "focal_tgt": "public static RequestBuilder delete(HttpUrl url) { return new RequestBuilder(HTTPMethod.DELETE, url); } ",
        "test_src": "@Test public void testDelete() { final Request request = RequestBuilder.delete(urlWithQuery).build(); assertEquals(\"DELETE\", request.method()); assertEquals(urlWithQuery, request.url().toString()); } ",
        "test_tgt": "@Test public void testDelete() { final Request request = RequestBuilder.delete(HttpUrl.parse(urlWithQuery)).build(); assertEquals(\"DELETE\", request.method()); assertEquals(urlWithQuery, request.url().toString()); } ",
        "label": 1,
        "focal_db": [
            5633327,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "2fadfa90f68ed130a006c421b57e867b9b1a91ad",
            "0dcd7c1554d8b5b6ede1141cace810d12dc82348",
            "core/src/main/java/com/ibm/watson/developer_cloud/http/RequestBuilder.java",
            "ecff2bc0f60073f3f19ed8ada2ffad714b730186",
            "core/src/main/java/com/ibm/watson/developer_cloud/http/RequestBuilder.java",
            "public static RequestBuilder delete(String url) {\n    return new RequestBuilder(HTTPMethod.DELETE, url);\n  }",
            "/**\n * The DELETE method requests that the origin server delete the resource identified by the Request-URI.\n *\n * @param url the URL\n *\n * @return this\n */\n",
            "public static RequestBuilder delete(HttpUrl url) {\n    return new RequestBuilder(HTTPMethod.DELETE, url);\n  }",
            "/**\n * The DELETE method requests that the origin server delete the resource identified by the Request-URI.\n *\n * @param url the URL\n *\n * @return this\n */\n"
        ],
        "test_db": [
            5633338,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "2fadfa90f68ed130a006c421b57e867b9b1a91ad",
            "8725d19bc1c82c0a2b70bd7bf41973671ff24da4",
            "core/src/test/java/com/ibm/watson/developer_cloud/service/RequestBuilderTest.java",
            "30df273afd2f16938334fc4c7d3a6a4a272b12a5",
            "core/src/test/java/com/ibm/watson/developer_cloud/service/RequestBuilderTest.java",
            "@Test\n  public void testDelete() {\n    final Request request = RequestBuilder.delete(urlWithQuery).build();\n    assertEquals(\"DELETE\", request.method());\n    assertEquals(urlWithQuery, request.url().toString());\n  }",
            "/**\n * Test delete.\n */\n",
            "@Test\n  public void testDelete() {\n    final Request request = RequestBuilder.delete(HttpUrl.parse(urlWithQuery)).build();\n    assertEquals(\"DELETE\", request.method());\n    assertEquals(urlWithQuery, request.url().toString());\n  }",
            "/**\n * Test delete.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "Http",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "String",
                "Url",
                "replace"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "HTTP",
                "HTTP",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Method",
                "Method",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "DELETE",
                "DELETE",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static final int getIntervalDay(long spaceTime) { return(int)(spaceTime / (TimeInterval.SECONDS_PER_DAY * 1000)); } ",
        "focal_tgt": "public static final int getIntervalDay(long spaceTime) { return(int)(spaceTime / (TimeInterval.MILLISECOND_PER_DAY)); } ",
        "test_src": "@Test public void testGetIntervalDay() { String fromString = \"2008-12-1\"; String toString = \"2008-9-29\"; int intervalDay = DateUtil.getIntervalDay(fromString, toString, DatePattern.COMMON_DATE); log.debug(intervalDay + \"\"); } ",
        "test_tgt": "@Test public void testGetIntervalDay() { String fromString = \"2008-12-1\"; String toString = \"2008-9-29\"; int intervalDay = DateUtil.getIntervalDay(fromString, toString, DatePattern.COMMON_DATE); log.debug(intervalDay + \"\"); } ",
        "label": 1,
        "focal_db": [
            3827649,
            "venusdrogon/feilong-core",
            "/data/comment_repos/venusdrogon@feilong-core",
            "4508c80483c2c68f7a0ce2ccfa360b7987e44f76",
            "557703b8f55fdf5c9c5536e229a49ed79c7a756e",
            "src/main/java/com/feilong/core/date/DateUtil.java",
            "7dcd2470550ae393c3b8de1a4542a3a778287eac",
            "src/main/java/com/feilong/core/date/DateUtil.java",
            "public static final int getIntervalDay(long spaceTime){\r\n        // \u76f8\u5dee\u5929\u6570\r\n        return (int) (spaceTime / (TimeInterval.SECONDS_PER_DAY * 1000));\r\n    }",
            "/**\n * \u4e24\u4e2a\u65f6\u95f4\u76f8\u5dee\u7684\u5929\u6570.\n *\n * @param spaceTime\n *            \u95f4\u9694\u6beb\u79d2\n * @return \u76f8\u5dee\u7684\u5929\u6570\n * @see TimeInterval#SECONDS_PER_DAY\n * @since 1.0\n */\n",
            "public static final int getIntervalDay(long spaceTime){\n        return (int) (spaceTime / (TimeInterval.MILLISECOND_PER_DAY));\n    }",
            "/**\n * \u4e24\u4e2a\u65f6\u95f4\u76f8\u5dee\u7684\u5929\u6570.\n *\n * @param spaceTime\n *            \u95f4\u9694\u6beb\u79d2\n * @return \u76f8\u5dee\u7684\u5929\u6570\n * @see TimeInterval#SECONDS_PER_DAY\n */\n"
        ],
        "test_db": [
            3827674,
            "venusdrogon/feilong-core",
            "/data/comment_repos/venusdrogon@feilong-core",
            "4508c80483c2c68f7a0ce2ccfa360b7987e44f76",
            "d5801d999a9bd9da55a70710a4f8dbf4a5842a03",
            "src/test/java/com/feilong/core/date/DateUtilTest.java",
            "f1403b278e790cdc8e85b50221ceda7162310be6",
            "src/test/java/com/feilong/core/date/DateUtilTest.java",
            "@Test\n    public void testGetIntervalDay(){\n        // Date now = DateUtil.convertStringToDate(fromString, DateUtil.pattern_commonWithTime);\n        // Date date = DateUtil.convertStringToDate(toString, DateUtil.pattern_commonWithTime);\n        // log.debug(DateUtil.getIntervalDay(now, date));\n        String fromString = \"2008-12-1\";\n        String toString = \"2008-9-29\";\n        int intervalDay = DateUtil.getIntervalDay(fromString, toString, DatePattern.COMMON_DATE);\n        log.debug(intervalDay + \"\");\n    }",
            "/**\n * Test get interval day.\n */\n",
            "@Test\n    public void testGetIntervalDay(){\n        // Date now = DateUtil.convertStringToDate(fromString, DateUtil.pattern_commonWithTime);\n        // Date date = DateUtil.convertStringToDate(toString, DateUtil.pattern_commonWithTime);\n        // log.debug(DateUtil.getIntervalDay(now, date));\n        String fromString = \"2008-12-1\";\n        String toString = \"2008-9-29\";\n        int intervalDay = DateUtil.getIntervalDay(fromString, toString, DatePattern.COMMON_DATE);\n        log.debug(intervalDay + \"\");\n    }",
            "/**\n * Test get interval day.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Interval",
                "Interval",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Day",
                "Day",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "space",
                "space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "space",
                "space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Interval",
                "Interval",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SECONDS",
                "MILLISECOND",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "PER",
                "PER",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DAY",
                "DAY",
                "equal"
            ],
            [
                "*",
                "",
                "delete"
            ],
            [
                "1000",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public ServiceCall < EntityCollection > listEntities(ListEntitiesOptions listEntitiesOptions) { Validator.notNull(listEntitiesOptions, \"listEntitiesOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/workspaces/%s/entities\", listEntitiesOptions.workspaceId())); builder.query(VERSION, versionDate); if(listEntitiesOptions.export() != null) { builder.query(\"export\", String.valueOf(listEntitiesOptions.export())); } if(listEntitiesOptions.pageLimit() != null) { builder.query(\"page_limit\", String.valueOf(listEntitiesOptions.pageLimit())); } if(listEntitiesOptions.includeCount() != null) { builder.query(\"include_count\", String.valueOf(listEntitiesOptions.includeCount())); } if(listEntitiesOptions.sort() != null) { builder.query(\"sort\", listEntitiesOptions.sort()); } if(listEntitiesOptions.cursor() != null) { builder.query(\"cursor\", listEntitiesOptions.cursor()); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(EntityCollection.class)); } ",
        "focal_tgt": "public ServiceCall < EntityCollection > listEntities(ListEntitiesOptions listEntitiesOptions) { Validator.notNull(listEntitiesOptions, \"listEntitiesOptions cannot be null\"); RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/workspaces/%s/entities\", listEntitiesOptions.workspaceId())); builder.query(VERSION, versionDate); if(listEntitiesOptions.export() != null) { builder.query(\"export\", String.valueOf(listEntitiesOptions.export())); } if(listEntitiesOptions.pageLimit() != null) { builder.query(\"page_limit\", String.valueOf(listEntitiesOptions.pageLimit())); } if(listEntitiesOptions.includeCount() != null) { builder.query(\"include_count\", String.valueOf(listEntitiesOptions.includeCount())); } if(listEntitiesOptions.sort() != null) { builder.query(\"sort\", listEntitiesOptions.sort()); } if(listEntitiesOptions.cursor() != null) { builder.query(\"cursor\", listEntitiesOptions.cursor()); } if(listEntitiesOptions.includeAudit() != null) { builder.query(\"include_audit\", String.valueOf(listEntitiesOptions.includeAudit())); } return createServiceCall(builder.build(), ResponseConverterUtils.getObject(EntityCollection.class)); } ",
        "test_src": "@Test@Ignore(\"To be run locally until we fix the Rate limitation issue\")public void testListEntities() { String entity = \"Hello\" + UUID.randomUUID().toString(); try { ListEntitiesOptions listOptions = new ListEntitiesOptions.Builder(workspaceId).build(); EntityCollection response = service.listEntities(listOptions).execute(); assertNotNull(response); assertNotNull(response.getEntities()); assertNotNull(response.getPagination()); assertNotNull(response.getPagination().getRefreshUrl()); String entityDescription = \"Description of \" + entity; String entityValue = \"Value of \" + entity; CreateEntityOptions options = new CreateEntityOptions.Builder(workspaceId, entity).description(entityDescription).addValue(new CreateValue.Builder(entityValue).build()).build(); service.createEntity(options).execute(); ListEntitiesOptions listOptions2 = listOptions.newBuilder().sort(\"-modified\").pageLimit(5L).export(true).build(); EntityCollection response2 = service.listEntities(listOptions2).execute(); assertNotNull(response2); assertNotNull(response2.getEntities()); List < EntityExport > entities = response2.getEntities(); EntityExport ieResponse = null; for(EntityExport resp : entities) { if(resp.getEntityName().equals(entity)) { ieResponse = resp; break; } } assertNotNull(ieResponse); assertNotNull(ieResponse.getDescription()); assertEquals(ieResponse.getDescription(), entityDescription); assertNotNull(ieResponse.getValues()); assertTrue(ieResponse.getValues().size() == 1); assertTrue(ieResponse.getValues().get(0).getValueText().equals(entityValue)); } catch(Exception ex) { fail(ex.getMessage()); } finally { DeleteEntityOptions deleteOptions = new DeleteEntityOptions.Builder(workspaceId, entity).build(); service.deleteEntity(deleteOptions).execute(); } } ",
        "test_tgt": "@Test@Ignore(\"To be run locally until we fix the Rate limitation issue\")public void testListEntities() { String entity = \"Hello\" + UUID.randomUUID().toString(); try { ListEntitiesOptions listOptions = new ListEntitiesOptions.Builder(workspaceId).build(); EntityCollection response = service.listEntities(listOptions).execute(); assertNotNull(response); assertNotNull(response.getEntities()); assertNotNull(response.getPagination()); assertNotNull(response.getPagination().getRefreshUrl()); String entityDescription = \"Description of \" + entity; String entityValue = \"Value of \" + entity; CreateEntityOptions options = new CreateEntityOptions.Builder(workspaceId, entity).description(entityDescription).addValue(new CreateValue.Builder(entityValue).build()).build(); service.createEntity(options).execute(); ListEntitiesOptions listOptions2 = listOptions.newBuilder().sort(\"-updated\").pageLimit(5L).export(true).build(); EntityCollection response2 = service.listEntities(listOptions2).execute(); assertNotNull(response2); assertNotNull(response2.getEntities()); List < EntityExport > entities = response2.getEntities(); EntityExport ieResponse = null; for(EntityExport resp : entities) { if(resp.getEntityName().equals(entity)) { ieResponse = resp; break; } } assertNotNull(ieResponse); assertNotNull(ieResponse.getDescription()); assertEquals(ieResponse.getDescription(), entityDescription); assertNotNull(ieResponse.getValues()); assertTrue(ieResponse.getValues().size() == 1); assertTrue(ieResponse.getValues().get(0).getValueText().equals(entityValue)); } catch(Exception ex) { fail(ex.getMessage()); } finally { DeleteEntityOptions deleteOptions = new DeleteEntityOptions.Builder(workspaceId, entity).build(); service.deleteEntity(deleteOptions).execute(); } } ",
        "label": 1,
        "focal_db": [
            5633908,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "85573a25aa0104664c29dbcaa2c34f8544342fa0",
            "b81d1a8c602a071b03ae6eeaca7f1f646a0c582a",
            "conversation/src/main/java/com/ibm/watson/developer_cloud/conversation/v1/Conversation.java",
            "76feb800bf74c0edc3893b057a7bb04c2d31e93b",
            "conversation/src/main/java/com/ibm/watson/developer_cloud/conversation/v1/Conversation.java",
            "public ServiceCall<EntityCollection> listEntities(ListEntitiesOptions listEntitiesOptions) {\n    Validator.notNull(listEntitiesOptions, \"listEntitiesOptions cannot be null\");\n    RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/workspaces/%s/entities\", listEntitiesOptions\n        .workspaceId()));\n    builder.query(VERSION, versionDate);\n    if (listEntitiesOptions.export() != null) {\n      builder.query(\"export\", String.valueOf(listEntitiesOptions.export()));\n    }\n    if (listEntitiesOptions.pageLimit() != null) {\n      builder.query(\"page_limit\", String.valueOf(listEntitiesOptions.pageLimit()));\n    }\n    if (listEntitiesOptions.includeCount() != null) {\n      builder.query(\"include_count\", String.valueOf(listEntitiesOptions.includeCount()));\n    }\n    if (listEntitiesOptions.sort() != null) {\n      builder.query(\"sort\", listEntitiesOptions.sort());\n    }\n    if (listEntitiesOptions.cursor() != null) {\n      builder.query(\"cursor\", listEntitiesOptions.cursor());\n    }\n    return createServiceCall(builder.build(), ResponseConverterUtils.getObject(EntityCollection.class));\n  }",
            "/**\n * List entities.\n *\n * List the entities for a workspace.\n *\n * @param listEntitiesOptions the {@link ListEntitiesOptions} containing the options for the call\n * @return a {@link ServiceCall} with a response type of {@link EntityCollection}\n */\n",
            "public ServiceCall<EntityCollection> listEntities(ListEntitiesOptions listEntitiesOptions) {\n    Validator.notNull(listEntitiesOptions, \"listEntitiesOptions cannot be null\");\n    RequestBuilder builder = RequestBuilder.get(String.format(\"/v1/workspaces/%s/entities\", listEntitiesOptions\n        .workspaceId()));\n    builder.query(VERSION, versionDate);\n    if (listEntitiesOptions.export() != null) {\n      builder.query(\"export\", String.valueOf(listEntitiesOptions.export()));\n    }\n    if (listEntitiesOptions.pageLimit() != null) {\n      builder.query(\"page_limit\", String.valueOf(listEntitiesOptions.pageLimit()));\n    }\n    if (listEntitiesOptions.includeCount() != null) {\n      builder.query(\"include_count\", String.valueOf(listEntitiesOptions.includeCount()));\n    }\n    if (listEntitiesOptions.sort() != null) {\n      builder.query(\"sort\", listEntitiesOptions.sort());\n    }\n    if (listEntitiesOptions.cursor() != null) {\n      builder.query(\"cursor\", listEntitiesOptions.cursor());\n    }\n    if (listEntitiesOptions.includeAudit() != null) {\n      builder.query(\"include_audit\", String.valueOf(listEntitiesOptions.includeAudit()));\n    }\n    return createServiceCall(builder.build(), ResponseConverterUtils.getObject(EntityCollection.class));\n  }",
            "/**\n * List entities.\n *\n * List the entities for a workspace.\n *\n * @param listEntitiesOptions the {@link ListEntitiesOptions} containing the options for the call\n * @return a {@link ServiceCall} with a response type of {@link EntityCollection}\n */\n"
        ],
        "test_db": [
            5633949,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "85573a25aa0104664c29dbcaa2c34f8544342fa0",
            "66cf3fc0adb9147dfd2a26c648d91606b0f424fa",
            "conversation/src/test/java/com/ibm/watson/developer_cloud/conversation/v1/EntitiesIT.java",
            "7d4088be7bf163f9c7f6ce182f0e2623d3c7b924",
            "conversation/src/test/java/com/ibm/watson/developer_cloud/conversation/v1/EntitiesIT.java",
            "@Test\n  @Ignore(\"To be run locally until we fix the Rate limitation issue\")\n  public void testListEntities() {\n\n    String entity = \"Hello\" + UUID.randomUUID().toString();  // gotta be unique\n\n    try {\n      ListEntitiesOptions listOptions = new ListEntitiesOptions.Builder(workspaceId).build();\n      EntityCollection response = service.listEntities(listOptions).execute();\n      assertNotNull(response);\n      assertNotNull(response.getEntities());\n      assertNotNull(response.getPagination());\n      assertNotNull(response.getPagination().getRefreshUrl());\n      // nextUrl may be null\n\n      // Now add an entity and make sure we get it back\n      String entityDescription = \"Description of \" + entity;\n      String entityValue = \"Value of \" + entity;\n      CreateEntityOptions options = new CreateEntityOptions.Builder(workspaceId, entity)\n              .description(entityDescription)\n              .addValue(new CreateValue.Builder(entityValue).build())\n              .build();\n      service.createEntity(options).execute();\n\n      ListEntitiesOptions listOptions2 = listOptions.newBuilder()\n              .sort(\"-modified\").pageLimit(5L).export(true).build();\n      EntityCollection response2 = service.listEntities(listOptions2).execute();\n      assertNotNull(response2);\n      assertNotNull(response2.getEntities());\n\n      List<EntityExport> entities = response2.getEntities();\n      EntityExport ieResponse = null;\n      for (EntityExport resp : entities) {\n        if (resp.getEntityName().equals(entity)) {\n          ieResponse = resp;\n          break;\n        }\n      }\n\n      assertNotNull(ieResponse);\n      assertNotNull(ieResponse.getDescription());\n      assertEquals(ieResponse.getDescription(), entityDescription);\n      assertNotNull(ieResponse.getValues());\n      assertTrue(ieResponse.getValues().size() == 1);\n      assertTrue(ieResponse.getValues().get(0).getValueText().equals(entityValue));\n    } catch (Exception ex) {\n      fail(ex.getMessage());\n    } finally {\n      // Clean up\n      DeleteEntityOptions deleteOptions = new DeleteEntityOptions.Builder(workspaceId, entity).build();\n      service.deleteEntity(deleteOptions).execute();\n    }\n  }",
            "/**\n * Test listEntities.\n */\n",
            "@Test\n  @Ignore(\"To be run locally until we fix the Rate limitation issue\")\n  public void testListEntities() {\n\n    String entity = \"Hello\" + UUID.randomUUID().toString(); // gotta be unique\n\n    try {\n      ListEntitiesOptions listOptions = new ListEntitiesOptions.Builder(workspaceId).build();\n      EntityCollection response = service.listEntities(listOptions).execute();\n      assertNotNull(response);\n      assertNotNull(response.getEntities());\n      assertNotNull(response.getPagination());\n      assertNotNull(response.getPagination().getRefreshUrl());\n      // nextUrl may be null\n\n      // Now add an entity and make sure we get it back\n      String entityDescription = \"Description of \" + entity;\n      String entityValue = \"Value of \" + entity;\n      CreateEntityOptions options = new CreateEntityOptions.Builder(workspaceId, entity)\n          .description(entityDescription)\n          .addValue(new CreateValue.Builder(entityValue).build())\n          .build();\n      service.createEntity(options).execute();\n\n      ListEntitiesOptions listOptions2 = listOptions.newBuilder()\n          .sort(\"-updated\").pageLimit(5L).export(true).build();\n      EntityCollection response2 = service.listEntities(listOptions2).execute();\n      assertNotNull(response2);\n      assertNotNull(response2.getEntities());\n\n      List<EntityExport> entities = response2.getEntities();\n      EntityExport ieResponse = null;\n      for (EntityExport resp : entities) {\n        if (resp.getEntityName().equals(entity)) {\n          ieResponse = resp;\n          break;\n        }\n      }\n\n      assertNotNull(ieResponse);\n      assertNotNull(ieResponse.getDescription());\n      assertEquals(ieResponse.getDescription(), entityDescription);\n      assertNotNull(ieResponse.getValues());\n      assertTrue(ieResponse.getValues().size() == 1);\n      assertTrue(ieResponse.getValues().get(0).getValueText().equals(entityValue));\n    } catch (Exception ex) {\n      fail(ex.getMessage());\n    } finally {\n      // Clean up\n      DeleteEntityOptions deleteOptions = new DeleteEntityOptions.Builder(workspaceId, entity).build();\n      service.deleteEntity(deleteOptions).execute();\n    }\n  }",
            "/**\n * Test listEntities.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Call",
                "Call",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validator",
                "Validator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "v1",
                "v1",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "workspaces",
                "workspaces",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "entities",
                "entities",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "workspace",
                "workspace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "VERSION",
                "VERSION",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "export",
                "export",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "export",
                "export",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "export",
                "export",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "page",
                "page",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Limit",
                "Limit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "page",
                "page",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "limit",
                "limit",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "page",
                "page",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Limit",
                "Limit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Count",
                "Count",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "count",
                "count",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Count",
                "Count",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "sort",
                "sort",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cursor",
                "cursor",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "cursor",
                "cursor",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Options",
                "Options",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "cursor",
                "cursor",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "list",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Entities",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Options",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "include",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Audit",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "!=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "include",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "_",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "audit",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "value",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Of",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "list",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Entities",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Options",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "include",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Audit",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Call",
                "Call",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "builder",
                "builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Converter",
                "Converter",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Instant now(TimeSource timeSource) { MathUtils.checkNotNull(timeSource, \"TimeSource must not be null\"); return of(timeSource.instant()); } ",
        "focal_tgt": "public static Instant now(Clock clock) { MathUtils.checkNotNull(clock, \"Clock must not be null\"); return clock.instant(); } ",
        "test_src": "@Test(groups = { \"tck\" })public void now() { Instant expected = Instant.now(TimeSource.system()); Instant test = Instant.now(); BigInteger diff = test.toEpochNano().subtract(expected.toEpochNano()).abs(); if(diff.compareTo(BigInteger.valueOf(100000000)) >= 0) { expected = Instant.now(TimeSource.system()); test = Instant.now(); diff = test.toEpochNano().subtract(expected.toEpochNano()).abs(); } assertTrue(diff.compareTo(BigInteger.valueOf(100000000)) < 0); } ",
        "test_tgt": "@Test(groups = { \"tck\" })public void now() { Instant expected = Instant.now(Clock.systemUTC()); Instant test = Instant.now(); BigInteger diff = test.toEpochNano().subtract(expected.toEpochNano()).abs(); if(diff.compareTo(BigInteger.valueOf(100000000)) >= 0) { expected = Instant.now(Clock.systemUTC()); test = Instant.now(); diff = test.toEpochNano().subtract(expected.toEpochNano()).abs(); } assertTrue(diff.compareTo(BigInteger.valueOf(100000000)) < 0); } ",
        "label": 1,
        "focal_db": [
            3685859,
            "ThreeTen/threetenbp",
            "/data/comment_repos/ThreeTen@threetenbp",
            "f6b29e6d63abd70dc4a79550c8bd7636107cd56b",
            "b0aed921ed7cb71f2e81823d3b8d9da5843764ae",
            "src/main/java/javax/time/Instant.java",
            "d9eed77fca0f2f7d70b4b86e9153b0a400dbf73a",
            "src/main/java/javax/time/Instant.java",
            "public static Instant now(TimeSource timeSource) {\r\n        MathUtils.checkNotNull(timeSource, \"TimeSource must not be null\");\r\n        return of(timeSource.instant());\r\n    }",
            "/**\n * Obtains the current instant from the specified clock.\n * <p>\n * This will query the specified time-source to obtain the current time.\n * <p>\n * Using this method allows the use of an alternate clock for testing.\n * The alternate clock may be introduced using {@link Clock dependency injection}.\n *\n * @param timeSource  the time-source to use, not null\n * @return the current instant, not null\n */\n",
            "public static Instant now(Clock clock) {\r\n        MathUtils.checkNotNull(clock, \"Clock must not be null\");\r\n        return clock.instant();\r\n    }",
            "/**\n * Obtains the current instant from the specified clock.\n * <p>\n * This will query the specified clock to obtain the current time.\n * <p>\n * Using this method allows the use of an alternate clock for testing.\n * The alternate clock may be introduced using {@link Clock dependency injection}.\n *\n * @param clock  the clock to use, not null\n * @return the current instant, not null\n */\n"
        ],
        "test_db": [
            3685861,
            "ThreeTen/threetenbp",
            "/data/comment_repos/ThreeTen@threetenbp",
            "f6b29e6d63abd70dc4a79550c8bd7636107cd56b",
            "747f842382f39d769bd8ef133c712db0889515d8",
            "src/test/java/javax/time/TestInstant.java",
            "0122399bd7d164a980b49492917d313f53336fac",
            "src/test/java/javax/time/TestInstant.java",
            "@Test(groups={\"tck\"})\r\n    public void now() {\r\n        Instant expected = Instant.now(TimeSource.system());\r\n        Instant test = Instant.now();\r\n        BigInteger diff = test.toEpochNano().subtract(expected.toEpochNano()).abs();\r\n        if (diff.compareTo(BigInteger.valueOf(100000000)) >= 0) {\r\n            // may be date change\r\n            expected = Instant.now(TimeSource.system());\r\n            test = Instant.now();\r\n            diff = test.toEpochNano().subtract(expected.toEpochNano()).abs();\r\n        }\r\n        assertTrue(diff.compareTo(BigInteger.valueOf(100000000)) < 0);  // less than 0.1 secs\r\n    }",
            "// -----------------------------------------------------------------------\n",
            "@Test(groups={\"tck\"})\r\n    public void now() {\r\n        Instant expected = Instant.now(Clock.systemUTC());\r\n        Instant test = Instant.now();\r\n        BigInteger diff = test.toEpochNano().subtract(expected.toEpochNano()).abs();\r\n        if (diff.compareTo(BigInteger.valueOf(100000000)) >= 0) {\r\n            // may be date change\r\n            expected = Instant.now(Clock.systemUTC());\r\n            test = Instant.now();\r\n            diff = test.toEpochNano().subtract(expected.toEpochNano()).abs();\r\n        }\r\n        assertTrue(diff.compareTo(BigInteger.valueOf(100000000)) < 0);  // less than 0.1 secs\r\n    }",
            "// -----------------------------------------------------------------------\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Instant",
                "Instant",
                "equal"
            ],
            [
                "now",
                "now",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Time",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Source",
                "Clock",
                "replace"
            ],
            [
                "time",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Source",
                "clock",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "time",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Source",
                "clock",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Time",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Source",
                "Clock",
                "replace"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "of",
                "clock",
                "replace"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "time",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Source",
                "",
                "delete"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "instant",
                "instant",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public OpticalConnectivityId setupConnectivity(ConnectPoint ingress, ConnectPoint egress, Bandwidth bandwidth, Duration latency) { checkNotNull(ingress); checkNotNull(egress); log.info(\"setupConnectivity({}, {}, {}, {})\", ingress, egress, bandwidth, latency); bandwidth = (bandwidth == null) ? NO_BW_REQUIREMENT : bandwidth; Set < Path > paths = pathService.getPaths(ingress.deviceId(), egress.deviceId(), new BandwidthLinkWeight(bandwidth)); if(paths.isEmpty()) { log.warn(\"Unable to find multi-layer path.\"); return null; } for(Path path : paths) { if( ! path.src().equals(ingress) || ! path.dst().equals(egress)) { continue; } OpticalConnectivityId id = setupPath(path, bandwidth, latency); if(id != null) { log.info(\"Assigned OpticalConnectivityId: {}\", id); return id; } } log.error(\"setupConnectivity({}, {}, {}, {}) failed.\", ingress, egress, bandwidth, latency); return null; } ",
        "focal_tgt": "@Override public OpticalConnectivityId setupConnectivity(ConnectPoint ingress, ConnectPoint egress, Bandwidth bandwidth, Duration latency) { checkNotNull(ingress); checkNotNull(egress); log.info(\"setupConnectivity({}, {}, {}, {})\", ingress, egress, bandwidth, latency); Bandwidth bw = (bandwidth == null) ? NO_BW_REQUIREMENT : bandwidth; Stream < Path > paths = topologyService.getKShortestPaths(topologyService.currentTopology(), ingress.deviceId(), egress.deviceId(), new BandwidthLinkWeight(bandwidth)); Optional < OpticalConnectivityId > id = paths.filter(p -> p.src().equals(ingress) && p.dst().equals(egress)).limit(maxPaths).map(p -> setupPath(p, bw, latency)).filter(Objects :: nonNull).findFirst(); if(id.isPresent()) { log.info(\"Assigned OpticalConnectivityId: {}\", id); } else { log.error(\"setupConnectivity({}, {}, {}, {}) failed.\", ingress, egress, bandwidth, latency); } return id.orElse(null); } ",
        "test_src": "@Test public void testSetupConnectivity() { Bandwidth bandwidth = Bandwidth.bps(100); Duration latency = Duration.ofMillis(10); OpticalConnectivityId cid = target.setupConnectivity(CP12, CP71, bandwidth, latency); assertNotNull(cid); assertEquals(1, pathService.edges.size()); assertEquals(CP12.deviceId(), pathService.edges.get(0).getKey()); assertEquals(CP71.deviceId(), pathService.edges.get(0).getValue()); assertEquals(1, intentService.submitted.size()); assertEquals(OpticalConnectivityIntent.class, intentService.submitted.get(0).getClass()); OpticalConnectivityIntent connIntent = (OpticalConnectivityIntent)intentService.submitted.get(0); assertEquals(CP31, connIntent.getSrc()); assertEquals(CP52, connIntent.getDst()); } ",
        "test_tgt": "@Test public void testSetupConnectivity() { Bandwidth bandwidth = Bandwidth.bps(100); Duration latency = Duration.ofMillis(10); OpticalConnectivityId cid = target.setupConnectivity(CP12, CP71, bandwidth, latency); assertNotNull(cid); assertEquals(1, topologyService.edges.size()); assertEquals(CP12.deviceId(), topologyService.edges.get(0).getKey()); assertEquals(CP71.deviceId(), topologyService.edges.get(0).getValue()); assertEquals(1, intentService.submitted.size()); assertEquals(OpticalConnectivityIntent.class, intentService.submitted.get(0).getClass()); OpticalConnectivityIntent connIntent = (OpticalConnectivityIntent)intentService.submitted.get(0); assertEquals(CP31, connIntent.getSrc()); assertEquals(CP52, connIntent.getDst()); } ",
        "label": 1,
        "focal_db": [
            3043848,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "9b378095ebad1e8d7059e3c2cec2e09818e816db",
            "79d1d2684f103272da05619ab6d3e61c4e085238",
            "apps/newoptical/src/main/java/org/onosproject/newoptical/OpticalPathProvisioner.java",
            "245a90f570b9ec6bd1ac6bf00699007b4d1a8feb",
            "apps/newoptical/src/main/java/org/onosproject/newoptical/OpticalPathProvisioner.java",
            "@Override\n    public OpticalConnectivityId setupConnectivity(ConnectPoint ingress, ConnectPoint egress,\n                                                   Bandwidth bandwidth, Duration latency) {\n        checkNotNull(ingress);\n        checkNotNull(egress);\n        log.info(\"setupConnectivity({}, {}, {}, {})\", ingress, egress, bandwidth, latency);\n\n        bandwidth = (bandwidth == null) ? NO_BW_REQUIREMENT : bandwidth;\n\n        Set<Path> paths = pathService.getPaths(ingress.deviceId(), egress.deviceId(),\n                new BandwidthLinkWeight(bandwidth));\n        if (paths.isEmpty()) {\n            log.warn(\"Unable to find multi-layer path.\");\n            return null;\n        }\n\n        // Search path with available cross connect points\n        for (Path path : paths) {\n            // Path service calculates from node to node, we're only interested in port to port\n            if (!path.src().equals(ingress) || !path.dst().equals(egress)) {\n                continue;\n            }\n\n            OpticalConnectivityId id = setupPath(path, bandwidth, latency);\n            if (id != null) {\n                log.info(\"Assigned OpticalConnectivityId: {}\", id);\n                return id;\n            }\n        }\n\n        log.error(\"setupConnectivity({}, {}, {}, {}) failed.\", ingress, egress, bandwidth, latency);\n\n        return null;\n    }",
            "/*\n     * Request packet-layer connectivity between specified ports,\n     * over packet-optical multi-layer infrastructure.\n     *\n     * Functionality-wise this is effectively submitting Packet-Optical\n     * multi-layer P2P Intent.\n     *\n     * It computes multi-layer path meeting specified constraint,\n     * and calls setupPath.\n     */\n",
            "@Override\n    public OpticalConnectivityId setupConnectivity(ConnectPoint ingress, ConnectPoint egress,\n                                                   Bandwidth bandwidth, Duration latency) {\n        checkNotNull(ingress);\n        checkNotNull(egress);\n        log.info(\"setupConnectivity({}, {}, {}, {})\", ingress, egress, bandwidth, latency);\n\n        Bandwidth bw = (bandwidth == null) ? NO_BW_REQUIREMENT : bandwidth;\n\n        Stream<Path> paths = topologyService.getKShortestPaths(\n                topologyService.currentTopology(),\n                ingress.deviceId(), egress.deviceId(),\n                new BandwidthLinkWeight(bandwidth));\n\n        // Path service calculates from node to node, we're only interested in port to port\n        Optional<OpticalConnectivityId> id =\n                paths.filter(p -> p.src().equals(ingress) && p.dst().equals(egress))\n                        .limit(maxPaths)\n                        .map(p -> setupPath(p, bw, latency))\n                        .filter(Objects::nonNull)\n                        .findFirst();\n\n        if (id.isPresent()) {\n            log.info(\"Assigned OpticalConnectivityId: {}\", id);\n        } else {\n            log.error(\"setupConnectivity({}, {}, {}, {}) failed.\", ingress, egress, bandwidth, latency);\n        }\n\n        return id.orElse(null);\n    }",
            "/*\n     * Request packet-layer connectivity between specified ports,\n     * over packet-optical multi-layer infrastructure.\n     *\n     * Functionality-wise this is effectively submitting Packet-Optical\n     * multi-layer P2P Intent.\n     *\n     * It computes multi-layer path meeting specified constraint,\n     * and calls setupPath.\n     */\n"
        ],
        "test_db": [
            3043850,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "9b378095ebad1e8d7059e3c2cec2e09818e816db",
            "78a58b592891d1797ee3c49ac34251f37281c18d",
            "apps/newoptical/src/test/java/org/onosproject/newoptical/OpticalPathProvisionerTest.java",
            "8a98864857bf8359366a35d297178e32dcdb9abb",
            "apps/newoptical/src/test/java/org/onosproject/newoptical/OpticalPathProvisionerTest.java",
            "@Test\n    public void testSetupConnectivity() {\n        Bandwidth bandwidth = Bandwidth.bps(100);\n        Duration latency = Duration.ofMillis(10);\n\n        OpticalConnectivityId cid = target.setupConnectivity(CP12, CP71, bandwidth, latency);\n        assertNotNull(cid);\n\n        // Checks path computation is called as expected\n        assertEquals(1, pathService.edges.size());\n        assertEquals(CP12.deviceId(), pathService.edges.get(0).getKey());\n        assertEquals(CP71.deviceId(), pathService.edges.get(0).getValue());\n\n        // Checks intents are installed as expected\n        assertEquals(1, intentService.submitted.size());\n        assertEquals(OpticalConnectivityIntent.class, intentService.submitted.get(0).getClass());\n        OpticalConnectivityIntent connIntent = (OpticalConnectivityIntent) intentService.submitted.get(0);\n        assertEquals(CP31, connIntent.getSrc());\n        assertEquals(CP52, connIntent.getDst());\n    }",
            "/**\n * Checks setupConnectivity method works.\n */\n",
            "@Test\n    public void testSetupConnectivity() {\n        Bandwidth bandwidth = Bandwidth.bps(100);\n        Duration latency = Duration.ofMillis(10);\n\n        OpticalConnectivityId cid = target.setupConnectivity(CP12, CP71, bandwidth, latency);\n        assertNotNull(cid);\n\n        // Checks path computation is called as expected\n        assertEquals(1, topologyService.edges.size());\n        assertEquals(CP12.deviceId(), topologyService.edges.get(0).getKey());\n        assertEquals(CP71.deviceId(), topologyService.edges.get(0).getValue());\n\n        // Checks intents are installed as expected\n        assertEquals(1, intentService.submitted.size());\n        assertEquals(OpticalConnectivityIntent.class, intentService.submitted.get(0).getClass());\n        OpticalConnectivityIntent connIntent = (OpticalConnectivityIntent) intentService.submitted.get(0);\n        assertEquals(CP31, connIntent.getSrc());\n        assertEquals(CP52, connIntent.getDst());\n    }",
            "/**\n * Checks setupConnectivity method works.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Optical",
                "Optical",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connectivity",
                "Connectivity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "setup",
                "setup",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connectivity",
                "Connectivity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Connect",
                "Connect",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "ingress",
                "ingress",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Connect",
                "Connect",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "egress",
                "egress",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Bandwidth",
                "Bandwidth",
                "equal"
            ],
            [
                "bandwidth",
                "bandwidth",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Duration",
                "Duration",
                "equal"
            ],
            [
                "latency",
                "latency",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ingress",
                "ingress",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "egress",
                "egress",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "setup",
                "setup",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connectivity",
                "Connectivity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ingress",
                "ingress",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "egress",
                "egress",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "bandwidth",
                "bandwidth",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "latency",
                "latency",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "bandwidth",
                "Bandwidth",
                "replace"
            ],
            [
                "",
                "bw",
                "insert"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bandwidth",
                "bandwidth",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "BW",
                "BW",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "REQUIREMENT",
                "REQUIREMENT",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "bandwidth",
                "bandwidth",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Set",
                "Stream",
                "replace"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "paths",
                "paths",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "path",
                "topology",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "",
                "K",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Shortest",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Paths",
                "Paths",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "topology",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Service",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "current",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Topology",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "ingress",
                "ingress",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "device",
                "device",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "egress",
                "egress",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "device",
                "device",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Bandwidth",
                "Bandwidth",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Link",
                "Link",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Weight",
                "Weight",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bandwidth",
                "bandwidth",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "Optional",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Optical",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Connectivity",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "id",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "paths",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "filter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                "->",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "src",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "equals",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ingress",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "&&",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "dst",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "equals",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "egress",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "limit",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "max",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Paths",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "map",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                "->",
                "insert"
            ],
            [
                "",
                "setup",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Path",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "p",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "bw",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "latency",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "filter",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Objects",
                "insert"
            ],
            [
                "",
                "::",
                "insert"
            ],
            [
                "",
                "non",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "find",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "First",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "paths",
                "id",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Present",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "info",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Unable",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "find",
                "Assigned",
                "replace"
            ],
            [
                "multi",
                "Optical",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "-",
                "Connectivity",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "layer",
                "Id",
                "replace"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ":",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ",",
                "replace"
            ],
            [
                ";",
                "id",
                "replace"
            ],
            [
                "return",
                ")",
                "replace"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "for",
                "else",
                "replace"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Path",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "paths",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "src",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "equals",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "ingress",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "||",
                "",
                "delete"
            ],
            [
                "!",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "dst",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "equals",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "egress",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "continue",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "Optical",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Connectivity",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                "id",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "setup",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Path",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "bandwidth",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "latency",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "id",
                "",
                "delete"
            ],
            [
                "!=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "error",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Assigned",
                "",
                "delete"
            ],
            [
                "Optical",
                "setup",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connectivity",
                "Connectivity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "(",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "failed",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "id",
                "ingress",
                "replace"
            ],
            [
                ")",
                ",",
                "replace"
            ],
            [
                ";",
                "egress",
                "replace"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "bandwidth",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "latency",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "or",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Else",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "log",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "error",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "setup",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Connectivity",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "failed",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ingress",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "egress",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "bandwidth",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "latency",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "ChronoZonedDateTime < C > minusSeconds(long seconds) { ChronoDateTime newDT = dateTime.toDateTime().minusSeconds(seconds); return(newDT == dateTime.toDateTime() ? this : resolve(newDT, zone, dateTime, ZoneResolvers.retainOffset())); } ",
        "focal_tgt": "ChronoZonedDateTime < C > minusSeconds(long seconds) { ChronoDateTime newDT = dateTime.getDateTime().minusSeconds(seconds); return(newDT == dateTime.getDateTime() ? this : resolve(newDT, zone, dateTime, ZoneResolvers.retainOffset())); } ",
        "test_src": "@Test(groups = { \"tck\" })public void test_minusSeconds_one() { LocalDateTime t = TEST_2007_07_15_12_30_40_987654321.with(LocalTime.MIDNIGHT); LocalDate d = t.toLocalDate().minusDays(1); int hour = 0; int min = 0; int sec = 0; for(int i = 0; i < 3700; i ++ ) { t = t.minusSeconds(1); sec -- ; if(sec == - 1) { min -- ; sec = 59; if(min == - 1) { hour -- ; min = 59; if(hour == - 1) { hour = 23; } } } assertEquals(t.toLocalDate(), d); assertEquals(t.getHour(), hour); assertEquals(t.getMinute(), min); assertEquals(t.getSecond(), sec); } } ",
        "test_tgt": "@Test(groups = { \"tck\" })public void test_minusSeconds_one() { LocalDateTime t = TEST_2007_07_15_12_30_40_987654321.with(LocalTime.MIDNIGHT); LocalDate d = t.getDate().minusDays(1); int hour = 0; int min = 0; int sec = 0; for(int i = 0; i < 3700; i ++ ) { t = t.minusSeconds(1); sec -- ; if(sec == - 1) { min -- ; sec = 59; if(min == - 1) { hour -- ; min = 59; if(hour == - 1) { hour = 23; } } } assertEquals(t.getDate(), d); assertEquals(t.getHour(), hour); assertEquals(t.getMinute(), min); assertEquals(t.getSecond(), sec); } } ",
        "label": 1,
        "focal_db": [
            3680234,
            "ThreeTen/threetenbp",
            "/data/comment_repos/ThreeTen@threetenbp",
            "c64bfe622b0ce9aa3b877f8de08d69dbe0d19b05",
            "5f8225febf335ea49a0de4c59d2601cbf56a93db",
            "src-standard/main/java/javax/time/chrono/ChronoZonedDateTime.java",
            "3dcd3bffb65a66c7a70673ee85901cf7de6112d9",
            "src-standard/main/java/javax/time/chrono/ChronoZonedDateTime.java",
            "ChronoZonedDateTime<C> minusSeconds(long seconds) {\n        ChronoDateTime newDT = dateTime.toDateTime().minusSeconds(seconds);\n        return (newDT == dateTime.toDateTime() ? this :\n            resolve(newDT, zone, dateTime, ZoneResolvers.retainOffset()));\n    }",
            "/**\n * Returns a copy of this {@code ZoneChronoDateTime} with the specified period in seconds subtracted.\n * <p>\n * If the adjustment results in a date-time that is invalid, then the\n * {@link ZoneResolvers#retainOffset()} resolver is used.\n * <p>\n * This instance is immutable and unaffected by this method call.\n *\n * @param seconds  the seconds to subtract, positive or negative\n * @return a {@code ZoneChronoDateTime} based on this date-time with the seconds subtracted, not null\n * @throws DateTimeException if the result exceeds the supported range\n */\n",
            "ChronoZonedDateTime<C> minusSeconds(long seconds) {\n        ChronoDateTime newDT = dateTime.getDateTime().minusSeconds(seconds);\n        return (newDT == dateTime.getDateTime() ? this :\n            resolve(newDT, zone, dateTime, ZoneResolvers.retainOffset()));\n    }",
            "/**\n * Returns a copy of this {@code ZoneChronoDateTime} with the specified period in seconds subtracted.\n * <p>\n * If the adjustment results in a date-time that is invalid, then the\n * {@link ZoneResolvers#retainOffset()} resolver is used.\n * <p>\n * This instance is immutable and unaffected by this method call.\n *\n * @param seconds  the seconds to subtract, positive or negative\n * @return a {@code ZoneChronoDateTime} based on this date-time with the seconds subtracted, not null\n * @throws DateTimeException if the result exceeds the supported range\n */\n"
        ],
        "test_db": [
            3680317,
            "ThreeTen/threetenbp",
            "/data/comment_repos/ThreeTen@threetenbp",
            "c64bfe622b0ce9aa3b877f8de08d69dbe0d19b05",
            "37bc09eaf842307c0fe39d6a307e3007e07c7786",
            "src/test/java/javax/time/TestLocalDateTime.java",
            "d379bd83f4edf288db3dc90471811a14639ba3ab",
            "src/test/java/javax/time/TestLocalDateTime.java",
            "@Test(groups={\"tck\"})\n    public void test_minusSeconds_one() {\n        LocalDateTime t = TEST_2007_07_15_12_30_40_987654321.with(LocalTime.MIDNIGHT);\n        LocalDate d = t.toLocalDate().minusDays(1);\n\n        int hour = 0;\n        int min = 0;\n        int sec = 0;\n\n        for (int i = 0; i < 3700; i++) {\n            t = t.minusSeconds(1);\n            sec--;\n            if (sec == -1) {\n                min--;\n                sec = 59;\n\n                if (min == -1) {\n                    hour--;\n                    min = 59;\n                    \n                    if (hour == -1) {\n                        hour = 23;\n                    }\n                }\n            }\n\n            assertEquals(t.toLocalDate(), d);\n            assertEquals(t.getHour(), hour);\n            assertEquals(t.getMinute(), min);\n            assertEquals(t.getSecond(), sec);\n        }\n    }",
            "// -----------------------------------------------------------------------\n",
            "@Test(groups={\"tck\"})\n    public void test_minusSeconds_one() {\n        LocalDateTime t = TEST_2007_07_15_12_30_40_987654321.with(LocalTime.MIDNIGHT);\n        LocalDate d = t.getDate().minusDays(1);\n\n        int hour = 0;\n        int min = 0;\n        int sec = 0;\n\n        for (int i = 0; i < 3700; i++) {\n            t = t.minusSeconds(1);\n            sec--;\n            if (sec == -1) {\n                min--;\n                sec = 59;\n\n                if (min == -1) {\n                    hour--;\n                    min = 59;\n                    \n                    if (hour == -1) {\n                        hour = 23;\n                    }\n                }\n            }\n\n            assertEquals(t.getDate(), d);\n            assertEquals(t.getHour(), hour);\n            assertEquals(t.getMinute(), min);\n            assertEquals(t.getSecond(), sec);\n        }\n    }",
            "// -----------------------------------------------------------------------\n"
        ],
        "edit_seq": [
            [
                "Chrono",
                "Chrono",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Zoned",
                "Zoned",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "minus",
                "minus",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Seconds",
                "Seconds",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "seconds",
                "seconds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Chrono",
                "Chrono",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DT",
                "DT",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "date",
                "date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "get",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "minus",
                "minus",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Seconds",
                "Seconds",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "seconds",
                "seconds",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DT",
                "DT",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "date",
                "date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "get",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "resolve",
                "resolve",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DT",
                "DT",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "zone",
                "zone",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "date",
                "date",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Zone",
                "Zone",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Resolvers",
                "Resolvers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "retain",
                "retain",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Offset",
                "Offset",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "String toHTML(String source, String syntaxId); ",
        "focal_tgt": "@Deprecated String toHTML(String source, String syntaxId); ",
        "test_src": "@Test public void toHTML()throws Exception { String source = \"wiki syntax\"; String syntaxId = \"syntax/x.y\"; Parser parser = this.mocker.registerMockComponent(Parser.class, syntaxId); XDOM xdom = new XDOM(Collections. < Block > emptyList()); when(parser.parse(any(StringReader.class))).thenReturn(xdom); Assert.assertEquals(\"\", mocker.getComponentUnderTest().toHTML(source, syntaxId)); Transformation macroTransformation = mocker.getInstance(Transformation.class, \"macro\"); RenderingContext renderingContext = mocker.getInstance(RenderingContext.class); ArgumentCaptor < TransformationContext > txContextArgument = ArgumentCaptor.forClass(TransformationContext.class); verify((MutableRenderingContext)renderingContext).transformInContext(same(macroTransformation), txContextArgument.capture(), same(xdom)); assertEquals(\"wysiwygtxid\", txContextArgument.getValue().getId()); BlockRenderer xhtmlRenderer = mocker.getInstance(BlockRenderer.class, \"annotatedxhtml/1.0\"); verify(xhtmlRenderer).render(same(xdom), any(WikiPrinter.class)); } ",
        "test_tgt": "@Test public void toHTML()throws Exception { String source = \"wiki syntax\"; Syntax syntax = new Syntax(new SyntaxType(\"syntax\", \"Syntax\"), \"x.y\"); ContentParser contentParser = this.mocker.getInstance(ContentParser.class); XDOM xdom = new XDOM(Collections. < Block > emptyList()); when(contentParser.parse(source, syntax, null)).thenReturn(xdom); Assert.assertEquals(\"\", mocker.getComponentUnderTest().toHTML(source, syntax.toIdString())); Transformation macroTransformation = mocker.getInstance(Transformation.class, \"macro\"); RenderingContext renderingContext = mocker.getInstance(RenderingContext.class); ArgumentCaptor < TransformationContext > txContextArgument = ArgumentCaptor.forClass(TransformationContext.class); verify((MutableRenderingContext)renderingContext).transformInContext(same(macroTransformation), txContextArgument.capture(), same(xdom)); assertEquals(\"wysiwygtxid\", txContextArgument.getValue().getId()); BlockRenderer xhtmlRenderer = mocker.getInstance(BlockRenderer.class, \"annotatedxhtml/1.0\"); verify(xhtmlRenderer).render(same(xdom), any(WikiPrinter.class)); } ",
        "label": 1,
        "focal_db": [
            6357908,
            "xwiki/xwiki-platform",
            "/data/local_comment_repos/xwiki@xwiki-platform",
            "df90c7849c1278d633a9ac5ea03afdd809860f38",
            "69835b30c9d97202ca18f081baa4bed4fdd0d912",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/main/java/org/xwiki/wysiwyg/converter/HTMLConverter.java",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/main/java/org/xwiki/wysiwyg/converter/HTMLConverter.java",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/main/java/org/xwiki/wysiwyg/converter/HTMLConverter.java",
            "String toHTML(String source, String syntaxId);",
            "/**\n * Converts the given source text from the specified syntax to HTML.\n *\n * @param source the text to be converted\n * @param syntaxId the syntax identifier\n * @return the HTML result of the conversion\n */\n",
            "@Deprecated\n    String toHTML(String source, String syntaxId);",
            "/**\n * Converts the given source text from the specified syntax to HTML.\n *\n * @param source the text to be converted\n * @param syntaxId the syntax of the source\n * @return the HTML result of the conversion\n * @deprecated since 11.9RC1, use {@link #toHTML(String, Syntax, EntityReference)} instead\n */\n"
        ],
        "test_db": [
            6357913,
            "xwiki/xwiki-platform",
            "/data/local_comment_repos/xwiki@xwiki-platform",
            "df90c7849c1278d633a9ac5ea03afdd809860f38",
            "77d36568b8b3821286200f17cb1f9953b7727bff",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/test/java/org/xwiki/wysiwyg/internal/converter/DefaultHTMLConverterTest.java",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/test/java/org/xwiki/wysiwyg/internal/converter/DefaultHTMLConverterTest.java",
            "xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-api/src/test/java/org/xwiki/wysiwyg/internal/converter/DefaultHTMLConverterTest.java",
            "@Test\n    public void toHTML() throws Exception\n    {\n        String source = \"wiki syntax\";\n        String syntaxId = \"syntax/x.y\";\n\n        // The source should be parsed.\n        Parser parser = this.mocker.registerMockComponent(Parser.class, syntaxId);\n\n        XDOM xdom = new XDOM(Collections.<Block>emptyList());\n        when(parser.parse(any(StringReader.class))).thenReturn(xdom);\n\n        Assert.assertEquals(\"\", mocker.getComponentUnderTest().toHTML(source, syntaxId));\n\n        // Verify that the macro transformations have been executed.\n        Transformation macroTransformation = mocker.getInstance(Transformation.class, \"macro\");\n        RenderingContext renderingContext = mocker.getInstance(RenderingContext.class);\n\n        // It's very important to verify that a transformation context id is set as otherwise if the content being\n        // edited has different velocity macros executing, they'll be executed in isolation and thus what's defined in\n        // one won't be visible from the other ones (For example see https://jira.xwiki.org/browse/XWIKI-11695).\n        ArgumentCaptor<TransformationContext> txContextArgument = ArgumentCaptor.forClass(TransformationContext.class);\n        verify((MutableRenderingContext) renderingContext).transformInContext(same(macroTransformation),\n            txContextArgument.capture(), same(xdom));\n        assertEquals(\"wysiwygtxid\", txContextArgument.getValue().getId());\n\n        // Verify the XDOM is rendered to Annotated XHTML.\n        BlockRenderer xhtmlRenderer = mocker.getInstance(BlockRenderer.class, \"annotatedxhtml/1.0\");\n        verify(xhtmlRenderer).render(same(xdom), any(WikiPrinter.class));\n    }",
            "/**\n * Unit test for {@link DefaultHTMLConverter#toHTML(String, String)}.\n */\n",
            "@Test\n    public void toHTML() throws Exception\n    {\n        String source = \"wiki syntax\";\n        Syntax syntax = new Syntax(new SyntaxType(\"syntax\", \"Syntax\"), \"x.y\");\n\n        // The source should be parsed.\n        ContentParser contentParser = this.mocker.getInstance(ContentParser.class);\n        XDOM xdom = new XDOM(Collections.<Block>emptyList());\n        when(contentParser.parse(source, syntax, null)).thenReturn(xdom);\n\n        Assert.assertEquals(\"\", mocker.getComponentUnderTest().toHTML(source, syntax.toIdString()));\n\n        // Verify that the macro transformations have been executed.\n        Transformation macroTransformation = mocker.getInstance(Transformation.class, \"macro\");\n        RenderingContext renderingContext = mocker.getInstance(RenderingContext.class);\n\n        // It's very important to verify that a transformation context id is set as otherwise if the content being\n        // edited has different velocity macros executing, they'll be executed in isolation and thus what's defined in\n        // one won't be visible from the other ones (For example see https://jira.xwiki.org/browse/XWIKI-11695).\n        ArgumentCaptor<TransformationContext> txContextArgument = ArgumentCaptor.forClass(TransformationContext.class);\n        verify((MutableRenderingContext) renderingContext).transformInContext(same(macroTransformation),\n            txContextArgument.capture(), same(xdom));\n        assertEquals(\"wysiwygtxid\", txContextArgument.getValue().getId());\n\n        // Verify the XDOM is rendered to Annotated XHTML.\n        BlockRenderer xhtmlRenderer = mocker.getInstance(BlockRenderer.class, \"annotatedxhtml/1.0\");\n        verify(xhtmlRenderer).render(same(xdom), any(WikiPrinter.class));\n    }",
            "/**\n * Unit test for {@link DefaultHTMLConverter#toHTML(String, String)}.\n */\n"
        ],
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Deprecated",
                "insert"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "HTML",
                "HTML",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "source",
                "source",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "syntax",
                "syntax",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void validate(Object obj, Errors errors) { Location location = (Location)obj; if(location == null) { errors.rejectValue(\"location\", \"error.general\"); } else { ValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\"); if(location.isRetired() && ! StringUtils.hasLength(location.getRetireReason())) { location.setRetired(false); errors.rejectValue(\"retireReason\", \"error.null\"); } Location exist = Context.getLocationService().getLocation(location.getName()); if(exist != null && ! exist.isRetired() && ! OpenmrsUtil.nullSafeEquals(location.getUuid(), exist.getUuid())) { errors.rejectValue(\"name\", \"location.duplicate.name\"); } Location root = location; while(root.getParentLocation() != null) { root = root.getParentLocation(); if(root.equals(location)) { errors.rejectValue(\"parentLocation\", \"Location.parentLocation.error\"); break; } } ValidateUtil.validateFieldLengths(errors, obj.getClass(), \"name\", \"description\", \"address1\", \"address2\", \"cityVillage\", \"stateProvince\", \"country\", \"postalCode\", \"latitude\", \"longitude\", \"countyDistrict\", \"address3\", \"address4\", \"address5\", \"address6\", \"retireReason\"); super.validateAttributes(location, errors, Context.getLocationService().getAllLocationAttributeTypes()); } } ",
        "focal_tgt": "public void validate(Object obj, Errors errors) { Location location = (Location)obj; if(location == null) { errors.rejectValue(\"location\", \"error.general\"); } else { ValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\"); if(location.isRetired() && ! StringUtils.hasLength(location.getRetireReason())) { location.setRetired(false); errors.rejectValue(\"retireReason\", \"error.null\"); } Location exist = Context.getLocationService().getLocation(location.getName()); if(exist != null && ! exist.isRetired() && ! OpenmrsUtil.nullSafeEquals(location.getUuid(), exist.getUuid())) { errors.rejectValue(\"name\", \"location.duplicate.name\"); } Location root = location; while(root.getParentLocation() != null) { root = root.getParentLocation(); if(root.equals(location)) { errors.rejectValue(\"parentLocation\", \"Location.parentLocation.error\"); break; } } ValidateUtil.validateFieldLengths(errors, obj.getClass(), \"name\", \"description\", \"address1\", \"address2\", \"cityVillage\", \"stateProvince\", \"country\", \"postalCode\", \"latitude\", \"longitude\", \"countyDistrict\", \"address3\", \"address4\", \"address5\", \"address6\", \"address7\", \"address8\", \"address9\", \"address10\", \"address11\", \"address12\", \"address13\", \"address14\", \"address15\", \"retireReason\"); super.validateAttributes(location, errors, Context.getLocationService().getAllLocationAttributeTypes()); } } ",
        "test_src": "@Test@Verifies(value = \"should fail if required fields are empty\", method = \"validate(Object,Errors)\")public void validate_shouldFailIfRequiredFieldsAreEmpty()throws Exception { executeDataSet(PERSON_ADDRESS_VALIDATOR_DATASET_PACKAGE_PATH); PersonAddress personAddress = new PersonAddress(); Errors errors = new BindException(personAddress, \"personAddress\"); validator.validate(personAddress, errors); Assert.assertEquals(true, errors.hasErrors()); } ",
        "test_tgt": "@Test@Verifies(value = \"should fail if required fields are empty\", method = \"validate(Object,Errors)\")public void validate_shouldFailIfRequiredFieldsAreEmpty()throws Exception { executeDataSet(PERSON_ADDRESS_VALIDATOR_DATASET_PACKAGE_PATH); Address personAddress = new PersonAddress(); Errors errors = new BindException(personAddress, \"personAddress\"); validator.validate(personAddress, errors); Assert.assertEquals(true, errors.hasErrors()); } ",
        "label": 1,
        "focal_db": [
            2989103,
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "9020829ad4436327ca65d68acd92174ff17b82c4",
            "7f2dd53eecc4a0d9fb40d1866ebbc563c7fd6e61",
            "api/src/main/java/org/openmrs/validator/LocationValidator.java",
            "c894db20d1c35cf023b1f9b5467c4ac94367a0b8",
            "api/src/main/java/org/openmrs/validator/LocationValidator.java",
            "public void validate(Object obj, Errors errors) {\n\t\tLocation location = (Location) obj;\n\t\tif (location == null) {\n\t\t\terrors.rejectValue(\"location\", \"error.general\");\n\t\t} else {\n\t\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\n\t\t\t\n\t\t\tif (location.isRetired() && !StringUtils.hasLength(location.getRetireReason())) {\n\t\t\t\tlocation.setRetired(false); // so that the jsp page displays\n\t\t\t\t// properly again\n\t\t\t\terrors.rejectValue(\"retireReason\", \"error.null\");\n\t\t\t}\n\t\t\t\n\t\t\tLocation exist = Context.getLocationService().getLocation(location.getName());\n\t\t\tif (exist != null && !exist.isRetired() && !OpenmrsUtil.nullSafeEquals(location.getUuid(), exist.getUuid())) {\n\t\t\t\terrors.rejectValue(\"name\", \"location.duplicate.name\");\n\t\t\t}\n\t\t\t\n\t\t\t// Traverse all the way up (down?) to the root and check if it\n\t\t\t// equals the root.\n\t\t\tLocation root = location;\n\t\t\twhile (root.getParentLocation() != null) {\n\t\t\t\troot = root.getParentLocation();\n\t\t\t\tif (root.equals(location)) { // Have gone in a circle\n\t\t\t\t\terrors.rejectValue(\"parentLocation\", \"Location.parentLocation.error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tValidateUtil.validateFieldLengths(errors, obj.getClass(), \"name\", \"description\", \"address1\", \"address2\",\n\t\t\t    \"cityVillage\", \"stateProvince\", \"country\", \"postalCode\", \"latitude\", \"longitude\", \"countyDistrict\",\n\t\t\t    \"address3\", \"address4\", \"address5\", \"address6\", \"retireReason\");\n\t\t\tsuper.validateAttributes(location, errors, Context.getLocationService().getAllLocationAttributeTypes());\n\t\t}\n\t\t\n\t}",
            "/**\n * Checks the form object for any inconsistencies/errors\n *\n * @see org.springframework.validation.Validator#validate(java.lang.Object,\n *      org.springframework.validation.Errors)\n * @should fail validation if name is null or empty\n * @should fail validation if retired and retireReason is null or empty\n * @should set retired to false if retireReason is null or empty\n * @should pass validation if all fields are correct\n * @should pass validation if retired location is given retired reason\n * @should fail validation if parent location creates a loop\n * @should fail validation if name is exist in non retired locations\n * @should pass validation if field lengths are correct\n * @should fail validation if field lengths are not correct\n */\n",
            "public void validate(Object obj, Errors errors) {\n\t\tLocation location = (Location) obj;\n\t\tif (location == null) {\n\t\t\terrors.rejectValue(\"location\", \"error.general\");\n\t\t} else {\n\t\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"error.name\");\n\t\t\t\n\t\t\tif (location.isRetired() && !StringUtils.hasLength(location.getRetireReason())) {\n\t\t\t\tlocation.setRetired(false); // so that the jsp page displays\n\t\t\t\t// properly again\n\t\t\t\terrors.rejectValue(\"retireReason\", \"error.null\");\n\t\t\t}\n\t\t\t\n\t\t\tLocation exist = Context.getLocationService().getLocation(location.getName());\n\t\t\tif (exist != null && !exist.isRetired() && !OpenmrsUtil.nullSafeEquals(location.getUuid(), exist.getUuid())) {\n\t\t\t\terrors.rejectValue(\"name\", \"location.duplicate.name\");\n\t\t\t}\n\t\t\t\n\t\t\t// Traverse all the way up (down?) to the root and check if it\n\t\t\t// equals the root.\n\t\t\tLocation root = location;\n\t\t\twhile (root.getParentLocation() != null) {\n\t\t\t\troot = root.getParentLocation();\n\t\t\t\tif (root.equals(location)) { // Have gone in a circle\n\t\t\t\t\terrors.rejectValue(\"parentLocation\", \"Location.parentLocation.error\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tValidateUtil.validateFieldLengths(errors, obj.getClass(), \"name\", \"description\", \"address1\", \"address2\",\n\t\t\t    \"cityVillage\", \"stateProvince\", \"country\", \"postalCode\", \"latitude\", \"longitude\", \"countyDistrict\",\n\t\t\t    \"address3\", \"address4\", \"address5\", \"address6\", \"address7\", \"address8\", \"address9\", \"address10\",\n\t\t\t    \"address11\", \"address12\", \"address13\", \"address14\", \"address15\", \"retireReason\");\n\t\t\tsuper.validateAttributes(location, errors, Context.getLocationService().getAllLocationAttributeTypes());\n\t\t}\n\t\t\n\t}",
            "/**\n * Checks the form object for any inconsistencies/errors\n *\n * @see org.springframework.validation.Validator#validate(java.lang.Object,\n *      org.springframework.validation.Errors)\n * @should fail validation if name is null or empty\n * @should fail validation if retired and retireReason is null or empty\n * @should set retired to false if retireReason is null or empty\n * @should pass validation if all fields are correct\n * @should pass validation if retired location is given retired reason\n * @should fail validation if parent location creates a loop\n * @should fail validation if name is exist in non retired locations\n * @should pass validation if field lengths are correct\n * @should fail validation if field lengths are not correct\n */\n"
        ],
        "test_db": [
            2989108,
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "9020829ad4436327ca65d68acd92174ff17b82c4",
            "004bda9a3f308cfb48794dbbfd8f0171edfa65db",
            "api/src/test/java/org/openmrs/validator/PersonAddressValidatorTest.java",
            "b70df1dcf51526d7d1f2150e9415e59eb8542f18",
            "api/src/test/java/org/openmrs/validator/PersonAddressValidatorTest.java",
            "@Test\n\t@Verifies(value = \"should fail if required fields are empty\", method = \"validate(Object,Errors)\")\n\tpublic void validate_shouldFailIfRequiredFieldsAreEmpty() throws Exception {\n\t\texecuteDataSet(PERSON_ADDRESS_VALIDATOR_DATASET_PACKAGE_PATH);\n\t\tPersonAddress personAddress = new PersonAddress();\n\t\t\n\t\tErrors errors = new BindException(personAddress, \"personAddress\");\n\t\tvalidator.validate(personAddress, errors);\n\t\tAssert.assertEquals(true, errors.hasErrors());\n\t}",
            "/**\n * @see PersonAddressValidator#validate(Object, org.springframework.validation.Errors)\n */\n",
            "@Test\n\t@Verifies(value = \"should fail if required fields are empty\", method = \"validate(Object,Errors)\")\n\tpublic void validate_shouldFailIfRequiredFieldsAreEmpty() throws Exception {\n\t\texecuteDataSet(PERSON_ADDRESS_VALIDATOR_DATASET_PACKAGE_PATH);\n\t\tAddress personAddress = new PersonAddress();\n\t\t\n\t\tErrors errors = new BindException(personAddress, \"personAddress\");\n\t\tvalidator.validate(personAddress, errors);\n\t\tAssert.assertEquals(true, errors.hasErrors());\n\t}",
            "/**\n * @see PersonAddressValidator#validate(Object, org.springframework.validation.Errors)\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Errors",
                "Errors",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reject",
                "reject",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "general",
                "general",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Validation",
                "Validation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reject",
                "reject",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "If",
                "If",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Or",
                "Or",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Whitespace",
                "Whitespace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Retired",
                "Retired",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Length",
                "Length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Retire",
                "Retire",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reason",
                "Reason",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Retired",
                "Retired",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reject",
                "reject",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "retire",
                "retire",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reason",
                "Reason",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Retired",
                "Retired",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "Openmrs",
                "Openmrs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Util",
                "Util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Safe",
                "Safe",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Equals",
                "Equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Uuid",
                "Uuid",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Uuid",
                "Uuid",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reject",
                "reject",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "duplicate",
                "duplicate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "root",
                "root",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "root",
                "root",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parent",
                "Parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "root",
                "root",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "root",
                "root",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parent",
                "Parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "root",
                "root",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reject",
                "reject",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "parent",
                "parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "parent",
                "parent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "error",
                "error",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Util",
                "Util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lengths",
                "Lengths",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address1",
                "address1",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address2",
                "address2",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "city",
                "city",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Village",
                "Village",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Province",
                "Province",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "country",
                "country",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "postal",
                "postal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "latitude",
                "latitude",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "longitude",
                "longitude",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "county",
                "county",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "District",
                "District",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address3",
                "address3",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address4",
                "address4",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address5",
                "address5",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "address6",
                "address6",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address7",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address8",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address9",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address10",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address11",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address12",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address13",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address14",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "address15",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "retire",
                "retire",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reason",
                "Reason",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "super",
                "super",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "validate",
                "validate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attributes",
                "Attributes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "location",
                "location",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "errors",
                "errors",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Name(\"get_all_edges\")@Description(\"execute a Gremlin script with variables 'start' set to the start node 'g' set to the Neo4jGraph and 'results' containing a resulting vertex\")@PluginTarget(GraphDatabaseService.class)public Representation getEdges(@Description(\"The Gremlin script\")@Parameter(name = \"script\", optional = true)String script, @Source GraphDatabaseService graphDb) { ScriptEngineManager manager = new ScriptEngineManager(); ScriptEngine engine = manager.getEngineByName(\"gremlin\"); ArrayList < EdgeRepresentation > results = new ArrayList < EdgeRepresentation > (); Neo4jGraph graph = new Neo4jGraph(graphDb); engine.getBindings(ScriptContext.ENGINE_SCOPE).put(\"g\", graph); engine.getBindings(ScriptContext.GLOBAL_SCOPE).put(\"results\", results); try { engine.eval(script); } catch(ScriptException e) { e.printStackTrace(); } return new ListRepresentation(RepresentationType.RELATIONSHIP, results); } ",
        "focal_tgt": "@Name(\"get_all_edges\")@Description(\"execute a Gremlin script with variables 'start' set to the start node 'g' set to the Neo4jGraph and 'results' containing a resulting vertex\")@PluginTarget(GraphDatabaseService.class)public Representation getEdges(@Description(\"The Gremlin script\")@Parameter(name = \"script\", optional = true)String script, @Source GraphDatabaseService graphDb) { ScriptEngineManager manager = new ScriptEngineManager(); ScriptEngine engine = manager.getEngineByName(\"gremlin\"); ArrayList < Edge > results = new ArrayList < Edge > (); Neo4jGraph graph = new Neo4jGraph(graphDb); engine.getBindings(ScriptContext.ENGINE_SCOPE).put(\"g\", graph); engine.getBindings(ScriptContext.GLOBAL_SCOPE).put(\"results\", results); try { engine.eval(script); } catch(ScriptException e) { e.printStackTrace(); } return new PipeEdgeRepresentation(results); } ",
        "test_src": "@Test public void testGetEdges() { String script = \"results.add(g.E)\"; Transaction tx = null; Representation curRepresentationObj = null; try { tx = curGraphDBServiceObj.beginTx(); curRepresentationObj = (Representation)curGremlinPluginObj.getEdges(script, curGraphDBServiceObj); assertNotNull(curRepresentationObj); tx.success(); System.err.println(\"GremlinPluginTest::testGetEdges the contents of the representation object=\" + curRepresentationObj.toString()); } catch(Throwable t) { t.printStackTrace(); } finally { tx.finish(); } } ",
        "test_tgt": "@Test public void testGetEdges() { String script = \"results.add(g.E)\"; Transaction tx = null; Representation curRepresentationObj = null; try { tx = curGraphDBServiceObj.beginTx(); curRepresentationObj = (Representation)curGremlinPluginObj.getEdges(script, curGraphDBServiceObj); assertNotNull(curRepresentationObj); tx.success(); } catch(Throwable t) { t.printStackTrace(); } finally { tx.finish(); } System.out.println(\"Results of testGetEdges\" + json.format(curRepresentationObj)); } ",
        "label": 1,
        "focal_db": [
            2838840,
            "neo4j/neo4j",
            "/data/comment_repos/neo4j@neo4j",
            "a96d79bd0110d0603879f450c6f4dd69cfdee2e3",
            "dab10f28f4b36cac0c263e48819556405bbe11b3",
            "gremlin-plugin/src/main/java/org/neo4j/server/plugin/gremlin/GremlinPlugin.java",
            "fa5ad4a1ed1067365475df99aefd55f92abd692c",
            "gremlin-plugin/src/main/java/org/neo4j/server/plugin/gremlin/GremlinPlugin.java",
            "@Name( \"get_all_edges\" )\n    @Description( \"execute a Gremlin script with variables 'start' set to the start node 'g' set to the Neo4jGraph and 'results' containing a resulting vertex\" )\n    @PluginTarget( GraphDatabaseService.class )\n    public Representation getEdges(\n            @Description( \"The Gremlin script\" ) @Parameter( name = \"script\", optional=true ) String script ,@Source GraphDatabaseService graphDb)\n    {\n        ScriptEngineManager manager = new ScriptEngineManager();\n        ScriptEngine engine = manager.getEngineByName( \"gremlin\" );\n        ArrayList<EdgeRepresentation> results = new ArrayList<EdgeRepresentation>();\n        Neo4jGraph graph = new Neo4jGraph( graphDb );\n        engine.getBindings( ScriptContext.ENGINE_SCOPE ).put( \"g\",\n                graph );\n        engine.getBindings( ScriptContext.GLOBAL_SCOPE ).put( \"results\",\n                results );\n        try\n        {\n            engine.eval( script );\n        }\n        catch ( ScriptException e )\n        {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        return new ListRepresentation( RepresentationType.RELATIONSHIP, results );\n    }",
            "/**\n * This will give a plugin of type\n * curl -d 'script=g.E' http://localhost:7474/db/data/ext/GremlinPlugin/graphDb/get_all_edges\n * which should return an arrayList consisting of all the edges of the current graph\n * @param startNode\n * @param script\n * @return\n */\n",
            "@Name( \"get_all_edges\" )\n    @Description( \"execute a Gremlin script with variables 'start' set to the start node 'g' set to the Neo4jGraph and 'results' containing a resulting vertex\" )\n    @PluginTarget( GraphDatabaseService.class )\n    public Representation getEdges(\n            @Description( \"The Gremlin script\" ) @Parameter( name = \"script\", optional=true ) String script ,@Source GraphDatabaseService graphDb)\n    {\n        ScriptEngineManager manager = new ScriptEngineManager();\n        ScriptEngine engine = manager.getEngineByName( \"gremlin\" );\n        ArrayList<Edge> results = new ArrayList<Edge>();\n        Neo4jGraph graph = new Neo4jGraph( graphDb );\n        engine.getBindings( ScriptContext.ENGINE_SCOPE ).put( \"g\",\n                graph );\n        engine.getBindings( ScriptContext.GLOBAL_SCOPE ).put( \"results\",\n                results );\n        try\n        {\n            engine.eval( script );\n        }\n        catch ( ScriptException e )\n        {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        return new PipeEdgeRepresentation(  results );\n    }",
            "/**\n * This will give a plugin of type\n * curl -d 'script=g.E' http://localhost:7474/db/data/ext/GremlinPlugin/graphDb/get_all_edges\n * which should return an arrayList consisting of all the edges of the current graph\n * @param startNode\n * @param script\n * @return\n */\n"
        ],
        "test_db": [
            2838841,
            "neo4j/neo4j",
            "/data/comment_repos/neo4j@neo4j",
            "a96d79bd0110d0603879f450c6f4dd69cfdee2e3",
            "3478739462b687474f0ffa1488299823ba3959a5",
            "gremlin-plugin/src/test/java/org/neo4j/server/plugin/gremlin/GremlinPluginTest.java",
            "74d821d8ed5cc1494e6a682bda423ebcc21b533e",
            "gremlin-plugin/src/test/java/org/neo4j/server/plugin/gremlin/GremlinPluginTest.java",
            "@Test\n\tpublic void testGetEdges() {\n\t\tString script=\"results.add(g.E)\";\n\t\tTransaction tx= null;\n\t\tRepresentation curRepresentationObj = null;\n\t\ttry\n\t\t{\n\t\t\ttx=curGraphDBServiceObj.beginTx();\n\t\t\tcurRepresentationObj=(Representation)curGremlinPluginObj.getEdges(script, curGraphDBServiceObj);\n\t\t\tassertNotNull(curRepresentationObj);\n\t\t\ttx.success();\n\t\t\t\n\t\t\tSystem.err.println(\"GremlinPluginTest::testGetEdges the contents of the representation object=\"+curRepresentationObj.toString());\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tt.printStackTrace ();\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttx.finish();\n\t\t}\n\t\t\n\t}",
            "/* Pass in a reference node and the current\n\t * embedded graph database that we're testing\n\t * and get back the list of edges\n\t * \n\t*/\n",
            "@Test\n\tpublic void testGetEdges() {\n\t\tString script=\"results.add(g.E)\";\n\t\tTransaction tx= null;\n\t\tRepresentation curRepresentationObj = null;\n\t\ttry\n\t\t{\n\t\t\ttx=curGraphDBServiceObj.beginTx();\n\t\t\tcurRepresentationObj=(Representation)curGremlinPluginObj.getEdges(script, curGraphDBServiceObj);\n\t\t\tassertNotNull(curRepresentationObj);\n\t\t\ttx.success();\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tt.printStackTrace ();\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttx.finish();\n\t\t}\n\t\tSystem.out.println(\"Results of testGetEdges\"+json.format( curRepresentationObj ));\n\t}",
            "/* Pass in a reference node and the current\n\t * embedded graph database that we're testing\n\t * and get back the list of edges\n\t * \n\t*/\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "all",
                "all",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "edges",
                "edges",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "execute",
                "execute",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "Gremlin",
                "Gremlin",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "variables",
                "variables",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "start",
                "start",
                "equal"
            ],
            [
                "node",
                "node",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "g",
                "g",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "Neo4j",
                "Neo4j",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "and",
                "and",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "'",
                "'",
                "equal"
            ],
            [
                "containing",
                "containing",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "resulting",
                "resulting",
                "equal"
            ],
            [
                "vertex",
                "vertex",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Plugin",
                "Plugin",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Target",
                "Target",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Database",
                "Database",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Representation",
                "Representation",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Edges",
                "Edges",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "The",
                "The",
                "equal"
            ],
            [
                "Gremlin",
                "Gremlin",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Parameter",
                "Parameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "optional",
                "optional",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Source",
                "Source",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Database",
                "Database",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Db",
                "Db",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Engine",
                "Engine",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "manager",
                "manager",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Engine",
                "Engine",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Engine",
                "Engine",
                "equal"
            ],
            [
                "engine",
                "engine",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "manager",
                "manager",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Engine",
                "Engine",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "gremlin",
                "gremlin",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Edge",
                "Edge",
                "equal"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Representation",
                "",
                "delete"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Edge",
                "Edge",
                "equal"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Representation",
                "",
                "delete"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Neo4j",
                "Neo4j",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Neo4j",
                "Neo4j",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Db",
                "Db",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "engine",
                "engine",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bindings",
                "Bindings",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ENGINE",
                "ENGINE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SCOPE",
                "SCOPE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "g",
                "g",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "engine",
                "engine",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bindings",
                "Bindings",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "GLOBAL",
                "GLOBAL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SCOPE",
                "SCOPE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "engine",
                "engine",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "eval",
                "eval",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "script",
                "script",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Script",
                "Script",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "print",
                "print",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stack",
                "Stack",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Trace",
                "Trace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "List",
                "Pipe",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Edge",
                "insert"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Representation",
                "Representation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Representation",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Type",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "RELATIONSHIP",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "results",
                "results",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public BoundingBox scale(Vector3 scale) { min = min.multiply(scale); max = max.multiply(scale); return this; } ",
        "focal_tgt": "public BoundingBox scale(Vector3 scale) { return new BoundingBox(min.multiply(scale), max.multiply(scale)); } ",
        "test_src": "@Test public void testScale() { BoundingBox a = new BoundingBox( - 0.3f, - 0.5f, - 0.7f, 0.12f, 0.43f, 0.1f); BoundingBox b = new BoundingBox( - 4.5f, - 7.5f, - 10.5f, 1.8f, 6.45f, 1.5f); a.scale(1.5f); b.scale(0.1f); testValue(a, b); a.scale(new Vector3(0.6f, 0.6f, 0.6f)); b.scale( - 0.3f, - 0.3f, - 0.3f).scale( - 2.0f); testValue(a, b); } ",
        "test_tgt": "@Test public void testScale() { BoundingBox a = new BoundingBox( - 0.3f, - 0.5f, - 0.7f, 0.12f, 0.43f, 0.1f); BoundingBox b = new BoundingBox( - 4.5f, - 7.5f, - 10.5f, 1.8f, 6.45f, 1.5f); a = a.scale(1.5f); b = b.scale(0.1f); testValue(a, b); a = a.scale(new Vector3(0.6f, 0.6f, 0.6f)); b = b.scale( - 0.3f, - 0.3f, - 0.3f).scale( - 2.0f); testValue(a, b); } ",
        "label": 1,
        "focal_db": [
            5282488,
            "SpoutDev/Spout",
            "/data/local_comment_repos/SpoutDev@Spout",
            "4bfaff88f631c00104d531ad3f9dd819826b1404",
            "e99bd480719192ecf558356d254a39d7fde5c8ec",
            "src/main/java/org/spout/api/collision/BoundingBox.java",
            "7a15196c6d7c3b69928e7b34dc17e5f61712e45b",
            "src/main/java/org/spout/api/collision/BoundingBox.java",
            "public BoundingBox scale(Vector3 scale) {\n\t\tmin = min.multiply(scale);\n\t\tmax = max.multiply(scale);\n\t\treturn this;\n\t}",
            "/**\n * Scales this bounding box\n * Multiplies both the minimum and maximum vectors by the given {@link Vector3}\n *\n * @param scale\n * @return this bounding box\n */\n",
            "public BoundingBox scale(Vector3 scale) {\n\t\treturn new BoundingBox(min.multiply(scale), max.multiply(scale));\n\t}",
            "/**\n * Scales this bounding box\n * Multiplies both the minimum and maximum vectors by the given {@link Vector3}\n *\n * @param scale\n * @return new {@link BoundingBox} scaled\n */\n"
        ],
        "test_db": [
            5282508,
            "SpoutDev/Spout",
            "/data/local_comment_repos/SpoutDev@Spout",
            "4bfaff88f631c00104d531ad3f9dd819826b1404",
            "50f7cce3121ede3b742539febbde5f95cff236a2",
            "src/test/java/org/spout/api/collision/BoundingBoxTest.java",
            "fb1aed8b517d6be9b9ec43fbf0c9c0b221c25729",
            "src/test/java/org/spout/api/collision/BoundingBoxTest.java",
            "@Test\n\tpublic void testScale() {\n\t\tBoundingBox a = new BoundingBox(-0.3f, -0.5f, -0.7f, 0.12f, 0.43f, 0.1f);\n\t\tBoundingBox b = new BoundingBox(-4.5f, -7.5f, -10.5f, 1.8f, 6.45f, 1.5f);\n\t\ta.scale(1.5f);\n\t\tb.scale(0.1f);\n\n\n\t\ttestValue(a, b);\n\n\t\ta.scale(new Vector3(0.6f, 0.6f, 0.6f));\n\t\tb.scale(-0.3f, -0.3f, -0.3f).scale(-2.0f);\n\n\t\ttestValue(a, b);\n\t}",
            "/**\n * Test of scale method, of class BoundingBox.\n */\n",
            "@Test\n\tpublic void testScale() {\n\t\tBoundingBox a = new BoundingBox(-0.3f, -0.5f, -0.7f, 0.12f, 0.43f, 0.1f);\n\t\tBoundingBox b = new BoundingBox(-4.5f, -7.5f, -10.5f, 1.8f, 6.45f, 1.5f);\n\t\ta = a.scale(1.5f);\n\t\tb = b.scale(0.1f);\n\n\n\t\ttestValue(a, b);\n\n\t\ta = a.scale(new Vector3(0.6f, 0.6f, 0.6f));\n\t\tb = b.scale(-0.3f, -0.3f, -0.3f).scale(-2.0f);\n\n\t\ttestValue(a, b);\n\t}",
            "/**\n * Test of scale method, of class BoundingBox.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Bounding",
                "Bounding",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Box",
                "Box",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Vector3",
                "Vector3",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "min",
                "return",
                "replace"
            ],
            [
                "=",
                "new",
                "replace"
            ],
            [
                "",
                "Bounding",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Box",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "min",
                "min",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "multiply",
                "multiply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ",",
                "replace"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "multiply",
                "multiply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ")",
                "replace"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "this",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Application getApplication() { return this.application; } ",
        "focal_tgt": "public Set < Application > getApplications() { return this.applications; } ",
        "test_src": "@Test public void testGetApplication()throws GenieException { final Application app = this.appService.getApplication(APP_1_ID); Assert.assertEquals(APP_1_ID, app.getId()); Assert.assertEquals(APP_1_NAME, app.getName()); Assert.assertEquals(APP_1_USER, app.getUser()); Assert.assertEquals(APP_1_VERSION, app.getVersion()); Assert.assertEquals(APP_1_STATUS, app.getStatus()); Assert.assertEquals(3, app.getTags().size()); Assert.assertEquals(2, app.getConfigs().size()); Assert.assertEquals(2, app.getDependencies().size()); final Application app2 = this.appService.getApplication(APP_2_ID); Assert.assertEquals(APP_2_ID, app2.getId()); Assert.assertEquals(APP_2_NAME, app2.getName()); Assert.assertEquals(APP_2_USER, app2.getUser()); Assert.assertEquals(APP_2_VERSION, app2.getVersion()); Assert.assertEquals(APP_2_STATUS, app2.getStatus()); Assert.assertEquals(4, app2.getTags().size()); Assert.assertEquals(2, app2.getConfigs().size()); Assert.assertEquals(1, app2.getDependencies().size()); final Application app3 = this.appService.getApplication(APP_3_ID); Assert.assertEquals(APP_3_ID, app3.getId()); Assert.assertEquals(APP_3_NAME, app3.getName()); Assert.assertEquals(APP_3_USER, app3.getUser()); Assert.assertEquals(APP_3_VERSION, app3.getVersion()); Assert.assertEquals(APP_3_STATUS, app3.getStatus()); Assert.assertEquals(3, app3.getTags().size()); Assert.assertEquals(1, app3.getConfigs().size()); Assert.assertEquals(2, app3.getDependencies().size()); } ",
        "test_tgt": "@Test@Ignore public void testGetApplication()throws GenieException { } ",
        "label": 1,
        "focal_db": [
            2856350,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "cde77a889ba0a92de277ec138a289d7d1ca4988c",
            "32bc398ba2e93f3707db0478cd0e5f3827116be8",
            "genie-common/src/main/java/com/netflix/genie/common/model/Command.java",
            "d6e5dd682d430ed821496a0a48279e06f77532b0",
            "genie-common/src/main/java/com/netflix/genie/common/model/Command.java",
            "public Application getApplication() {\n        return this.application;\n    }",
            "/**\n * Gets the application that this command uses.\n *\n * @return application\n */\n",
            "public Set<Application> getApplications() {\n        return this.applications;\n    }",
            "/**\n * Gets the applications that this command uses.\n *\n * @return applications linked to this command\n */\n"
        ],
        "test_db": [
            2854646,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "8bd80d0365e6a897fd6a3d9d83915fd2f8979316",
            "ce9067e34c2a7183d1347c7bcd58119259d67246",
            "genie-core/src/test/java/com/netflix/genie/core/jpa/services/JpaApplicationServiceImplIntegrationTests.java",
            "cec785249a62f2254573d20b4e84ba4deefc3166",
            "genie-core/src/test/java/com/netflix/genie/core/jpa/services/JpaApplicationServiceImplIntegrationTests.java",
            "@Test\n    public void testGetApplication() throws GenieException {\n        final Application app = this.appService.getApplication(APP_1_ID);\n        Assert.assertEquals(APP_1_ID, app.getId());\n        Assert.assertEquals(APP_1_NAME, app.getName());\n        Assert.assertEquals(APP_1_USER, app.getUser());\n        Assert.assertEquals(APP_1_VERSION, app.getVersion());\n        Assert.assertEquals(APP_1_STATUS, app.getStatus());\n        Assert.assertEquals(3, app.getTags().size());\n        Assert.assertEquals(2, app.getConfigs().size());\n        Assert.assertEquals(2, app.getDependencies().size());\n\n        final Application app2 = this.appService.getApplication(APP_2_ID);\n        Assert.assertEquals(APP_2_ID, app2.getId());\n        Assert.assertEquals(APP_2_NAME, app2.getName());\n        Assert.assertEquals(APP_2_USER, app2.getUser());\n        Assert.assertEquals(APP_2_VERSION, app2.getVersion());\n        Assert.assertEquals(APP_2_STATUS, app2.getStatus());\n        Assert.assertEquals(4, app2.getTags().size());\n        Assert.assertEquals(2, app2.getConfigs().size());\n        Assert.assertEquals(1, app2.getDependencies().size());\n\n        final Application app3 = this.appService.getApplication(APP_3_ID);\n        Assert.assertEquals(APP_3_ID, app3.getId());\n        Assert.assertEquals(APP_3_NAME, app3.getName());\n        Assert.assertEquals(APP_3_USER, app3.getUser());\n        Assert.assertEquals(APP_3_VERSION, app3.getVersion());\n        Assert.assertEquals(APP_3_STATUS, app3.getStatus());\n        Assert.assertEquals(3, app3.getTags().size());\n        Assert.assertEquals(1, app3.getConfigs().size());\n        Assert.assertEquals(2, app3.getDependencies().size());\n    }",
            "/**\n * Test the get application method.\n *\n * @throws GenieException For any problem\n */\n",
            "@Test\n    public void testGetApplication() throws GenieException {\n        final Application app = this.appService.getApplication(APP_1_ID);\n        Assert.assertEquals(APP_1_ID, app.getId());\n        Assert.assertEquals(APP_1_NAME, app.getName());\n        Assert.assertEquals(APP_1_USER, app.getUser());\n        Assert.assertEquals(APP_1_VERSION, app.getVersion());\n        Assert.assertEquals(APP_1_STATUS, app.getStatus());\n        Assert.assertThat(app.getType(), Matchers.nullValue());\n        Assert.assertEquals(3, app.getTags().size());\n        Assert.assertEquals(2, app.getConfigs().size());\n        Assert.assertEquals(2, app.getDependencies().size());\n\n        final Application app2 = this.appService.getApplication(APP_2_ID);\n        Assert.assertEquals(APP_2_ID, app2.getId());\n        Assert.assertEquals(APP_2_NAME, app2.getName());\n        Assert.assertEquals(APP_2_USER, app2.getUser());\n        Assert.assertEquals(APP_2_VERSION, app2.getVersion());\n        Assert.assertEquals(APP_2_STATUS, app2.getStatus());\n        Assert.assertThat(app2.getType(), Matchers.is(APP_2_TYPE));\n        Assert.assertEquals(4, app2.getTags().size());\n        Assert.assertEquals(2, app2.getConfigs().size());\n        Assert.assertEquals(1, app2.getDependencies().size());\n\n        final Application app3 = this.appService.getApplication(APP_3_ID);\n        Assert.assertEquals(APP_3_ID, app3.getId());\n        Assert.assertEquals(APP_3_NAME, app3.getName());\n        Assert.assertEquals(APP_3_USER, app3.getUser());\n        Assert.assertEquals(APP_3_VERSION, app3.getVersion());\n        Assert.assertEquals(APP_3_STATUS, app3.getStatus());\n        Assert.assertThat(app3.getType(), Matchers.is(APP_3_TYPE));\n        Assert.assertEquals(3, app3.getTags().size());\n        Assert.assertEquals(1, app3.getConfigs().size());\n        Assert.assertEquals(2, app3.getDependencies().size());\n    }",
            "/**\n * Test the get application method.\n *\n * @throws GenieException For any problem\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "",
                "Set",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "Application",
                "Application",
                "equal"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Application",
                "Applications",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "application",
                "applications",
                "replace"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Path(\"/transactions/{tx-id}/invalidate\")@PUT public void invalidateTx(HttpRequest request, HttpResponder responder, @PathParam(\"tx-id\")final String txId) { try { Long txIdLong = Long.valueOf(txId); boolean success = txClient.invalidate(txIdLong); if(success) { LOG.info(\"Transaction {} successfully invalidated\", txId); responder.sendStatus(HttpResponseStatus.OK); } else { LOG.info(\"Transaction {} could not be invalidated: not in progress.\", txId); responder.sendStatus(HttpResponseStatus.CONFLICT); } } catch(NumberFormatException e) { LOG.info(\"Could not invalidate transaction: {} is not a valid tx id\", txId); responder.sendStatus(HttpResponseStatus.BAD_REQUEST); } } ",
        "focal_tgt": "@Path(\"/transactions/{tx-id}/invalidate\")@POST public void invalidateTx(HttpRequest request, HttpResponder responder, @PathParam(\"tx-id\")final String txId) { try { long txIdLong = Long.parseLong(txId); boolean success = txClient.invalidate(txIdLong); if(success) { LOG.info(\"Transaction {} successfully invalidated\", txId); responder.sendStatus(HttpResponseStatus.OK); } else { LOG.info(\"Transaction {} could not be invalidated: not in progress.\", txId); responder.sendStatus(HttpResponseStatus.CONFLICT); } } catch(NumberFormatException e) { LOG.info(\"Could not invalidate transaction: {} is not a valid tx id\", txId); responder.sendStatus(HttpResponseStatus.BAD_REQUEST); } } ",
        "test_src": "@Test public void testInvalidateTx()throws Exception { TransactionSystemClient txClient = AppFabricTestsSuite.getTxClient(); Transaction tx1 = txClient.startShort(); HttpResponse response = AppFabricTestsSuite.doPut(\"/v2/transactions/\" + tx1.getWritePointer() + \"/invalidate\"); Assert.assertEquals(200, response.getStatusLine().getStatusCode()); Transaction tx2 = txClient.startShort(); txClient.commit(tx2); response = AppFabricTestsSuite.doPut(\"/v2/transactions/\" + tx2.getWritePointer() + \"/invalidate\"); Assert.assertEquals(409, response.getStatusLine().getStatusCode()); Assert.assertEquals(400, AppFabricTestsSuite.doPut(\"/v2/transactions/foobar/invalidate\").getStatusLine().getStatusCode()); } ",
        "test_tgt": "@Test public void testInvalidateTx()throws Exception { TransactionSystemClient txClient = AppFabricTestsSuite.getTxClient(); Transaction tx1 = txClient.startShort(); HttpResponse response = AppFabricTestsSuite.doPost(\"/v2/transactions/\" + tx1.getWritePointer() + \"/invalidate\"); Assert.assertEquals(200, response.getStatusLine().getStatusCode()); Transaction tx2 = txClient.startShort(); txClient.commit(tx2); response = AppFabricTestsSuite.doPost(\"/v2/transactions/\" + tx2.getWritePointer() + \"/invalidate\"); Assert.assertEquals(409, response.getStatusLine().getStatusCode()); Assert.assertEquals(400, AppFabricTestsSuite.doPost(\"/v2/transactions/foobar/invalidate\").getStatusLine().getStatusCode()); } ",
        "label": 1,
        "focal_db": [
            1599145,
            "caskdata/cdap",
            "/data/comment_repos/caskdata@cdap",
            "73912506d640ec833e6e66a0493ffe33391853e0",
            "b62400c606a57fe4bb91fa70b78ba4a98999b716",
            "app-fabric/src/main/java/com/continuuity/gateway/handlers/AppFabricHttpHandler.java",
            "7c84b4901c3c3b5dc46870785891db41c9bedda0",
            "app-fabric/src/main/java/com/continuuity/gateway/handlers/AppFabricHttpHandler.java",
            "@Path(\"/transactions/{tx-id}/invalidate\")\n  @PUT\n  public void invalidateTx(HttpRequest request, HttpResponder responder,\n                           @PathParam(\"tx-id\") final String txId) {\n    try {\n      Long txIdLong = Long.valueOf(txId);\n      boolean success = txClient.invalidate(txIdLong);\n      if (success) {\n        LOG.info(\"Transaction {} successfully invalidated\", txId);\n        responder.sendStatus(HttpResponseStatus.OK);\n      } else {\n        LOG.info(\"Transaction {} could not be invalidated: not in progress.\", txId);\n        responder.sendStatus(HttpResponseStatus.CONFLICT);\n      }\n    } catch (NumberFormatException e) {\n      LOG.info(\"Could not invalidate transaction: {} is not a valid tx id\", txId);\n      responder.sendStatus(HttpResponseStatus.BAD_REQUEST);\n    }\n  }",
            "/**\n * Invalidate a transaction.\n * @param txId transaction ID.\n */\n",
            "@Path(\"/transactions/{tx-id}/invalidate\")\n  @POST\n  public void invalidateTx(HttpRequest request, HttpResponder responder,\n                           @PathParam(\"tx-id\") final String txId) {\n    try {\n      long txIdLong = Long.parseLong(txId);\n      boolean success = txClient.invalidate(txIdLong);\n      if (success) {\n        LOG.info(\"Transaction {} successfully invalidated\", txId);\n        responder.sendStatus(HttpResponseStatus.OK);\n      } else {\n        LOG.info(\"Transaction {} could not be invalidated: not in progress.\", txId);\n        responder.sendStatus(HttpResponseStatus.CONFLICT);\n      }\n    } catch (NumberFormatException e) {\n      LOG.info(\"Could not invalidate transaction: {} is not a valid tx id\", txId);\n      responder.sendStatus(HttpResponseStatus.BAD_REQUEST);\n    }\n  }",
            "/**\n * Invalidate a transaction.\n * @param txId transaction ID.\n */\n"
        ],
        "test_db": [
            1599146,
            "caskdata/cdap",
            "/data/comment_repos/caskdata@cdap",
            "73912506d640ec833e6e66a0493ffe33391853e0",
            "8296489a7871fe37f1d1885d1ea2657609a65fc8",
            "app-fabric/src/test/java/com/continuuity/internal/app/services/http/handlers/AppFabricHttpHandlerTest.java",
            "67adaaa96216387533822b197d49219d51549249",
            "app-fabric/src/test/java/com/continuuity/internal/app/services/http/handlers/AppFabricHttpHandlerTest.java",
            "@Test\n  public void testInvalidateTx() throws Exception {\n    TransactionSystemClient txClient = AppFabricTestsSuite.getTxClient();\n\n    Transaction tx1 = txClient.startShort();\n    HttpResponse response = AppFabricTestsSuite.doPut(\"/v2/transactions/\" + tx1.getWritePointer() + \"/invalidate\");\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Transaction tx2 = txClient.startShort();\n    txClient.commit(tx2);\n    response = AppFabricTestsSuite.doPut(\"/v2/transactions/\" + tx2.getWritePointer() + \"/invalidate\");\n    Assert.assertEquals(409, response.getStatusLine().getStatusCode());\n\n    Assert.assertEquals(400, AppFabricTestsSuite.doPut(\"/v2/transactions/foobar/invalidate\")\n                               .getStatusLine().getStatusCode());\n  }",
            "/**\n * Tests invalidating a transaction.\n * @throws Exception\n */\n",
            "@Test\n  public void testInvalidateTx() throws Exception {\n    TransactionSystemClient txClient = AppFabricTestsSuite.getTxClient();\n\n    Transaction tx1 = txClient.startShort();\n    HttpResponse response = AppFabricTestsSuite.doPost(\"/v2/transactions/\" + tx1.getWritePointer() + \"/invalidate\");\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Transaction tx2 = txClient.startShort();\n    txClient.commit(tx2);\n    response = AppFabricTestsSuite.doPost(\"/v2/transactions/\" + tx2.getWritePointer() + \"/invalidate\");\n    Assert.assertEquals(409, response.getStatusLine().getStatusCode());\n\n    Assert.assertEquals(400, AppFabricTestsSuite.doPost(\"/v2/transactions/foobar/invalidate\")\n                               .getStatusLine().getStatusCode());\n  }",
            "/**\n * Tests invalidating a transaction.\n * @throws Exception\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "transactions",
                "transactions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "invalidate",
                "invalidate",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "PUT",
                "POST",
                "replace"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "invalidate",
                "invalidate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tx",
                "Tx",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Http",
                "Http",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Http",
                "Http",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Responder",
                "Responder",
                "equal"
            ],
            [
                "responder",
                "responder",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Long",
                "long",
                "replace"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "parse",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Long",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "success",
                "success",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "invalidate",
                "invalidate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "success",
                "success",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Transaction",
                "Transaction",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "successfully",
                "successfully",
                "equal"
            ],
            [
                "invalidated",
                "invalidated",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "responder",
                "responder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "send",
                "send",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Http",
                "Http",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OK",
                "OK",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Transaction",
                "Transaction",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "could",
                "could",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "invalidated",
                "invalidated",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                "progress",
                "progress",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "responder",
                "responder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "send",
                "send",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Http",
                "Http",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "CONFLICT",
                "CONFLICT",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Number",
                "Number",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Format",
                "Format",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Could",
                "Could",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "invalidate",
                "invalidate",
                "equal"
            ],
            [
                "transaction",
                "transaction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "valid",
                "valid",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "tx",
                "tx",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "responder",
                "responder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "send",
                "send",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Http",
                "Http",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "BAD",
                "BAD",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "REQUEST",
                "REQUEST",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override synchronized public DatagramSocket socket() { if(null == socket) { socket = new DatagramSocketAdapter(SocketImplProvider.getDatagramSocketImpl(fd, localPort), this); } return socket; } ",
        "focal_tgt": "@Override synchronized public DatagramSocket socket() { if(null == socket) { socket = new DatagramSocketAdapter(new PlainDatagramSocketImpl(fd, localPort), this); } return socket; } ",
        "test_src": "@TestTargetNew(level = TestLevel.PARTIAL_COMPLETE, notes = \"\", method = \"socket\", args = { })public void testSocket_BasicStatusBeforeConnect()throws SocketException { assertFalse(this.channel1.isConnected()); DatagramSocket s1 = this.channel1.socket(); assertSocketBeforeConnect(s1); DatagramSocket s2 = this.channel1.socket(); assertSame(s1, s2); } ",
        "test_tgt": "@TestTargetNew(level = TestLevel.PARTIAL_COMPLETE, notes = \"\", method = \"socket\", args = { })@KnownFailure(value = \"bug 2155708\")public void testSocket_BasicStatusBeforeConnect()throws SocketException { assertFalse(this.channel1.isConnected()); DatagramSocket s1 = this.channel1.socket(); assertSocketBeforeConnect(s1); DatagramSocket s2 = this.channel1.socket(); assertSame(s1, s2); } ",
        "label": 1,
        "focal_db": [
            319892,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "3819a76e7c1f49253f0e077bd497f149340c02b8",
            "ddd56e54bdc63f8a1268cf09a7320c3e340c5e17",
            "libcore/nio/src/main/java/org/apache/harmony/nio/internal/DatagramChannelImpl.java",
            "ac8f77befd2603105166f18c2a6a630805dd7dc2",
            "libcore/nio/src/main/java/org/apache/harmony/nio/internal/DatagramChannelImpl.java",
            "@Override\n    synchronized public DatagramSocket socket() {\n        if (null == socket) {\n            socket = new DatagramSocketAdapter(SocketImplProvider\n                    .getDatagramSocketImpl(fd, localPort), this);\n        }\n        return socket;\n    }",
            "/*\n     * Getting the internal DatagramSocket If we have not the socket, we create\n     * a new one.\n     */\n",
            "@Override\n    synchronized public DatagramSocket socket() {\n        if (null == socket) {\n            socket = new DatagramSocketAdapter(\n                    new PlainDatagramSocketImpl(fd, localPort), this);\n        }\n        return socket;\n    }",
            "/*\n     * Getting the internal DatagramSocket If we have not the socket, we create\n     * a new one.\n     */\n"
        ],
        "test_db": [
            321979,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "3dc6a81182178a8ac9570a7679cf24b6a2665a0b",
            "36e008271b9b3fa1fbf3fcf68919524aa5cb1cb9",
            "libcore/nio/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/DatagramChannelTest.java",
            "8a77b9d6282e1260c8deac5583cac45f1dbeb7b9",
            "libcore/nio/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/DatagramChannelTest.java",
            "@TestTargetNew(\n        level = TestLevel.PARTIAL_COMPLETE,\n        notes = \"\",\n        method = \"socket\",\n        args = {}\n    )\n    public void testSocket_BasicStatusBeforeConnect() throws SocketException {\n        assertFalse(this.channel1.isConnected());// not connected\n        DatagramSocket s1 = this.channel1.socket();\n        assertSocketBeforeConnect(s1);\n        DatagramSocket s2 = this.channel1.socket();\n        // same\n        assertSame(s1, s2);\n    }",
            "/**\n * Test method for 'DatagramChannelImpl.socket()'\n *\n * @throws SocketException\n */\n",
            "@TestTargetNew(\n        level = TestLevel.PARTIAL_COMPLETE,\n        notes = \"\",\n        method = \"socket\",\n        args = {}\n    )\n    @KnownFailure(value=\"bug 2155708\")\n    public void testSocket_BasicStatusBeforeConnect() throws SocketException {\n        assertFalse(this.channel1.isConnected());// not connected\n        DatagramSocket s1 = this.channel1.socket();\n        assertSocketBeforeConnect(s1);\n        DatagramSocket s2 = this.channel1.socket();\n        // same\n        assertSame(s1, s2);\n    }",
            "/**\n * Test method for 'DatagramChannelImpl.socket()'\n *\n * @throws SocketException\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "synchronized",
                "synchronized",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Datagram",
                "Datagram",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Socket",
                "Socket",
                "equal"
            ],
            [
                "socket",
                "socket",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "socket",
                "socket",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "socket",
                "socket",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Datagram",
                "Datagram",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Socket",
                "Socket",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Adapter",
                "Adapter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Socket",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Impl",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Provider",
                "",
                "delete"
            ],
            [
                ".",
                "new",
                "replace"
            ],
            [
                "get",
                "Plain",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Datagram",
                "Datagram",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Socket",
                "Socket",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fd",
                "fd",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "local",
                "local",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Port",
                "Port",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "socket",
                "socket",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Response putReferAntiLeech(String bucket, BucketReferAntiLeech antiLeech)throws QiniuException { String url = String.format(\"%s/referAntiLeech?bucket=%s&%s\", configuration.ucHost(), bucket, antiLeech.asQueryString()); Response res = post(url, null); if( ! res.isOK()) { throw new QiniuException(res); } res.close(); return res; } ",
        "focal_tgt": "public Response putReferAntiLeech(String bucket, BucketReferAntiLeech antiLeech)throws QiniuException { String url = String.format(\"%s/referAntiLeech?bucket=%s&%s\", configuration.ucHost(), bucket, antiLeech.asQueryString()); Response res = post(url, null); if( ! res.isOK()) { throw new QiniuException(res); } return res; } ",
        "test_src": "@Test public void testPutReferAntiLeech() { BucketReferAntiLeech leech = new BucketReferAntiLeech(); Response response; try { System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech); Assert.assertEquals(200, response.statusCode); leech.setAllowEmptyReferer(false); System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech); Assert.assertEquals(200, response.statusCode); leech.setAllowEmptyReferer(false); leech.setMode(1); leech.setPattern(\"www.qiniu.com\"); System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech); Assert.assertEquals(200, response.statusCode); System.out.println(response.url()); System.out.println(response.reqId); } catch(Exception e) { if(e instanceof QiniuException) { QiniuException ex = (QiniuException)e; Assert.fail(ex.response.toString()); } } } ",
        "test_tgt": "@Test public void testPutReferAntiLeech() { String[]buckets = new String[] { TestConfig.testBucket_z0, TestConfig.testBucket_na0 }; for(String bucket : buckets) { BucketReferAntiLeech leech = new BucketReferAntiLeech(); Response response; BucketInfo bucketInfo; try { leech.setMode(1); leech.setPattern(\"www.qiniu.com\"); leech.setAllowEmptyReferer(false); System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(bucket, leech); Assert.assertEquals(200, response.statusCode); bucketInfo = bucketManager.getBucketInfo(bucket); Assert.assertEquals(1, bucketInfo.getAntiLeechMode()); Assert.assertArrayEquals((new String[] { \"www.qiniu.com\" }), bucketInfo.getReferWhite()); Assert.assertEquals(false, bucketInfo.isNoRefer()); leech.setMode(2); leech.setPattern(\"www.baidu.com\"); leech.setAllowEmptyReferer(true); System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(bucket, leech); Assert.assertEquals(200, response.statusCode); bucketInfo = bucketManager.getBucketInfo(bucket); Assert.assertEquals(2, bucketInfo.getAntiLeechMode()); Assert.assertArrayEquals((new String[] { \"www.baidu.com\" }), bucketInfo.getReferBlack()); Assert.assertEquals(true, bucketInfo.isNoRefer()); leech = new BucketReferAntiLeech(); System.out.println(leech.asQueryString()); response = bucketManager.putReferAntiLeech(bucket, leech); Assert.assertEquals(200, response.statusCode); bucketInfo = bucketManager.getBucketInfo(bucket); Assert.assertEquals(0, bucketInfo.getAntiLeechMode()); Assert.assertNull(\"ReferBlack should be Null\", bucketInfo.getReferBlack()); Assert.assertNull(\"ReferWhtie should be Null\", bucketInfo.getReferWhite()); Assert.assertEquals(false, bucketInfo.isNoRefer()); } catch(Exception e) { if(e instanceof QiniuException) { QiniuException ex = (QiniuException)e; Assert.fail(ex.response.toString()); } } } } ",
        "label": 1,
        "focal_db": [
            3319213,
            "qiniu/java-sdk",
            "/data/comment_repos/qiniu@java-sdk",
            "ee908cdb20416e321d13cb82c3fa721dd4953fad",
            "dd1d20aac40c711275728ef4bf5b7d1e5bf587a4",
            "src/main/java/com/qiniu/storage/BucketManager.java",
            "9b9540b0659581c88722fbd4f47e4f58d7191efa",
            "src/main/java/com/qiniu/storage/BucketManager.java",
            "public Response putReferAntiLeech(String bucket, BucketReferAntiLeech antiLeech) throws QiniuException {\n    \tString url = String.format(\"%s/referAntiLeech?bucket=%s&%s\", configuration.ucHost(), bucket, antiLeech.asQueryString());\n    \tResponse res = post(url, null);\n        if (!res.isOK()) {\n            throw new QiniuException(res);\n        }\n        res.close();\n        return res;\n    }",
            "/**\n * \u8bbe\u7f6e\u7a7a\u95f4referer\u9632\u76d7\u94fe\n * @param bucket\n * @param antiLeech\n * @throws QiniuException\n */\n",
            "public Response putReferAntiLeech(String bucket, BucketReferAntiLeech antiLeech) throws QiniuException {\n    \tString url = String.format(\"%s/referAntiLeech?bucket=%s&%s\", configuration.ucHost(), bucket, antiLeech.asQueryString());\n    \tResponse res = post(url, null);\n        if (!res.isOK()) {\n            throw new QiniuException(res);\n        }\n        return res;\n    }",
            "/**\n * \u8bbe\u7f6e\u7a7a\u95f4referer\u9632\u76d7\u94fe\n * @param bucket\n * @param antiLeech\n * @throws QiniuException\n */\n"
        ],
        "test_db": [
            3319225,
            "qiniu/java-sdk",
            "/data/comment_repos/qiniu@java-sdk",
            "ee908cdb20416e321d13cb82c3fa721dd4953fad",
            "b438d9f4714ca3242985385c8f347a71eeb9e215",
            "src/test/java/test/com/qiniu/storage/BucketTest.java",
            "3ba5680c6432a056109d97e906668ece4e5cf95b",
            "src/test/java/test/com/qiniu/storage/BucketTest.java",
            "@Test\n // TODO\n    public void testPutReferAntiLeech() {\n    \tBucketReferAntiLeech leech = new BucketReferAntiLeech();\n    \tResponse response;\n    \ttry {\n    \t\tSystem.out.println(leech.asQueryString());\n    \t\tresponse = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech);\n    \t\tAssert.assertEquals(200, response.statusCode);\n    \t\t\n    \t\tleech.setAllowEmptyReferer(false);\n    \t\tSystem.out.println(leech.asQueryString());\n    \t\tresponse = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech);\n    \t\tAssert.assertEquals(200, response.statusCode);\n    \t\t\n    \t\tleech.setAllowEmptyReferer(false);\n    \t\tleech.setMode(1);\n    \t\tleech.setPattern(\"www.qiniu.com\");\n    \t\tSystem.out.println(leech.asQueryString());\n    \t\tresponse = bucketManager.putReferAntiLeech(TestConfig.testBucket_z0, leech);\n    \t\tAssert.assertEquals(200, response.statusCode);\n    \t\tSystem.out.println(response.url());\n    \t\tSystem.out.println(response.reqId);\n    \t\t\n\t\t} catch (Exception e) {\n\t\t\tif (e instanceof QiniuException) {\n\t\t\t\tQiniuException ex = (QiniuException) e;\n\t\t\t\tAssert.fail(ex.response.toString());\n\t\t\t}\n\t\t}\n    }",
            "/**\n * \u6d4b\u8bd5\u8bbe\u7f6e\u7a7a\u95f4referer\u9632\u76d7\u94fe\n */\n",
            "@Test\n    public void testPutReferAntiLeech() {\n    \tString[] buckets = new String[]{TestConfig.testBucket_z0, TestConfig.testBucket_na0};\n    \tfor (String bucket : buckets) {\n        \tBucketReferAntiLeech leech = new BucketReferAntiLeech();\n        \tResponse response;\n        \tBucketInfo bucketInfo;\n        \ttry {\n        \t\t// \u6d4b\u8bd5\u767d\u540d\u5355\n        \t\tleech.setMode(1);\n        \t\tleech.setPattern(\"www.qiniu.com\");\n        \t\tleech.setAllowEmptyReferer(false);\n        \t\tSystem.out.println(leech.asQueryString());\n        \t\tresponse = bucketManager.putReferAntiLeech(bucket, leech);\n        \t\tAssert.assertEquals(200, response.statusCode);\n        \t\tbucketInfo = bucketManager.getBucketInfo(bucket);\n        \t\tAssert.assertEquals(1, bucketInfo.getAntiLeechMode());\n        \t\tAssert.assertArrayEquals((new String[] {\"www.qiniu.com\"}), bucketInfo.getReferWhite());\n        \t\tAssert.assertEquals(false, bucketInfo.isNoRefer());\n        \t\t\n        \t\t// \u6d4b\u8bd5\u9ed1\u540d\u5355\n        \t\tleech.setMode(2);\n        \t\tleech.setPattern(\"www.baidu.com\");\n        \t\tleech.setAllowEmptyReferer(true);\n        \t\tSystem.out.println(leech.asQueryString());\n        \t\tresponse = bucketManager.putReferAntiLeech(bucket, leech);\n        \t\tAssert.assertEquals(200, response.statusCode);\n        \t\tbucketInfo = bucketManager.getBucketInfo(bucket);\n        \t\tAssert.assertEquals(2, bucketInfo.getAntiLeechMode());\n        \t\tAssert.assertArrayEquals((new String[] {\"www.baidu.com\"}), bucketInfo.getReferBlack());\n        \t\tAssert.assertEquals(true, bucketInfo.isNoRefer());\n        \t\t\n        \t\t// \u6d4b\u8bd5\u5173\u95ed\n        \t\tleech = new BucketReferAntiLeech();\n        \t\tSystem.out.println(leech.asQueryString());\n        \t\tresponse = bucketManager.putReferAntiLeech(bucket, leech);\n        \t\tAssert.assertEquals(200, response.statusCode);\n        \t\tbucketInfo = bucketManager.getBucketInfo(bucket);\n        \t\tAssert.assertEquals(0, bucketInfo.getAntiLeechMode());\n        \t\tAssert.assertNull(\"ReferBlack should be Null\", bucketInfo.getReferBlack());\n        \t\tAssert.assertNull(\"ReferWhtie should be Null\", bucketInfo.getReferWhite());\n        \t\tAssert.assertEquals(false, bucketInfo.isNoRefer());\n        \t\t\n    \t\t} catch (Exception e) {\n    \t\t\tif (e instanceof QiniuException) {\n    \t\t\t\tQiniuException ex = (QiniuException) e;\n    \t\t\t\tAssert.fail(ex.response.toString());\n    \t\t\t}\n    \t\t}\n    \t}\n    }",
            "/**\n * \u6d4b\u8bd5\u8bbe\u7f6e\u7a7a\u95f4referer\u9632\u76d7\u94fe\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Refer",
                "Refer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Anti",
                "Anti",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leech",
                "Leech",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "bucket",
                "bucket",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Bucket",
                "Bucket",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Refer",
                "Refer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Anti",
                "Anti",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leech",
                "Leech",
                "equal"
            ],
            [
                "anti",
                "anti",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leech",
                "Leech",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Qiniu",
                "Qiniu",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "format",
                "format",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "refer",
                "refer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Anti",
                "Anti",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leech",
                "Leech",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "bucket",
                "bucket",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "&",
                "&",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "%",
                "%",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "s",
                "s",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "configuration",
                "configuration",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "uc",
                "uc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Host",
                "Host",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "bucket",
                "bucket",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "anti",
                "anti",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leech",
                "Leech",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "as",
                "as",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "res",
                "res",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "post",
                "post",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "url",
                "url",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "res",
                "res",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "OK",
                "OK",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Qiniu",
                "Qiniu",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "res",
                "res",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "close",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "res",
                "res",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Concepts getGraphRelatedConcepts(final Graph graph, final List < Concept > concepts, final Map < String, Object > parameters) { final String graphId = IDHelper.getGraphId(graph, getAccountId()); Validate.notEmpty(concepts, \"concepts cannot be empty\"); final Map < String, Object > queryParameters = new HashMap < String, Object > (); final String[]queryParms = new String[] { LEVEL, LIMIT }; for(final String param : queryParms) { if(parameters.containsKey(param))queryParameters.put(param, parameters.get(param)); } if(parameters.get(CONCEPT_FIELDS) != null) { final RequestedFields fields = (RequestedFields)parameters.get(CONCEPT_FIELDS); if(fields != null && ! fields.isEmpty())queryParameters.put(CONCEPT_FIELDS, fields.toString()); } final JsonObject contentJson = new JsonObject(); final JsonArray conceptsJson = new JsonArray(); for(final Concept concept : concepts) { conceptsJson.add(new JsonPrimitive(concept.getId())); } contentJson.add(CONCEPTS, conceptsJson); queryParameters.put(CONCEPTS, conceptsJson.toString()); return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters, Concepts.class); } ",
        "focal_tgt": "public Concepts getGraphRelatedConcepts(final Graph graph, final List < Concept > concepts, final Map < String, Object > parameters) { final String graphId = IDHelper.getGraphId(graph, getAccountId()); Validate.notEmpty(concepts, \"concepts cannot be empty\"); final Map < String, Object > queryParameters = new HashMap < String, Object > (); final String[]queryParms = new String[] { LEVEL, LIMIT }; for(final String param : queryParms) { if(parameters.containsKey(param))queryParameters.put(param, parameters.get(param)); } if(parameters.get(CONCEPT_FIELDS) != null) { final RequestedFields fields = (RequestedFields)parameters.get(CONCEPT_FIELDS); if(fields != null && ! fields.isEmpty())queryParameters.put(CONCEPT_FIELDS, toJson(fields.getFields())); } final JsonObject contentJson = new JsonObject(); final JsonArray conceptsJson = new JsonArray(); for(final Concept concept : concepts) { conceptsJson.add(new JsonPrimitive(concept.getId())); } contentJson.add(CONCEPTS, conceptsJson); queryParameters.put(CONCEPTS, conceptsJson.toString()); return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters, Concepts.class); } ",
        "test_src": "@Test public void testGetGraphRelatedConcepts() { final Map < String, Object > params = new HashMap < String, Object > (); final List < Concept > concepts = new ArrayList < Concept > (); concepts.add(EXAMPLE_CONCEPT); params.put(ConceptInsights.LIMIT, 10); params.put(ConceptInsights.LEVEL, 1); final RequestedFields fs = new RequestedFields(); fs.include(\"abstract\"); params.put(\"concept_fields\", fs); final Concepts conceptResults = service.getGraphRelatedConcepts(Graph.WIKIPEDIA, concepts, params); Assert.assertNotNull(conceptResults); } ",
        "test_tgt": "@Test public void testGetGraphRelatedConcepts() { final Map < String, Object > params = new HashMap < String, Object > (); final List < Concept > concepts = new ArrayList < Concept > (); concepts.add(EXAMPLE_CONCEPT); params.put(ConceptInsights.LIMIT, 10); params.put(ConceptInsights.LEVEL, 1); final RequestedFields fs = new RequestedFields(); fs.include(\"abstract\"); fs.include(\"link\"); fs.include(\"name\"); params.put(ConceptInsights.CONCEPT_FIELDS, fs); Concepts conceptResults = service.getGraphRelatedConcepts(Graph.WIKIPEDIA, concepts, params); Assert.assertNotNull(conceptResults); Assert.assertTrue( ! conceptResults.getConcepts().isEmpty()); Assert.assertNotNull(conceptResults.getConcepts().get(0).getConcept().getAbstract()); } ",
        "label": 1,
        "focal_db": [
            5636528,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "610207580bee3c9f7ab585307f660110bf5eabb4",
            "6be9e751e6fcef6bd04198d2095f00aa240bc05e",
            "src/main/java/com/ibm/watson/developer_cloud/concept_insights/v2/ConceptInsights.java",
            "2175014db5dd9423f57f156fcdad0ee787451744",
            "src/main/java/com/ibm/watson/developer_cloud/concept_insights/v2/ConceptInsights.java",
            "public Concepts getGraphRelatedConcepts(final Graph graph, final List<Concept> concepts,\n      final Map<String, Object> parameters) {\n    final String graphId = IDHelper.getGraphId(graph, getAccountId());\n    Validate.notEmpty(concepts, \"concepts cannot be empty\");\n\n    final Map<String, Object> queryParameters = new HashMap<String, Object>();\n    final String[] queryParms = new String[] {LEVEL, LIMIT};\n    for (final String param : queryParms) {\n      if (parameters.containsKey(param))\n        queryParameters.put(param, parameters.get(param));\n    }\n    if (parameters.get(CONCEPT_FIELDS) != null) {\n      final RequestedFields fields = (RequestedFields) parameters.get(CONCEPT_FIELDS);\n      if (fields != null && !fields.isEmpty())\n        queryParameters.put(CONCEPT_FIELDS, fields.toString());\n    }\n    final JsonObject contentJson = new JsonObject();\n    final JsonArray conceptsJson = new JsonArray();\n    for (final Concept concept : concepts) {\n      conceptsJson.add(new JsonPrimitive(concept.getId()));\n    }\n    contentJson.add(CONCEPTS, conceptsJson);\n    queryParameters.put(CONCEPTS, conceptsJson.toString());\n    return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters,\n        Concepts.class);\n  }",
            "/**\n * Searches for graph concepts by using partial matches.\n *\n * @param graph the graph\n * @param concepts the concepts\n * @param parameters The parameters to be used in the service call, graph and concepts are\n *        required.\n *        <ul>\n *        <li>RequestedFields concept_fields - Additional fields to be included in the concept\n *        objects.<br>\n *        <li>Integer level - A number in the range 0 - 3 that represents the level of popularity\n *        of related concepts.<br>\n *        <li>Integer limit - The maximum number of concepts to be returned.<br>\n *        </ul>\n * @return {@link Concepts}\n */\n",
            "public Concepts getGraphRelatedConcepts(final Graph graph, final List<Concept> concepts,\n      final Map<String, Object> parameters) {\n    final String graphId = IDHelper.getGraphId(graph, getAccountId());\n    Validate.notEmpty(concepts, \"concepts cannot be empty\");\n\n    final Map<String, Object> queryParameters = new HashMap<String, Object>();\n    final String[] queryParms = new String[] {LEVEL, LIMIT};\n    for (final String param : queryParms) {\n      if (parameters.containsKey(param))\n        queryParameters.put(param, parameters.get(param));\n    }\n    if (parameters.get(CONCEPT_FIELDS) != null) {\n      final RequestedFields fields = (RequestedFields) parameters.get(CONCEPT_FIELDS);\n      if (fields != null && !fields.isEmpty())\n        queryParameters.put(CONCEPT_FIELDS, toJson(fields.getFields()));\n    }\n    final JsonObject contentJson = new JsonObject();\n    final JsonArray conceptsJson = new JsonArray();\n    for (final Concept concept : concepts) {\n      conceptsJson.add(new JsonPrimitive(concept.getId()));\n    }\n    contentJson.add(CONCEPTS, conceptsJson);\n    queryParameters.put(CONCEPTS, conceptsJson.toString());\n    return executeRequest(API_VERSION + graphId + RELATED_CONCEPTS_PATH, queryParameters,\n        Concepts.class);\n  }",
            "/**\n * Searches for graph concepts by using partial matches.\n *\n * @param graph the graph\n * @param concepts the concepts\n * @param parameters The parameters to be used in the service call, graph and concepts are\n *        required.\n *        <ul>\n *        <li>RequestedFields concept_fields - Additional fields to be included in the concept\n *        objects.<br>\n *        <li>Integer level - A number in the range 0 - 3 that represents the level of popularity\n *        of related concepts.<br>\n *        <li>Integer limit - The maximum number of concepts to be returned.<br>\n *        </ul>\n * @return {@link Concepts}\n */\n"
        ],
        "test_db": [
            5636538,
            "watson-developer-cloud/java-sdk",
            "/data/local_comment_repos/watson-developer-cloud@java-sdk",
            "610207580bee3c9f7ab585307f660110bf5eabb4",
            "da3cb60b8b13cc2e7d9b4697126286e9b5965af7",
            "src/test/java/com/ibm/watson/developer_cloud/concept_insights/v2/ConceptInsightsIT.java",
            "7a64e579fe6e0cdd88c25aac84e7038d48e92d09",
            "src/test/java/com/ibm/watson/developer_cloud/concept_insights/v2/ConceptInsightsIT.java",
            "@Test\n  public void testGetGraphRelatedConcepts() {\n    final Map<String, Object> params = new HashMap<String, Object>();\n    final List<Concept> concepts = new ArrayList<Concept>();\n    concepts.add(EXAMPLE_CONCEPT);\n    params.put(ConceptInsights.LIMIT, 10);\n    params.put(ConceptInsights.LEVEL, 1);\n    final RequestedFields fs = new RequestedFields();\n    fs.include(\"abstract\");\n    params.put(\"concept_fields\", fs);\n    final Concepts conceptResults =\n        service.getGraphRelatedConcepts(Graph.WIKIPEDIA, concepts, params);\n    Assert.assertNotNull(conceptResults);\n  }",
            "/**\n * Test get graph related concepts.\n */\n",
            "@Test\n  public void testGetGraphRelatedConcepts() {\n    final Map<String, Object> params = new HashMap<String, Object>();\n    final List<Concept> concepts = new ArrayList<Concept>();\n    concepts.add(EXAMPLE_CONCEPT);\n    params.put(ConceptInsights.LIMIT, 10);\n    params.put(ConceptInsights.LEVEL, 1);\n    final RequestedFields fs = new RequestedFields();\n    fs.include(\"abstract\");\n    fs.include(\"link\");\n    fs.include(\"name\");\n    params.put(ConceptInsights.CONCEPT_FIELDS, fs);\n    Concepts conceptResults = service.getGraphRelatedConcepts(Graph.WIKIPEDIA, concepts, params);\n    Assert.assertNotNull(conceptResults);\n    Assert.assertTrue(!conceptResults.getConcepts().isEmpty());\n    Assert.assertNotNull(conceptResults.getConcepts().get(0).getConcept().getAbstract());\n\n\n  }",
            "/**\n * Test get graph related concepts.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Concepts",
                "Concepts",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Related",
                "Related",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Concepts",
                "Concepts",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Concept",
                "Concept",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ID",
                "ID",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helper",
                "Helper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Account",
                "Account",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Validate",
                "Validate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                "can",
                "can",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                "empty",
                "empty",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameters",
                "Parameters",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parms",
                "Parms",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LEVEL",
                "LEVEL",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "LIMIT",
                "LIMIT",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parms",
                "Parms",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameters",
                "Parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONCEPT",
                "CONCEPT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FIELDS",
                "FIELDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Requested",
                "Requested",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "fields",
                "fields",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Requested",
                "Requested",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "parameters",
                "parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONCEPT",
                "CONCEPT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FIELDS",
                "FIELDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fields",
                "fields",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "fields",
                "fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameters",
                "Parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONCEPT",
                "CONCEPT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FIELDS",
                "FIELDS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "",
                "to",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "fields",
                "Json",
                "replace"
            ],
            [
                ".",
                "(",
                "replace"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "String",
                "fields",
                "replace"
            ],
            [
                "(",
                ".",
                "replace"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Fields",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "content",
                "content",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Concept",
                "Concept",
                "equal"
            ],
            [
                "concept",
                "concept",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Primitive",
                "Primitive",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "concept",
                "concept",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "content",
                "content",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONCEPTS",
                "CONCEPTS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameters",
                "Parameters",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONCEPTS",
                "CONCEPTS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "concepts",
                "concepts",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Json",
                "Json",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "execute",
                "execute",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "API",
                "API",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "VERSION",
                "VERSION",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "graph",
                "graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "RELATED",
                "RELATED",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "CONCEPTS",
                "CONCEPTS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "PATH",
                "PATH",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameters",
                "Parameters",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Concepts",
                "Concepts",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public Session renewSessionId(String oldId, String newId)throws Exception { if(StringUtil.isBlank(oldId))throw new IllegalArgumentException(\"Old session id is null\"); if(StringUtil.isBlank(newId))throw new IllegalArgumentException(\"New session id is null\"); Session session = get(oldId); if(session == null)return null; try(Lock lock = session.lock()) { session.checkValidForWrite(); session.getSessionData().setId(newId); session.getSessionData().setLastSaved(0); session.getSessionData().setDirty(true); doPutIfAbsent(newId, session); doDelete(oldId); if(_sessionDataStore != null) { _sessionDataStore.delete(oldId); _sessionDataStore.store(newId, session.getSessionData()); } if(LOG.isDebugEnabled())LOG.debug(\"Session id {} swapped for new id {}\", oldId, newId); return session; } } ",
        "focal_tgt": "protected void renewSessionId(Session session, String newId, String newExtendedId)throws Exception { if(session == null)return; try(Lock lock = session.lock()) { String oldId = session.getId(); session.checkValidForWrite(); session.getSessionData().setId(newId); session.getSessionData().setLastSaved(0); session.getSessionData().setDirty(true); session.setExtendedId(newExtendedId); session.setIdChanged(true); doPutIfAbsent(newId, session); doDelete(oldId); if(_sessionDataStore != null) { _sessionDataStore.delete(oldId); _sessionDataStore.store(newId, session.getSessionData()); } if(LOG.isDebugEnabled())LOG.debug(\"Session id {} swapped for new id {}\", oldId, newId); } } ",
        "test_src": "@Test public void testRenewSessionId()throws Exception { Server server = new Server(); ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS); context.setContextPath(\"/test\"); context.setServer(server); DefaultSessionCacheFactory cacheFactory = new DefaultSessionCacheFactory(); cacheFactory.setEvictionPolicy(SessionCache.NEVER_EVICT); DefaultSessionCache cache = (DefaultSessionCache)cacheFactory.getSessionCache(context.getSessionHandler()); TestSessionDataStore store = new TestSessionDataStore(true); cache.setSessionDataStore(store); context.getSessionHandler().setSessionCache(cache); context.start(); long now = System.currentTimeMillis(); SessionData data = store.newSessionData(\"1234\", now - 20, now - 10, now - 20, TimeUnit.MINUTES.toMillis(10)); Session session = cache.newSession(data); cache.put(\"1234\", session); assertTrue(cache.contains(\"1234\")); cache.renewSessionId(\"1234\", \"5678\"); assertTrue(cache.contains(\"5678\")); assertFalse(cache.contains(\"1234\")); assertTrue(store.exists(\"5678\")); assertFalse(store.exists(\"1234\")); } ",
        "test_tgt": "@Test public void testRenewSessionId()throws Exception { Server server = new Server(); ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS); context.setContextPath(\"/test\"); context.setServer(server); DefaultSessionCacheFactory cacheFactory = new DefaultSessionCacheFactory(); cacheFactory.setEvictionPolicy(SessionCache.NEVER_EVICT); DefaultSessionCache cache = (DefaultSessionCache)cacheFactory.getSessionCache(context.getSessionHandler()); TestSessionDataStore store = new TestSessionDataStore(true); cache.setSessionDataStore(store); context.getSessionHandler().setSessionCache(cache); context.start(); long now = System.currentTimeMillis(); SessionData data = store.newSessionData(\"1234\", now - 20, now - 10, now - 20, TimeUnit.MINUTES.toMillis(10)); Session session = cache.newSession(data); cache.put(\"1234\", session); assertTrue(cache.contains(\"1234\")); cache.renewSessionId(\"1234\", \"5678\", \"1234.foo\", \"5678.foo\"); assertTrue(cache.contains(\"5678\")); assertFalse(cache.contains(\"1234\")); assertTrue(store.exists(\"5678\")); assertFalse(store.exists(\"1234\")); } ",
        "label": 1,
        "focal_db": [
            4863056,
            "eclipse/jetty.project",
            "/data/local_comment_repos/eclipse@jetty.project",
            "4e672c6b27eeecbb7e1152453d1364ad948b51cf",
            "c7c49a63bd0a0114e853e850f058eb222133478e",
            "jetty-server/src/main/java/org/eclipse/jetty/server/session/AbstractSessionCache.java",
            "1f22ba2e2c44dde278bc2c6fc6f7898704b07d8e",
            "jetty-server/src/main/java/org/eclipse/jetty/server/session/AbstractSessionCache.java",
            "@Override\n    public Session renewSessionId (String oldId, String newId)\n    throws Exception\n    {\n        if (StringUtil.isBlank(oldId))\n            throw new IllegalArgumentException (\"Old session id is null\");\n        if (StringUtil.isBlank(newId))\n            throw new IllegalArgumentException (\"New session id is null\");\n\n        Session session = get(oldId);\n        if (session == null)\n            return null;\n\n        try (Lock lock = session.lock())\n        {\n            session.checkValidForWrite(); //can't change id on invalid session\n            session.getSessionData().setId(newId);\n            session.getSessionData().setLastSaved(0); //pretend that the session has never been saved before to get a full save\n            session.getSessionData().setDirty(true);  //ensure we will try to write the session out\n            doPutIfAbsent(newId, session); //put the new id into our map\n            doDelete (oldId); //take old out of map\n            if (_sessionDataStore != null)\n            {\n                _sessionDataStore.delete(oldId);  //delete the session data with the old id\n                _sessionDataStore.store(newId, session.getSessionData()); //save the session data with the new id\n            }\n            if (LOG.isDebugEnabled())\n                LOG.debug (\"Session id {} swapped for new id {}\", oldId, newId);\n            return session;\n        }\n    }",
            "/**\n * @see org.eclipse.jetty.server.session.SessionCache#renewSessionId(java.lang.String, java.lang.String)\n */\n",
            "protected void renewSessionId (Session session, String newId, String newExtendedId)\n    throws Exception\n    {\n        if (session == null)\n            return;\n        \n        try (Lock lock = session.lock())\n        {\n            String oldId = session.getId();\n            session.checkValidForWrite(); //can't change id on invalid session\n            session.getSessionData().setId(newId);\n            session.getSessionData().setLastSaved(0); //pretend that the session has never been saved before to get a full save\n            session.getSessionData().setDirty(true);  //ensure we will try to write the session out    \n            session.setExtendedId(newExtendedId); //remember the new extended id\n            session.setIdChanged(true); //session id changed\n            \n            doPutIfAbsent(newId, session); //put the new id into our map\n            doDelete (oldId); //take old out of map\n            \n            if (_sessionDataStore != null)\n            {\n                _sessionDataStore.delete(oldId);  //delete the session data with the old id\n                _sessionDataStore.store(newId, session.getSessionData()); //save the session data with the new id\n            }\n            if (LOG.isDebugEnabled())\n                LOG.debug (\"Session id {} swapped for new id {}\", oldId, newId);\n        }\n    }",
            "/**\n * Swap the id on a session.\n *\n * @param session the session for which to do the swap\n * @param newId the new id\n * @param newExtendedId the full id plus node id\n *\n * @throws Exception if there was a failure saving the change\n */\n"
        ],
        "test_db": [
            4863064,
            "eclipse/jetty.project",
            "/data/local_comment_repos/eclipse@jetty.project",
            "4e672c6b27eeecbb7e1152453d1364ad948b51cf",
            "a3436e56a982c03a8d773c67052b99698f7a9416",
            "tests/test-sessions/test-sessions-common/src/test/java/org/eclipse/jetty/server/session/DefaultSessionCacheTest.java",
            "9cb25844567a05df856f840f6abcc9dd490e6041",
            "tests/test-sessions/test-sessions-common/src/test/java/org/eclipse/jetty/server/session/DefaultSessionCacheTest.java",
            "@Test\n   public void testRenewSessionId()\n           throws Exception\n   {\n       Server server = new Server();\n\n       ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);       \n       context.setContextPath(\"/test\");\n       context.setServer(server);\n       \n       DefaultSessionCacheFactory cacheFactory = new DefaultSessionCacheFactory();\n       cacheFactory.setEvictionPolicy(SessionCache.NEVER_EVICT);\n       DefaultSessionCache cache = (DefaultSessionCache)cacheFactory.getSessionCache(context.getSessionHandler());\n       \n       TestSessionDataStore store = new TestSessionDataStore(true);//fake passivation\n       cache.setSessionDataStore(store);       \n       context.getSessionHandler().setSessionCache(cache);\n       \n       context.start();\n       \n       //put a session in the cache and store\n       long now = System.currentTimeMillis();\n       SessionData data = store.newSessionData(\"1234\", now-20, now-10, now-20, TimeUnit.MINUTES.toMillis(10));\n       Session session = cache.newSession(data);\n       cache.put(\"1234\", session);\n       assertTrue(cache.contains(\"1234\"));\n\n       cache.renewSessionId(\"1234\", \"5678\");\n       \n       assertTrue(cache.contains(\"5678\"));\n       assertFalse(cache.contains(\"1234\"));\n       \n       assertTrue(store.exists(\"5678\"));\n       assertFalse(store.exists(\"1234\"));\n   }",
            "/**\n * Test that a session id can be renewed.\n *\n * @throws Exception\n */\n",
            "@Test\n   public void testRenewSessionId()\n           throws Exception\n   {\n       Server server = new Server();\n\n       ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);       \n       context.setContextPath(\"/test\");\n       context.setServer(server);\n       \n       DefaultSessionCacheFactory cacheFactory = new DefaultSessionCacheFactory();\n       cacheFactory.setEvictionPolicy(SessionCache.NEVER_EVICT);\n       DefaultSessionCache cache = (DefaultSessionCache)cacheFactory.getSessionCache(context.getSessionHandler());\n       \n       TestSessionDataStore store = new TestSessionDataStore(true);//fake passivation\n       cache.setSessionDataStore(store);       \n       context.getSessionHandler().setSessionCache(cache);\n       \n       context.start();\n       \n       //put a session in the cache and store\n       long now = System.currentTimeMillis();\n       SessionData data = store.newSessionData(\"1234\", now-20, now-10, now-20, TimeUnit.MINUTES.toMillis(10));\n       Session session = cache.newSession(data);\n       cache.put(\"1234\", session);\n       assertTrue(cache.contains(\"1234\"));\n\n       cache.renewSessionId(\"1234\", \"5678\", \"1234.foo\", \"5678.foo\");\n       \n       assertTrue(cache.contains(\"5678\"));\n       assertFalse(cache.contains(\"1234\"));\n       \n       assertTrue(store.exists(\"5678\"));\n       assertFalse(store.exists(\"1234\"));\n   }",
            "/**\n * Test that a session id can be renewed.\n *\n * @throws Exception\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "",
                "delete"
            ],
            [
                "Override",
                "",
                "delete"
            ],
            [
                "public",
                "protected",
                "replace"
            ],
            [
                "Session",
                "void",
                "replace"
            ],
            [
                "renew",
                "renew",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "Session",
                "replace"
            ],
            [
                "old",
                "session",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Extended",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Util",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Blank",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "old",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Illegal",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Argument",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Old",
                "",
                "delete"
            ],
            [
                "session",
                "",
                "delete"
            ],
            [
                "id",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Util",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Blank",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Illegal",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Argument",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "New",
                "",
                "delete"
            ],
            [
                "session",
                "",
                "delete"
            ],
            [
                "id",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "Session",
                "",
                "delete"
            ],
            [
                "session",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "old",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Lock",
                "Lock",
                "equal"
            ],
            [
                "lock",
                "lock",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lock",
                "lock",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "String",
                "insert"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "session",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Valid",
                "Valid",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "For",
                "For",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Write",
                "Write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Last",
                "Last",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Saved",
                "Saved",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dirty",
                "Dirty",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "session",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "set",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Extended",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Extended",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "session",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "set",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Changed",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "do",
                "do",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Put",
                "Put",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "If",
                "If",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Absent",
                "Absent",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "do",
                "do",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Delete",
                "Delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Store",
                "Store",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "store",
                "store",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "session",
                "session",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Debug",
                "Debug",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enabled",
                "Enabled",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Session",
                "Session",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "swapped",
                "swapped",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "session",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void addMissingPartition(PartitionWrapper partition, String actionId)throws MetadataServiceException { String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName()); Map < String, PartitionsGroup > tablePartitionsMap; String tableName = partition.getTableName(); try { if(hcatInstanceMap.containsKey(prefix)) { tablePartitionsMap = hcatInstanceMap.get(prefix); if(tablePartitionsMap.containsKey(tableName)) { addPartitionEntry(tablePartitionsMap, tableName, partition, actionId); } else { tablePartitionsMap = new ConcurrentHashMap < String, PartitionsGroup > (); _createPartitionMapForTable(tablePartitionsMap, tableName, partition, actionId); } } else { _addNewEntry(hcatInstanceMap, prefix, tableName, partition, actionId); } _registerMessageReceiver(_getTopic(partition)); } catch(ClassCastException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(NullPointerException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(IllegalArgumentException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(Exception e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } } ",
        "focal_tgt": "public void addMissingPartition(PartitionWrapper partition, String actionId)throws MetadataServiceException { String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName()); Map < String, PartitionsGroup > tablePartitionsMap; String tableName = partition.getTableName(); try { if(hcatInstanceMap.containsKey(prefix)) { tablePartitionsMap = hcatInstanceMap.get(prefix); if(tablePartitionsMap.containsKey(tableName)) { addPartitionEntry(tablePartitionsMap, tableName, partition, actionId); } else { tablePartitionsMap = new ConcurrentHashMap < String, PartitionsGroup > (); _createPartitionMapForTable(tablePartitionsMap, tableName, partition, actionId); } } else { _addNewEntry(hcatInstanceMap, prefix, tableName, partition, actionId); } _registerMessageReceiver(partition); } catch(ClassCastException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(NullPointerException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(IllegalArgumentException e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } catch(Exception e) { throw new MetadataServiceException(ErrorCode.E1501, e.getCause()); } } ",
        "test_src": "@Test public void testAddMissingPartition()throws MetadataServiceException, URISyntaxException { Services services = Services.get(); PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class); String newHCatDependency = \"hcat://hcat.yahoo.com:5080/mydb/clicks/?datastamp=12&region=us\"; String actionId = \"myAction\"; pdms.addMissingPartition(newHCatDependency, actionId); HCatURI hcatUri = new HCatURI(newHCatDependency); Map < String, PartitionsGroup > tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" + hcatUri.getDb()); assertNotNull(tablePartitionsMap); assertTrue(tablePartitionsMap.containsKey(\"clicks\")); PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable()); assertNotNull(missingPartitions); assertEquals(missingPartitions.getPartitionsMap().keySet().iterator().next(), new PartitionWrapper(hcatUri)); WaitingActions actions = missingPartitions.getPartitionsMap().get(new PartitionWrapper(hcatUri)); assertNotNull(actions); assertTrue(actions.getActions().contains(actionId)); } ",
        "test_tgt": "@Test public void testAddMissingPartition()throws MetadataServiceException, URISyntaxException { Services services = Services.get(); PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class); String newHCatDependency = \"hcat://hcat.yahoo.com:5080/database/mydb/table/clicks/partition/datastamp=12,region=us\"; String actionId = \"myAction\"; pdms.addMissingPartition(newHCatDependency, actionId); HCatURI hcatUri = new HCatURI(newHCatDependency); Map < String, PartitionsGroup > tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" + hcatUri.getDb()); assertNotNull(tablePartitionsMap); assertTrue(tablePartitionsMap.containsKey(\"clicks\")); PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable()); assertNotNull(missingPartitions); assertEquals(missingPartitions.getPartitionsMap().keySet().iterator().next(), new PartitionWrapper(hcatUri)); WaitingActions actions = missingPartitions.getPartitionsMap().get(new PartitionWrapper(hcatUri)); assertNotNull(actions); assertTrue(actions.getActions().contains(actionId)); } ",
        "label": 1,
        "focal_db": [
            1245467,
            "apache/oozie",
            "/data/comment_repos/apache@oozie",
            "85d649e9a06080fefedf162d6ad5f406e0d5f2e0",
            "ccff68da03a78c6070d359df2bbdf5f39f831cc0",
            "core/src/main/java/org/apache/oozie/service/PartitionDependencyManagerService.java",
            "c9f1d7e8f9bcef64435d9bdcce99baa5ca3cf979",
            "core/src/main/java/org/apache/oozie/service/PartitionDependencyManagerService.java",
            "public void addMissingPartition(PartitionWrapper partition, String actionId) throws MetadataServiceException {\n        String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName());\n        Map<String, PartitionsGroup> tablePartitionsMap;\n        String tableName = partition.getTableName();\n        try {\n            if (hcatInstanceMap.containsKey(prefix)) {\n                tablePartitionsMap = hcatInstanceMap.get(prefix);\n                if (tablePartitionsMap.containsKey(tableName)) {\n                    addPartitionEntry(tablePartitionsMap, tableName, partition, actionId);\n                }\n                else { // new table entry\n                    tablePartitionsMap = new ConcurrentHashMap<String, PartitionsGroup>();\n                    _createPartitionMapForTable(tablePartitionsMap, tableName, partition, actionId);\n                }\n            }\n            else { // new partition from different hcat server/db\n                _addNewEntry(hcatInstanceMap, prefix, tableName, partition, actionId);\n            }\n            _registerMessageReceiver(_getTopic(partition));\n        }\n        catch (ClassCastException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (NullPointerException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (IllegalArgumentException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (Exception e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n    }",
            "/**\n * Adding missing partition entry specified by PartitionWrapper object\n *\n * @param partition\n * @param actionId\n * @throws MetadataServiceException\n */\n",
            "public void addMissingPartition(PartitionWrapper partition, String actionId) throws MetadataServiceException {\n        String prefix = PartitionWrapper.makePrefix(partition.getServerName(), partition.getDbName());\n        Map<String, PartitionsGroup> tablePartitionsMap;\n        String tableName = partition.getTableName();\n        try {\n            if (hcatInstanceMap.containsKey(prefix)) {\n                tablePartitionsMap = hcatInstanceMap.get(prefix);\n                if (tablePartitionsMap.containsKey(tableName)) {\n                    addPartitionEntry(tablePartitionsMap, tableName, partition, actionId);\n                }\n                else { // new table entry\n                    tablePartitionsMap = new ConcurrentHashMap<String, PartitionsGroup>();\n                    _createPartitionMapForTable(tablePartitionsMap, tableName, partition, actionId);\n                }\n            }\n            else { // new partition from different hcat server/db\n                _addNewEntry(hcatInstanceMap, prefix, tableName, partition, actionId);\n            }\n            _registerMessageReceiver(partition);\n        }\n        catch (ClassCastException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (NullPointerException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (IllegalArgumentException e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n        catch (Exception e) {\n            throw new MetadataServiceException(ErrorCode.E1501, e.getCause());\n        }\n    }",
            "/**\n * Adding missing partition entry specified by PartitionWrapper object\n *\n * @param partition\n * @param actionId\n * @throws MetadataServiceException\n */\n"
        ],
        "test_db": [
            1245548,
            "apache/oozie",
            "/data/comment_repos/apache@oozie",
            "85d649e9a06080fefedf162d6ad5f406e0d5f2e0",
            "addefe4579a599eb679a597e8344566bae6f043d",
            "core/src/test/java/org/apache/oozie/service/TestPartitionDependencyManagerService.java",
            "904a184338b96587732d06e8c2a2030d6e14df72",
            "core/src/test/java/org/apache/oozie/service/TestPartitionDependencyManagerService.java",
            "@Test\n    public void testAddMissingPartition() throws MetadataServiceException, URISyntaxException {\n        Services services = Services.get();\n        PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class);\n        String newHCatDependency = \"hcat://hcat.yahoo.com:5080/mydb/clicks/?datastamp=12&region=us\";\n        String actionId = \"myAction\";\n        pdms.addMissingPartition(newHCatDependency, actionId);\n\n        HCatURI hcatUri = new HCatURI(newHCatDependency);\n        Map<String, PartitionsGroup> tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" +\n                                                                            hcatUri.getDb()); // clicks\n        assertNotNull(tablePartitionsMap);\n        assertTrue(tablePartitionsMap.containsKey(\"clicks\"));\n        PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable());\n        assertNotNull(missingPartitions);\n\n        assertEquals(missingPartitions.getPartitionsMap().keySet().iterator().next(),\n                new PartitionWrapper(hcatUri)); // datastamp=12;region=us\n        WaitingActions actions = missingPartitions.getPartitionsMap().get(new PartitionWrapper(hcatUri));\n        assertNotNull(actions);\n        assertTrue(actions.getActions().contains(actionId));\n    }",
            "/**\n * Test addition of missing partition into cache\n *\n * @throws MetadataServiceException\n * @throws URISyntaxException\n */\n",
            "@Test\n    public void testAddMissingPartition() throws MetadataServiceException, URISyntaxException {\n        Services services = Services.get();\n        PartitionDependencyManagerService pdms = services.get(PartitionDependencyManagerService.class);\n        String newHCatDependency = \"hcat://hcat.yahoo.com:5080/database/mydb/table/clicks/partition/datastamp=12,region=us\";\n        String actionId = \"myAction\";\n        pdms.addMissingPartition(newHCatDependency, actionId);\n\n        HCatURI hcatUri = new HCatURI(newHCatDependency);\n        Map<String, PartitionsGroup> tablePartitionsMap = pdms.getHCatMap().get(hcatUri.getServerEndPoint() + \"#\" +\n                                                                            hcatUri.getDb()); // clicks\n        assertNotNull(tablePartitionsMap);\n        assertTrue(tablePartitionsMap.containsKey(\"clicks\"));\n        PartitionsGroup missingPartitions = tablePartitionsMap.get(hcatUri.getTable());\n        assertNotNull(missingPartitions);\n\n        assertEquals(missingPartitions.getPartitionsMap().keySet().iterator().next(),\n                new PartitionWrapper(hcatUri)); // datastamp=12;region=us\n        WaitingActions actions = missingPartitions.getPartitionsMap().get(new PartitionWrapper(hcatUri));\n        assertNotNull(actions);\n        assertTrue(actions.getActions().contains(actionId));\n    }",
            "/**\n * Test addition of missing partition into cache\n *\n * @throws MetadataServiceException\n * @throws URISyntaxException\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Missing",
                "Missing",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Wrapper",
                "Wrapper",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "action",
                "action",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Metadata",
                "Metadata",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Wrapper",
                "Wrapper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "make",
                "make",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Prefix",
                "Prefix",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Server",
                "Server",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Db",
                "Db",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Table",
                "Table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hcat",
                "hcat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "hcat",
                "hcat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "action",
                "action",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Concurrent",
                "Concurrent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "For",
                "For",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Table",
                "Table",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partitions",
                "Partitions",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "action",
                "action",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "New",
                "New",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hcat",
                "hcat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "prefix",
                "prefix",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "table",
                "table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "partition",
                "partition",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "action",
                "action",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "register",
                "register",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Message",
                "Message",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Receiver",
                "Receiver",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Topic",
                "partition",
                "replace"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "partition",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Class",
                "Class",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cast",
                "Cast",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Metadata",
                "Metadata",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "E1501",
                "E1501",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cause",
                "Cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pointer",
                "Pointer",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Metadata",
                "Metadata",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "E1501",
                "E1501",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cause",
                "Cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Metadata",
                "Metadata",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "E1501",
                "E1501",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cause",
                "Cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Metadata",
                "Metadata",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Error",
                "Error",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "E1501",
                "E1501",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cause",
                "Cause",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void updateStream(final String scopeName, final String streamName, final UpdateStreamRequest updateStreamRequest, final SecurityContext securityContext, final AsyncResponse asyncResponse) { long traceId = LoggerHelpers.traceEnter(log, \"updateStream\"); try { authenticateAuthorize(scopeName + \"/\" + streamName, READ_UPDATE); } catch(AuthException e) { log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName); asyncResponse.resume(Response.status(Status.fromStatusCode(e.getResponseCode())).build()); LoggerHelpers.traceLeave(log, \"Update stream\", traceId); return; } StreamConfiguration streamConfiguration = ModelHelper.getUpdateStreamConfig(updateStreamRequest, scopeName, streamName); controllerService.updateStream(streamConfiguration).thenApply(streamStatus -> { if(streamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) { log.info(\"Successfully updated stream config for: {}/{}\", scopeName, streamName); return Response.status(Status.OK).entity(ModelHelper.encodeStreamResponse(streamConfiguration)).build(); } else if(streamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND || streamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND) { log.warn(\"Stream: {}/{} not found\", scopeName, streamName); return Response.status(Status.NOT_FOUND).build(); } else { log.warn(\"updateStream failed for {}/{}\", scopeName, streamName); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); } }).exceptionally(exception -> { log.warn(\"updateStream for {}/{} failed with exception: {}\", scopeName, streamName, exception); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); }).thenApply(asyncResponse :: resume).thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStream\", traceId)); } ",
        "focal_tgt": "@Override public void updateStream(final String scopeName, final String streamName, final UpdateStreamRequest updateStreamRequest, final SecurityContext securityContext, final AsyncResponse asyncResponse) { long traceId = LoggerHelpers.traceEnter(log, \"updateStream\"); try { authenticateAuthorize(scopeName + \"/\" + streamName, READ_UPDATE); } catch(AuthException e) { log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName); asyncResponse.resume(Response.status(Status.fromStatusCode(e.getResponseCode())).build()); LoggerHelpers.traceLeave(log, \"Update stream\", traceId); return; } StreamConfiguration streamConfiguration = ModelHelper.getUpdateStreamConfig(updateStreamRequest); controllerService.updateStream(scopeName, streamName, streamConfiguration).thenApply(streamStatus -> { if(streamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) { log.info(\"Successfully updated stream config for: {}/{}\", scopeName, streamName); return Response.status(Status.OK).entity(ModelHelper.encodeStreamResponse(scopeName, streamName, streamConfiguration)).build(); } else if(streamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND || streamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND) { log.warn(\"Stream: {}/{} not found\", scopeName, streamName); return Response.status(Status.NOT_FOUND).build(); } else { log.warn(\"updateStream failed for {}/{}\", scopeName, streamName); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); } }).exceptionally(exception -> { log.warn(\"updateStream for {}/{} failed with exception: {}\", scopeName, streamName, exception); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); }).thenApply(asyncResponse :: resume).thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStream\", traceId)); } ",
        "test_src": "@Test public void testUpdateStream()throws ExecutionException, InterruptedException { String resourceURI = getURI() + \"v1/scopes/\" + scope1 + \"/streams/\" + stream1; when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus); Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 200, response.getStatus()); StreamProperty streamResponseActual = response.readEntity(StreamProperty.class); testExpectedVsActualObject(streamResponseExpected, streamResponseActual); response.close(); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(createStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 200, response.getStatus()); streamResponseActual = response.readEntity(StreamProperty.class); testExpectedVsActualObject(streamResponseExpected, streamResponseActual); response.close(); when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus2); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest2)).invoke(); assertEquals(\"Update Stream Status\", 404, response.getStatus()); response.close(); when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus3); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest3)).invoke(); assertEquals(\"Update Stream Status\", 500, response.getStatus()); response.close(); when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus4); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 404, response.getStatus()); response.close(); } ",
        "test_tgt": "@Test public void testUpdateStream()throws ExecutionException, InterruptedException { String resourceURI = getURI() + \"v1/scopes/\" + scope1 + \"/streams/\" + stream1; when(mockControllerService.updateStream(any(), any(), any())).thenReturn(updateStreamStatus); Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 200, response.getStatus()); StreamProperty streamResponseActual = response.readEntity(StreamProperty.class); testExpectedVsActualObject(streamResponseExpected, streamResponseActual); response.close(); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(createStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 200, response.getStatus()); streamResponseActual = response.readEntity(StreamProperty.class); testExpectedVsActualObject(streamResponseExpected, streamResponseActual); response.close(); when(mockControllerService.updateStream(any(), any(), any())).thenReturn(updateStreamStatus2); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest2)).invoke(); assertEquals(\"Update Stream Status\", 404, response.getStatus()); response.close(); when(mockControllerService.updateStream(any(), any(), any())).thenReturn(updateStreamStatus3); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest3)).invoke(); assertEquals(\"Update Stream Status\", 500, response.getStatus()); response.close(); when(mockControllerService.updateStream(any(), any(), any())).thenReturn(updateStreamStatus4); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke(); assertEquals(\"Update Stream Status\", 404, response.getStatus()); response.close(); } ",
        "label": 1,
        "focal_db": [
            3284485,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "d5918a0043b414cf362d51c7fb8d4433d2e3f209",
            "a0d5c4130eb19521c41a5b5eea5723395150eb18",
            "controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java",
            "3384378e3aa99d59c884b15c8cbf2c17c1528bb1",
            "controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java",
            "@Override\n    public void updateStream(final String scopeName, final String streamName,\n            final UpdateStreamRequest updateStreamRequest, final SecurityContext securityContext,\n            final AsyncResponse asyncResponse) {\n        long traceId = LoggerHelpers.traceEnter(log, \"updateStream\");\n\n        try {\n            authenticateAuthorize(scopeName + \"/\" + streamName, READ_UPDATE);\n        } catch (AuthException e) {\n            log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName);\n            asyncResponse.resume(Response.status(Status.fromStatusCode(e.getResponseCode())).build());\n            LoggerHelpers.traceLeave(log, \"Update stream\", traceId);\n            return;\n        }\n\n        StreamConfiguration streamConfiguration = ModelHelper.getUpdateStreamConfig(\n                updateStreamRequest, scopeName, streamName);\n        controllerService.updateStream(streamConfiguration).thenApply(streamStatus -> {\n            if (streamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) {\n                log.info(\"Successfully updated stream config for: {}/{}\", scopeName, streamName);\n                return Response.status(Status.OK)\n                         .entity(ModelHelper.encodeStreamResponse(streamConfiguration)).build();\n            } else if (streamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND ||\n                    streamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND) {\n                log.warn(\"Stream: {}/{} not found\", scopeName, streamName);\n                return Response.status(Status.NOT_FOUND).build();\n            } else {\n                log.warn(\"updateStream failed for {}/{}\", scopeName, streamName);\n                return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n            }\n        }).exceptionally(exception -> {\n            log.warn(\"updateStream for {}/{} failed with exception: {}\", scopeName, streamName, exception);\n            return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n        }).thenApply(asyncResponse::resume)\n        .thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStream\", traceId));\n    }",
            "/**\n * Implementation of updateStream REST API.\n *\n * @param scopeName           The scope name of stream.\n * @param streamName          The name of stream.\n * @param updateStreamRequest The object conforming to updateStreamConfig request json.\n * @param securityContext     The security for API access.\n * @param asyncResponse       AsyncResponse provides means for asynchronous server side response processing.\n */\n",
            "@Override\n    public void updateStream(final String scopeName, final String streamName,\n            final UpdateStreamRequest updateStreamRequest, final SecurityContext securityContext,\n            final AsyncResponse asyncResponse) {\n        long traceId = LoggerHelpers.traceEnter(log, \"updateStream\");\n\n        try {\n            authenticateAuthorize(scopeName + \"/\" + streamName, READ_UPDATE);\n        } catch (AuthException e) {\n            log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName);\n            asyncResponse.resume(Response.status(Status.fromStatusCode(e.getResponseCode())).build());\n            LoggerHelpers.traceLeave(log, \"Update stream\", traceId);\n            return;\n        }\n\n        StreamConfiguration streamConfiguration = ModelHelper.getUpdateStreamConfig(\n                updateStreamRequest);\n        controllerService.updateStream(scopeName, streamName, streamConfiguration).thenApply(streamStatus -> {\n            if (streamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) {\n                log.info(\"Successfully updated stream config for: {}/{}\", scopeName, streamName);\n                return Response.status(Status.OK)\n                         .entity(ModelHelper.encodeStreamResponse(scopeName, streamName, streamConfiguration)).build();\n            } else if (streamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND ||\n                    streamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND) {\n                log.warn(\"Stream: {}/{} not found\", scopeName, streamName);\n                return Response.status(Status.NOT_FOUND).build();\n            } else {\n                log.warn(\"updateStream failed for {}/{}\", scopeName, streamName);\n                return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n            }\n        }).exceptionally(exception -> {\n            log.warn(\"updateStream for {}/{} failed with exception: {}\", scopeName, streamName, exception);\n            return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n        }).thenApply(asyncResponse::resume)\n        .thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStream\", traceId));\n    }",
            "/**\n * Implementation of updateStream REST API.\n *\n * @param scopeName           The scope name of stream.\n * @param streamName          The name of stream.\n * @param updateStreamRequest The object conforming to updateStreamConfig request json.\n * @param securityContext     The security for API access.\n * @param asyncResponse       AsyncResponse provides means for asynchronous server side response processing.\n */\n"
        ],
        "test_db": [
            3284212,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "3a2db831550ad46227bde450d1de27bdbaa49cab",
            "e62c6e459a64000a809093fdab37448745cc3e21",
            "controller/src/test/java/io/pravega/controller/rest/v1/StreamMetaDataTests.java",
            "deb7d7053fa3f8b8adb3b98f07fc69328df9fa0e",
            "controller/src/test/java/io/pravega/controller/rest/v1/StreamMetaDataTests.java",
            "@Test\n    public void testUpdateStream() throws ExecutionException, InterruptedException {\n        String resourceURI = getURI() + \"v1/scopes/\" + scope1 + \"/streams/\" + stream1;\n\n        // Test to update an existing stream\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus);\n        Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 200, response.getStatus());\n        StreamProperty streamResponseActual = response.readEntity(StreamProperty.class);\n        testExpectedVsActualObject(streamResponseExpected, streamResponseActual);\n        response.close();\n\n        // Test sending extra fields in the request object to check if json parser can handle it.\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(createStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 200, response.getStatus());\n        streamResponseActual = response.readEntity(StreamProperty.class);\n        testExpectedVsActualObject(streamResponseExpected, streamResponseActual);\n        response.close();\n\n        // Test to update an non-existing stream\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus2);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest2)).invoke();\n        assertEquals(\"Update Stream Status\", 404, response.getStatus());\n        response.close();\n\n        // Test for validation of request object\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus3);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest3)).invoke();\n        // TODO: Server should be returning 400 here, change this once issue\n        // https://github.com/pravega/pravega/issues/531 is fixed.\n        assertEquals(\"Update Stream Status\", 500, response.getStatus());\n        response.close();\n\n        // Test to update stream for non-existent scope\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus4);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 404, response.getStatus());\n        response.close();\n    }",
            "/**\n * Test for updateStreamConfig REST API\n *\n * @throws ExecutionException\n * @throws InterruptedException\n */\n",
            "@Test\n    public void testUpdateStream() throws ExecutionException, InterruptedException {\n        String resourceURI = getURI() + \"v1/scopes/\" + scope1 + \"/streams/\" + stream1;\n\n        // Test to update an existing stream\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus);\n        Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 200, response.getStatus());\n        StreamProperty streamResponseActual = response.readEntity(StreamProperty.class);\n        testExpectedVsActualObject(streamResponseExpected, streamResponseActual);\n        response.close();\n\n        // Test sending extra fields in the request object to check if json parser can handle it.\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(createStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 200, response.getStatus());\n        streamResponseActual = response.readEntity(StreamProperty.class);\n        testExpectedVsActualObject(streamResponseExpected, streamResponseActual);\n        response.close();\n\n        // Test to update an non-existing stream\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus2);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest2)).invoke();\n        assertEquals(\"Update Stream Status\", 404, response.getStatus());\n        response.close();\n\n        // Test for validation of request object\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus3);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest3)).invoke();\n        // TODO: Server should be returning 400 here, change this once issue\n        // https://github.com/pravega/pravega/issues/531 is fixed.\n        assertEquals(\"Update Stream Status\", 500, response.getStatus());\n        response.close();\n\n        // Test to update stream for non-existent scope\n        when(mockControllerService.updateStream(any())).thenReturn(updateStreamStatus4);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(updateStreamRequest)).invoke();\n        assertEquals(\"Update Stream Status\", 404, response.getStatus());\n        response.close();\n    }",
            "/**\n * Test for updateStreamConfig REST API\n *\n * @throws ExecutionException\n * @throws InterruptedException\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Security",
                "Security",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "security",
                "security",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Async",
                "Async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helpers",
                "Helpers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enter",
                "Enter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "authenticate",
                "authenticate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Authorize",
                "Authorize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "READ",
                "READ",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "UPDATE",
                "UPDATE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Auth",
                "Auth",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "due",
                "due",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "authentication",
                "authentication",
                "equal"
            ],
            [
                "failure",
                "failure",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "resume",
                "resume",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helpers",
                "Helpers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leave",
                "Leave",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Model",
                "Model",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helper",
                "Helper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "scope",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Name",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "stream",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Name",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "controller",
                "controller",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "scope",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Apply",
                "Apply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SUCCESS",
                "SUCCESS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Successfully",
                "Successfully",
                "equal"
            ],
            [
                "updated",
                "updated",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OK",
                "OK",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "entity",
                "entity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Model",
                "Model",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helper",
                "Helper",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "encode",
                "encode",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "scope",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STREAM",
                "STREAM",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SCOPE",
                "SCOPE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "INTERNAL",
                "INTERNAL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SERVER",
                "SERVER",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ERROR",
                "ERROR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "exceptionally",
                "exceptionally",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "INTERNAL",
                "INTERNAL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SERVER",
                "SERVER",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ERROR",
                "ERROR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Apply",
                "Apply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "resume",
                "resume",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Accept",
                "Accept",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helpers",
                "Helpers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leave",
                "Leave",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "private Item replace(final QueryContext ctx)throws QueryException { checkWrite(ctx); final String path = path(string(checkStr(expr[0], ctx))); final int pos = path.indexOf('/'); if(pos <= 0)NODB.thrw(input, path); final byte[]db = token(path.substring(0, pos)); final Data data = ctx.resource.data(db, input); final String src = path.substring(pos + 1); final byte[]trg = token(src); final Item doc = checkItem(expr[1], ctx); final int[]old = data.doc(src); if(old.length > 0) { final int pre = old[0]; if(old.length > 1 || ! eq(data.text(pre, true), trg))DOCTRGMULT.thrw(input); ctx.updates.add(new DeleteNode(pre, data, input), ctx); } final byte[]trgname; final byte[]trgpath; final int p = lastIndexOf(trg, '/'); if(p < 0) { trgname = trg; trgpath = null; } else { trgname = subtoken(trg, p + 1); trgpath = subtoken(trg, 0, p); } final ArrayList < Item > docs = new ArrayList < Item > (); docs.add(doc); final Add add = new Add(data, input, docs, trgname, trgpath, ctx.context); ctx.updates.add(add, ctx); return null; } ",
        "focal_tgt": "private Item replace(final QueryContext ctx)throws QueryException { checkWrite(ctx); final Data data = data(0, ctx); final byte[]trg = path(checkStr(expr[1], ctx)); final Item doc = checkItem(expr[2], ctx); final int[]old = data.doc(string(trg)); if(old.length > 0) { final int pre = old[0]; if(old.length > 1 || ! eq(data.text(pre, true), trg))DOCTRGMULT.thrw(input); ctx.updates.add(new DeleteNode(pre, data, input), ctx); } final byte[]trgname; final byte[]trgpath; final int p = lastIndexOf(trg, '/'); if(p < 0) { trgname = trg; trgpath = null; } else { trgname = subtoken(trg, p + 1); trgpath = subtoken(trg, 0, p); } final ArrayList < Item > docs = new ArrayList < Item > (1); docs.add(doc); final Add add = new Add(data, input, docs, trgname, trgpath, ctx.context); ctx.updates.add(add, ctx); return null; } ",
        "test_src": "@Test public void testReplace()throws QueryException, BaseXException { final String fun = check(Function.REPLACEDOC); new Add(\"etc/test/input.xml\", null, \"test\").execute(CONTEXT); query(fun + \"('db/test/input.xml', document { <root/> })\"); query(\"count(collection('db/test/input.xml')/html) eq 0\", \"true\"); query(\"count(collection('db/test/input.xml')/root) eq 1\", \"true\"); query(fun + \"('db/test/input.xml', 'etc/test/input.xml')\"); query(\"count(collection('db/test/input.xml')/html) eq 1\", \"true\"); query(\"count(collection('db/test/input.xml')/root) eq 0\", \"true\"); } ",
        "test_tgt": "@Test public void testReplace()throws QueryException, BaseXException { final String fun = check(Function.DBREPLACE); new Add(\"etc/test/input.xml\", null, \"test\").execute(CONTEXT); query(fun + \"('db', 'test/input.xml', document { <root/> })\"); query(\"count(collection('db/test/input.xml')/html) eq 0\", \"true\"); query(\"count(collection('db/test/input.xml')/root) eq 1\", \"true\"); query(fun + \"('db', 'test/input.xml', 'etc/test/input.xml')\"); query(\"count(collection('db/test/input.xml')/html) eq 1\", \"true\"); query(\"count(collection('db/test/input.xml')/root) eq 0\", \"true\"); } ",
        "label": 1,
        "focal_db": [
            4657336,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "2f8f98b0b89f1a4ec54dcf3edee9b30df11c70b5",
            "f08218aa82617f8a6195ef007f900180568046de",
            "src/main/java/org/basex/query/func/FNDb.java",
            "20c4c633030b4c462e8d96258ffdadc74cc20a11",
            "src/main/java/org/basex/query/func/FNDb.java",
            "private Item replace(final QueryContext ctx) throws QueryException {\r\n    checkWrite(ctx);\r\n\r\n    final String path = path(string(checkStr(expr[0], ctx)));\r\n\r\n    // the first step of the path should be the database name\r\n    final int pos = path.indexOf('/');\r\n    if(pos <= 0) NODB.thrw(input, path);\r\n    final byte[] db = token(path.substring(0, pos));\r\n    final Data data = ctx.resource.data(db, input);\r\n\r\n    // replace: source and target path are the same\r\n    final String src = path.substring(pos + 1);\r\n    final byte[] trg = token(src);\r\n\r\n    final Item doc = checkItem(expr[1], ctx);\r\n\r\n    // collect all old documents\r\n    final int[] old = data.doc(src);\r\n    if(old.length > 0) {\r\n      final int pre = old[0];\r\n      if(old.length > 1 || !eq(data.text(pre, true), trg))\r\n        DOCTRGMULT.thrw(input);\r\n      ctx.updates.add(new DeleteNode(pre, data, input), ctx);\r\n    }\r\n\r\n    final byte[] trgname;\r\n    final byte[] trgpath;\r\n    final int p = lastIndexOf(trg, '/');\r\n    if(p < 0) {\r\n      trgname = trg;\r\n      trgpath = null;\r\n    } else {\r\n      trgname = subtoken(trg, p + 1);\r\n      trgpath = subtoken(trg, 0, p);\r\n    }\r\n\r\n    final ArrayList<Item> docs = new ArrayList<Item>(); docs.add(doc);\r\n    final Add add = new Add(data, input, docs, trgname, trgpath, ctx.context);\r\n    ctx.updates.add(add, ctx);\r\n\r\n    return null;\r\n  }",
            "/**\n * Performs the replace function.\n * @param ctx query context\n * @return {@code null}\n * @throws QueryException query exception\n */\n",
            "private Item replace(final QueryContext ctx) throws QueryException {\r\n    checkWrite(ctx);\r\n\r\n    final Data data = data(0, ctx);\r\n    final byte[] trg = path(checkStr(expr[1], ctx));\r\n    final Item doc = checkItem(expr[2], ctx);\r\n\r\n    // collect all old documents\r\n    final int[] old = data.doc(string(trg));\r\n    if(old.length > 0) {\r\n      final int pre = old[0];\r\n      if(old.length > 1 || !eq(data.text(pre, true), trg))\r\n        DOCTRGMULT.thrw(input);\r\n      ctx.updates.add(new DeleteNode(pre, data, input), ctx);\r\n    }\r\n\r\n    final byte[] trgname;\r\n    final byte[] trgpath;\r\n    final int p = lastIndexOf(trg, '/');\r\n    if(p < 0) {\r\n      trgname = trg;\r\n      trgpath = null;\r\n    } else {\r\n      trgname = subtoken(trg, p + 1);\r\n      trgpath = subtoken(trg, 0, p);\r\n    }\r\n\r\n    final ArrayList<Item> docs = new ArrayList<Item>(1);\r\n    docs.add(doc);\r\n    final Add add = new Add(data, input, docs, trgname, trgpath, ctx.context);\r\n    ctx.updates.add(add, ctx);\r\n\r\n    return null;\r\n  }",
            "/**\n * Performs the replace function.\n * @param ctx query context\n * @return {@code null}\n * @throws QueryException query exception\n */\n"
        ],
        "test_db": [
            4657354,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "2f8f98b0b89f1a4ec54dcf3edee9b30df11c70b5",
            "41ed65c67d6fa5c4c2eab77ec0195184d03f41c4",
            "src/test/java/org/basex/test/query/advanced/FNDbTest.java",
            "a74c2697d3c7ea3faaff33676ae6f15096658549",
            "src/test/java/org/basex/test/query/advanced/FNDbTest.java",
            "@Test\r\n  public void testReplace() throws QueryException, BaseXException {\r\n    final String fun = check(Function.REPLACEDOC);\r\n\r\n    new Add(\"etc/test/input.xml\", null, \"test\").execute(CONTEXT);\r\n\r\n    query(fun + \"('db/test/input.xml', document { <root/> })\");\r\n    query(\"count(collection('db/test/input.xml')/html) eq 0\", \"true\");\r\n    query(\"count(collection('db/test/input.xml')/root) eq 1\", \"true\");\r\n\r\n    query(fun + \"('db/test/input.xml', 'etc/test/input.xml')\");\r\n    query(\"count(collection('db/test/input.xml')/html) eq 1\", \"true\");\r\n    query(\"count(collection('db/test/input.xml')/root) eq 0\", \"true\");\r\n  }",
            "/**\n * Test method for the db:replace() function.\n * @throws QueryException query exception\n * @throws BaseXException database exception\n */\n",
            "@Test\r\n  public void testReplace() throws QueryException, BaseXException {\r\n    final String fun = check(Function.DBREPLACE);\r\n\r\n    new Add(\"etc/test/input.xml\", null, \"test\").execute(CONTEXT);\r\n\r\n    query(fun + \"('db', 'test/input.xml', document { <root/> })\");\r\n    query(\"count(collection('db/test/input.xml')/html) eq 0\", \"true\");\r\n    query(\"count(collection('db/test/input.xml')/root) eq 1\", \"true\");\r\n\r\n    query(fun + \"('db', 'test/input.xml', 'etc/test/input.xml')\");\r\n    query(\"count(collection('db/test/input.xml')/html) eq 1\", \"true\");\r\n    query(\"count(collection('db/test/input.xml')/root) eq 0\", \"true\");\r\n  }",
            "/**\n * Test method for the db:replace() function.\n * @throws QueryException query exception\n * @throws BaseXException database exception\n */\n"
        ],
        "edit_seq": [
            [
                "private",
                "private",
                "equal"
            ],
            [
                "Item",
                "Item",
                "equal"
            ],
            [
                "replace",
                "replace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Write",
                "Write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "Data",
                "replace"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ctx",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "byte",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "trg",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "=",
                "(",
                "replace"
            ],
            [
                "",
                "check",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "path",
                "Str",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "expr",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ctx",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "Item",
                "insert"
            ],
            [
                "",
                "doc",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "check",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Item",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "expr",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "2",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ctx",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "old",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "data",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "doc",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "check",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Str",
                "trg",
                "replace"
            ],
            [
                "(",
                ")",
                "replace"
            ],
            [
                "expr",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ctx",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "pos",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "index",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Of",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "'/'",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "pos",
                "",
                "delete"
            ],
            [
                "<=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "NODB",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "thrw",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "input",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "db",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "substring",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "pos",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "ctx",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "resource",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "db",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "input",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "String",
                "",
                "delete"
            ],
            [
                "src",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "path",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "substring",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "pos",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "byte",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "trg",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "token",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "src",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "Item",
                "",
                "delete"
            ],
            [
                "doc",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "check",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Item",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "expr",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ctx",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "final",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "old",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "doc",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "src",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "pre",
                "pre",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "old",
                "old",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "eq",
                "eq",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "text",
                "text",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pre",
                "pre",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trg",
                "trg",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "DOCTRGMULT",
                "DOCTRGMULT",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "thrw",
                "thrw",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "updates",
                "updates",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Delete",
                "Delete",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pre",
                "pre",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "trgname",
                "trgname",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "trgpath",
                "trgpath",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "last",
                "last",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Index",
                "Index",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "trg",
                "trg",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "'/'",
                "'/'",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "trgname",
                "trgname",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "trg",
                "trg",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "trgpath",
                "trgpath",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "trgname",
                "trgname",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "subtoken",
                "subtoken",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "trg",
                "trg",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "trgpath",
                "trgpath",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "subtoken",
                "subtoken",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "trg",
                "trg",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "p",
                "p",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Item",
                "Item",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "docs",
                "docs",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Item",
                "Item",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "1",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "docs",
                "docs",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "doc",
                "doc",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Add",
                "Add",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Add",
                "Add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "data",
                "data",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "docs",
                "docs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trgname",
                "trgname",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trgpath",
                "trgpath",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "context",
                "context",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "updates",
                "updates",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "ctx",
                "ctx",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void freeSlot(SlotID slotId, AllocationID allocationId) { checkInit(); TaskManagerSlot slot = slots.get(slotId); if(null != slot) { if(slot.isAllocated()) { if(Objects.equals(allocationId, slot.getAllocationId())) { slot.setAllocationId(null); fulfilledSlotRequests.remove(allocationId); if(slot.isFree()) { handleFreeSlot(slot); } TaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.get(slot.getInstanceId()); if(null != taskManagerRegistration) { if(anySlotUsed(taskManagerRegistration.getSlots())) { taskManagerRegistration.markUsed(); } else { taskManagerRegistration.markIdle(); } } } else { LOG.debug(\"Received request to free slot {} with expected allocation id {}, \" + \"but actual allocation id {} differs. Ignoring the request.\", slotId, allocationId, slot.getAllocationId()); } } else { LOG.debug(\"Slot {} has not been allocated.\", allocationId); } } else { LOG.debug(\"Trying to free a slot {} which has not been registered. Ignoring this message.\", slotId); } } ",
        "focal_tgt": "public void freeSlot(SlotID slotId, AllocationID allocationId) { checkInit(); TaskManagerSlot slot = slots.get(slotId); if(null != slot) { if(slot.getState() == TaskManagerSlot.State.ALLOCATED) { if(Objects.equals(allocationId, slot.getAllocationId())) { TaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.get(slot.getInstanceId()); if(taskManagerRegistration == null) { throw new IllegalStateException(\"Trying to free a slot from a TaskManager \" + slot.getInstanceId() + \" which has not been registered.\"); } updateSlotState(slot, taskManagerRegistration, null); } else { LOG.debug(\"Received request to free slot {} with expected allocation id {}, \" + \"but actual allocation id {} differs. Ignoring the request.\", slotId, allocationId, slot.getAllocationId()); } } else { LOG.debug(\"Slot {} has not been allocated.\", allocationId); } } else { LOG.debug(\"Trying to free a slot {} which has not been registered. Ignoring this message.\", slotId); } } ",
        "test_src": "@Test public void testFreeSlot()throws Exception { final ResourceManagerId resourceManagerId = ResourceManagerId.generate(); final ResourceID resourceID = ResourceID.generate(); final JobID jobId = new JobID(); final SlotID slotId = new SlotID(resourceID, 0); final AllocationID allocationId = new AllocationID(); final ResourceProfile resourceProfile = new ResourceProfile(42.0, 1337); ResourceManagerActions resourceManagerActions = mock(ResourceManagerActions.class); final TaskExecutorGateway taskExecutorGateway = mock(TaskExecutorGateway.class); final TaskExecutorConnection taskExecutorConnection = new TaskExecutorConnection(taskExecutorGateway); final SlotStatus slotStatus = new SlotStatus(slotId, resourceProfile, jobId, allocationId); final SlotReport slotReport = new SlotReport(slotStatus); try(SlotManager slotManager = createSlotManager(resourceManagerId, resourceManagerActions)) { slotManager.registerTaskManager(taskExecutorConnection, slotReport); TaskManagerSlot slot = slotManager.getSlot(slotId); assertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId()); slotManager.freeSlot(slotId, new AllocationID()); assertTrue(slot.isAllocated()); assertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId()); slotManager.freeSlot(slotId, allocationId); assertTrue(slot.isFree()); assertNull(slot.getAllocationId()); } } ",
        "test_tgt": "@Test public void testFreeSlot()throws Exception { final ResourceManagerId resourceManagerId = ResourceManagerId.generate(); final ResourceID resourceID = ResourceID.generate(); final JobID jobId = new JobID(); final SlotID slotId = new SlotID(resourceID, 0); final AllocationID allocationId = new AllocationID(); final ResourceProfile resourceProfile = new ResourceProfile(42.0, 1337); ResourceManagerActions resourceManagerActions = mock(ResourceManagerActions.class); final TaskExecutorGateway taskExecutorGateway = mock(TaskExecutorGateway.class); final TaskExecutorConnection taskExecutorConnection = new TaskExecutorConnection(taskExecutorGateway); final SlotStatus slotStatus = new SlotStatus(slotId, resourceProfile, jobId, allocationId); final SlotReport slotReport = new SlotReport(slotStatus); try(SlotManager slotManager = createSlotManager(resourceManagerId, resourceManagerActions)) { slotManager.registerTaskManager(taskExecutorConnection, slotReport); TaskManagerSlot slot = slotManager.getSlot(slotId); assertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId()); slotManager.freeSlot(slotId, new AllocationID()); assertTrue(slot.getState() == TaskManagerSlot.State.ALLOCATED); assertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId()); slotManager.freeSlot(slotId, allocationId); assertTrue(slot.getState() == TaskManagerSlot.State.FREE); assertNull(slot.getAllocationId()); } } ",
        "label": 1,
        "focal_db": [
            626783,
            "apache/flink",
            "/data/comment_repos/apache@flink",
            "e7a2f57eec05f47c94339e03865d09943acf5aaf",
            "2b52ce559e5be659c28b467bb6e5d026636defba",
            "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/slotmanager/SlotManager.java",
            "7da1a9e710c021b10ed643a412e36b8d1a106841",
            "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/slotmanager/SlotManager.java",
            "public void freeSlot(SlotID slotId, AllocationID allocationId) {\n\t\tcheckInit();\n\n\t\tTaskManagerSlot slot = slots.get(slotId);\n\n\t\tif (null != slot) {\n\t\t\tif (slot.isAllocated()) {\n\t\t\t\tif (Objects.equals(allocationId, slot.getAllocationId())) {\n\t\t\t\t\t// free the slot\n\t\t\t\t\tslot.setAllocationId(null);\n\t\t\t\t\tfulfilledSlotRequests.remove(allocationId);\n\n\t\t\t\t\tif (slot.isFree()) {\n\t\t\t\t\t\thandleFreeSlot(slot);\n\t\t\t\t\t}\n\n\t\t\t\t\tTaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.get(slot.getInstanceId());\n\n\t\t\t\t\tif (null != taskManagerRegistration) {\n\t\t\t\t\t\tif (anySlotUsed(taskManagerRegistration.getSlots())) {\n\t\t\t\t\t\t\ttaskManagerRegistration.markUsed();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttaskManagerRegistration.markIdle();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tLOG.debug(\"Received request to free slot {} with expected allocation id {}, \" +\n\t\t\t\t\t\t\"but actual allocation id {} differs. Ignoring the request.\", slotId, allocationId, slot.getAllocationId());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.debug(\"Slot {} has not been allocated.\", allocationId);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.debug(\"Trying to free a slot {} which has not been registered. Ignoring this message.\", slotId);\n\t\t}\n\t}",
            "/**\n * Free the given slot from the given allocation. If the slot is still allocated by the given\n * allocation id, then the slot will be marked as free and will be subject to new slot requests.\n *\n * @param slotId identifying the slot to free\n * @param allocationId with which the slot is presumably allocated\n */\n",
            "public void freeSlot(SlotID slotId, AllocationID allocationId) {\n\t\tcheckInit();\n\n\t\tTaskManagerSlot slot = slots.get(slotId);\n\n\t\tif (null != slot) {\n\t\t\tif (slot.getState() == TaskManagerSlot.State.ALLOCATED) {\n\t\t\t\tif (Objects.equals(allocationId, slot.getAllocationId())) {\n\n\t\t\t\t\tTaskManagerRegistration taskManagerRegistration = taskManagerRegistrations.get(slot.getInstanceId());\n\n\t\t\t\t\tif (taskManagerRegistration == null) {\n\t\t\t\t\t\tthrow new IllegalStateException(\"Trying to free a slot from a TaskManager \" +\n\t\t\t\t\t\t\tslot.getInstanceId() + \" which has not been registered.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateSlotState(slot, taskManagerRegistration, null);\n\t\t\t\t} else {\n\t\t\t\t\tLOG.debug(\"Received request to free slot {} with expected allocation id {}, \" +\n\t\t\t\t\t\t\"but actual allocation id {} differs. Ignoring the request.\", slotId, allocationId, slot.getAllocationId());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLOG.debug(\"Slot {} has not been allocated.\", allocationId);\n\t\t\t}\n\t\t} else {\n\t\t\tLOG.debug(\"Trying to free a slot {} which has not been registered. Ignoring this message.\", slotId);\n\t\t}\n\t}",
            "/**\n * Free the given slot from the given allocation. If the slot is still allocated by the given\n * allocation id, then the slot will be marked as free and will be subject to new slot requests.\n *\n * @param slotId identifying the slot to free\n * @param allocationId with which the slot is presumably allocated\n */\n"
        ],
        "test_db": [
            626785,
            "apache/flink",
            "/data/comment_repos/apache@flink",
            "e7a2f57eec05f47c94339e03865d09943acf5aaf",
            "4728b1840de6a3430e5213a7513ba7d2821c6dbf",
            "flink-runtime/src/test/java/org/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerTest.java",
            "d642933c3e8a4df7375d98e4ceb97dc1ebf216fd",
            "flink-runtime/src/test/java/org/apache/flink/runtime/resourcemanager/slotmanager/SlotManagerTest.java",
            "@Test\n\tpublic void testFreeSlot() throws Exception {\n\t\tfinal ResourceManagerId resourceManagerId = ResourceManagerId.generate();\n\t\tfinal ResourceID resourceID = ResourceID.generate();\n\t\tfinal JobID jobId = new JobID();\n\t\tfinal SlotID slotId = new SlotID(resourceID, 0);\n\t\tfinal AllocationID allocationId = new AllocationID();\n\t\tfinal ResourceProfile resourceProfile = new ResourceProfile(42.0, 1337);\n\n\t\tResourceManagerActions resourceManagerActions = mock(ResourceManagerActions.class);\n\n\t\t// accept an incoming slot request\n\t\tfinal TaskExecutorGateway taskExecutorGateway = mock(TaskExecutorGateway.class);\n\n\t\tfinal TaskExecutorConnection taskExecutorConnection = new TaskExecutorConnection(taskExecutorGateway);\n\n\t\tfinal SlotStatus slotStatus = new SlotStatus(slotId, resourceProfile, jobId, allocationId);\n\t\tfinal SlotReport slotReport = new SlotReport(slotStatus);\n\n\t\ttry (SlotManager slotManager = createSlotManager(resourceManagerId, resourceManagerActions)) {\n\n\t\t\tslotManager.registerTaskManager(\n\t\t\t\ttaskExecutorConnection,\n\t\t\t\tslotReport);\n\n\t\t\tTaskManagerSlot slot = slotManager.getSlot(slotId);\n\n\t\t\tassertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId());\n\n\t\t\t// this should be ignored since the allocation id does not match\n\t\t\tslotManager.freeSlot(slotId, new AllocationID());\n\n\t\t\tassertTrue(slot.isAllocated());\n\t\t\tassertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId());\n\n\t\t\tslotManager.freeSlot(slotId, allocationId);\n\n\t\t\tassertTrue(slot.isFree());\n\t\t\tassertNull(slot.getAllocationId());\n\t\t}\n\t}",
            "/**\n * Tests that freeing a slot will correctly reset the slot and mark it as a free slot\n */\n",
            "@Test\n\tpublic void testFreeSlot() throws Exception {\n\t\tfinal ResourceManagerId resourceManagerId = ResourceManagerId.generate();\n\t\tfinal ResourceID resourceID = ResourceID.generate();\n\t\tfinal JobID jobId = new JobID();\n\t\tfinal SlotID slotId = new SlotID(resourceID, 0);\n\t\tfinal AllocationID allocationId = new AllocationID();\n\t\tfinal ResourceProfile resourceProfile = new ResourceProfile(42.0, 1337);\n\n\t\tResourceManagerActions resourceManagerActions = mock(ResourceManagerActions.class);\n\n\t\t// accept an incoming slot request\n\t\tfinal TaskExecutorGateway taskExecutorGateway = mock(TaskExecutorGateway.class);\n\n\t\tfinal TaskExecutorConnection taskExecutorConnection = new TaskExecutorConnection(taskExecutorGateway);\n\n\t\tfinal SlotStatus slotStatus = new SlotStatus(slotId, resourceProfile, jobId, allocationId);\n\t\tfinal SlotReport slotReport = new SlotReport(slotStatus);\n\n\t\ttry (SlotManager slotManager = createSlotManager(resourceManagerId, resourceManagerActions)) {\n\n\t\t\tslotManager.registerTaskManager(\n\t\t\t\ttaskExecutorConnection,\n\t\t\t\tslotReport);\n\n\t\t\tTaskManagerSlot slot = slotManager.getSlot(slotId);\n\n\t\t\tassertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId());\n\n\t\t\t// this should be ignored since the allocation id does not match\n\t\t\tslotManager.freeSlot(slotId, new AllocationID());\n\n\t\t\tassertTrue(slot.getState() == TaskManagerSlot.State.ALLOCATED);\n\t\t\tassertEquals(\"The slot has not been allocated to the expected allocation id.\", allocationId, slot.getAllocationId());\n\n\t\t\tslotManager.freeSlot(slotId, allocationId);\n\n\t\t\tassertTrue(slot.getState() == TaskManagerSlot.State.FREE);\n\t\t\tassertNull(slot.getAllocationId());\n\t\t}\n\t}",
            "/**\n * Tests that freeing a slot will correctly reset the slot and mark it as a free slot\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "free",
                "free",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Slot",
                "Slot",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Slot",
                "Slot",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ID",
                "ID",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Allocation",
                "Allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ID",
                "ID",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Init",
                "Init",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Task",
                "Task",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Slot",
                "Slot",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "slots",
                "slots",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "get",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Allocated",
                "State",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "",
                "Task",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Manager",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Slot",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "State",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ALLOCATED",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Allocation",
                "Allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "slot",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "set",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Allocation",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "fulfilled",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Slot",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Requests",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "remove",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "allocation",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "slot",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "is",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Free",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "handle",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Free",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Slot",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "slot",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "Task",
                "Task",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Registration",
                "Registration",
                "equal"
            ],
            [
                "task",
                "task",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Registration",
                "Registration",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "task",
                "task",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Registrations",
                "Registrations",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "task",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Manager",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Registration",
                "insert"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "!=",
                "",
                "delete"
            ],
            [
                "task",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Manager",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Registration",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Illegal",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "State",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "if",
                "Exception",
                "replace"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Trying",
                "insert"
            ],
            [
                "",
                "to",
                "insert"
            ],
            [
                "",
                "free",
                "insert"
            ],
            [
                "",
                "a",
                "insert"
            ],
            [
                "",
                "slot",
                "insert"
            ],
            [
                "",
                "from",
                "insert"
            ],
            [
                "",
                "a",
                "insert"
            ],
            [
                "any",
                "Task",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Slot",
                "Manager",
                "replace"
            ],
            [
                "<con>",
                "\"",
                "replace"
            ],
            [
                "Used",
                "",
                "delete"
            ],
            [
                "(",
                "+",
                "replace"
            ],
            [
                "task",
                "slot",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Manager",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Registration",
                "",
                "delete"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Slots",
                "Instance",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                "+",
                "replace"
            ],
            [
                ")",
                "\"",
                "replace"
            ],
            [
                "",
                "which",
                "insert"
            ],
            [
                "",
                "has",
                "insert"
            ],
            [
                "",
                "not",
                "insert"
            ],
            [
                "",
                "been",
                "insert"
            ],
            [
                "",
                "registered",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "task",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Manager",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Registration",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "mark",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Used",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "update",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Slot",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "else",
                "State",
                "replace"
            ],
            [
                "{",
                "(",
                "replace"
            ],
            [
                "",
                "slot",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "task",
                "task",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Manager",
                "Manager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Registration",
                "Registration",
                "equal"
            ],
            [
                ".",
                ",",
                "replace"
            ],
            [
                "mark",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Idle",
                "null",
                "replace"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Received",
                "Received",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "free",
                "free",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "expected",
                "expected",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "but",
                "but",
                "equal"
            ],
            [
                "actual",
                "actual",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "differs",
                "differs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Ignoring",
                "Ignoring",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "request",
                "request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Allocation",
                "Allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Slot",
                "Slot",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "been",
                "been",
                "equal"
            ],
            [
                "allocated",
                "allocated",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "allocation",
                "allocation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Trying",
                "Trying",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "free",
                "free",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "which",
                "which",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "been",
                "been",
                "equal"
            ],
            [
                "registered",
                "registered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Ignoring",
                "Ignoring",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "slot",
                "slot",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void clearStorage()throws BackendException { openStores.clear(); final String lp = \"ClearStorage: \"; CTConnection conn = null; try { conn = pool.borrowObject(SYSTEM_KS); Cassandra.Client client = conn.getClient(); KsDef ksDef; try { client.set_keyspace(keySpaceName); ksDef = client.describe_keyspace(keySpaceName); } catch(NotFoundException e) { log.debug(lp + \"Keyspace {} does not exist, not attempting to truncate.\", keySpaceName); return; } catch(InvalidRequestException e) { log.debug(lp + \"InvalidRequestException when attempting to describe keyspace {}, not attempting to truncate.\", keySpaceName); return; } if(null == ksDef) { log.debug(lp + \"Received null KsDef for keyspace {}; not truncating its CFs\", keySpaceName); return; } if(this.storageConfig.get(GraphDatabaseConfiguration.DROP_ON_CLEAR)) { client.system_drop_keyspace(keySpaceName); pool.clear(); } else { final List < CfDef > cfDefs = ksDef.getCf_defs(); if(null == cfDefs) { log.debug(lp + \"Received empty CfDef list for keyspace {}; not truncating CFs\", keySpaceName); return; } for(final CfDef cfDef : ksDef.getCf_defs()) { client.truncate(cfDef.name); log.info(lp + \"Truncated CF {} in keyspace {}\", cfDef.name, keySpaceName); } } } catch(Exception e) { throw new TemporaryBackendException(e); } finally { if(conn != null && conn.getClient() != null) { try { conn.getClient().set_keyspace(SYSTEM_KS); } catch(InvalidRequestException e) { log.warn(\"Failed to reset keyspace\", e); } catch(TException e) { log.warn(\"Failed to reset keyspace\", e); } } pool.returnObjectUnsafe(SYSTEM_KS, conn); } } ",
        "focal_tgt": "public void clearStorage()throws BackendException { openStores.clear(); final String lp = \"ClearStorage: \"; CTConnection conn = null; try { conn = pool.borrowObject(SYSTEM_KS); Cassandra.Client client = conn.getClient(); KsDef ksDef; try { client.set_keyspace(keySpaceName); ksDef = client.describe_keyspace(keySpaceName); } catch(NotFoundException e) { log.debug(lp + \"Keyspace {} does not exist, not attempting to truncate.\", keySpaceName); return; } catch(InvalidRequestException e) { log.debug(lp + \"InvalidRequestException when attempting to describe keyspace {}, not attempting to truncate.\", keySpaceName); return; } if(null == ksDef) { log.debug(lp + \"Received null KsDef for keyspace {}; not truncating its CFs\", keySpaceName); return; } if(this.storageConfig.get(GraphDatabaseConfiguration.DROP_ON_CLEAR)) { client.system_drop_keyspace(keySpaceName); pool.clear(); } else { final List < CfDef > columnFamilyDefinitions = ksDef.getCf_defs(); if(null == columnFamilyDefinitions) { log.debug(lp + \"Received empty CfDef list for keyspace {}; not truncating CFs\", keySpaceName); return; } for(final CfDef cfDef : ksDef.getCf_defs()) { client.truncate(cfDef.name); log.info(lp + \"Truncated CF {} in keyspace {}\", cfDef.name, keySpaceName); } } } catch(Exception e) { throw new TemporaryBackendException(e); } finally { if(conn != null && conn.getClient() != null) { try { conn.getClient().set_keyspace(SYSTEM_KS); } catch(InvalidRequestException e) { log.warn(\"Failed to reset keyspace\", e); } catch(TException e) { log.warn(\"Failed to reset keyspace\", e); } } pool.returnObjectUnsafe(SYSTEM_KS, conn); } } ",
        "test_src": "@Test public void testClearStorage()throws Exception { GraphOfTheGodsFactory.load(graph); tearDown(); config.set(ConfigElement.getPath(GraphDatabaseConfiguration.DROP_ON_CLEAR), true); final Backend backend = getBackend(config, false); assertStorageExists(backend, true); clearGraph(config); try { backend.close(); } catch(Exception e) { } try(final Backend newBackend = getBackend(config, false)) { assertStorageExists(newBackend, false); } } ",
        "test_tgt": "@Test public void testClearStorage()throws Exception { GraphOfTheGodsFactory.load(graph); tearDown(); config.set(ConfigElement.getPath(GraphDatabaseConfiguration.DROP_ON_CLEAR), true); final Backend backend = getBackend(config, false); assertStorageExists(backend, true); clearGraph(config); try { backend.close(); } catch(Exception e) { } try(final Backend newBackend = getBackend(config, false)) { assertStorageExists(newBackend, false); } } ",
        "label": 1,
        "focal_db": [
            2382096,
            "JanusGraph/janusgraph",
            "/data/comment_repos/JanusGraph@janusgraph",
            "b00bfe7a4a4f3d936bd219cfe9858dbe18b5874d",
            "465eecfd01e29b2fec1d600e0db7b8ca8e584981",
            "janusgraph-cassandra/src/main/java/org/janusgraph/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java",
            "1a49653ac707a24208326fb5968d1b4a0b7a2f8d",
            "janusgraph-cassandra/src/main/java/org/janusgraph/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java",
            "public void clearStorage() throws BackendException {\n        openStores.clear();\n        final String lp = \"ClearStorage: \"; // \"log prefix\"\n        /*\n         * log4j is capable of automatically writing the name of a method that\n         * generated a log message, but the docs warn that \"generating caller\n         * location information is extremely slow and should be avoided unless\n         * execution speed is not an issue.\"\n         */\n\n        CTConnection conn = null;\n        try {\n            conn = pool.borrowObject(SYSTEM_KS);\n            Cassandra.Client client = conn.getClient();\n\n            KsDef ksDef;\n            try {\n                client.set_keyspace(keySpaceName);\n                ksDef = client.describe_keyspace(keySpaceName);\n            } catch (NotFoundException e) {\n                log.debug(lp + \"Keyspace {} does not exist, not attempting to truncate.\", keySpaceName);\n                return;\n            } catch (InvalidRequestException e) {\n                log.debug(lp + \"InvalidRequestException when attempting to describe keyspace {}, not attempting to truncate.\", keySpaceName);\n                return;\n            }\n\n\n            if (null == ksDef) {\n                log.debug(lp + \"Received null KsDef for keyspace {}; not truncating its CFs\", keySpaceName);\n                return;\n            }\n\n            if (this.storageConfig.get(GraphDatabaseConfiguration.DROP_ON_CLEAR)) {\n                client.system_drop_keyspace(keySpaceName);\n                pool.clear();\n            } else {\n                final List<CfDef> cfDefs = ksDef.getCf_defs();\n\n                if (null == cfDefs) {\n                    log.debug(lp + \"Received empty CfDef list for keyspace {}; not truncating CFs\", keySpaceName);\n                    return;\n                }\n\n                for (final CfDef cfDef : ksDef.getCf_defs()) {\n                    client.truncate(cfDef.name);\n                    log.info(lp + \"Truncated CF {} in keyspace {}\", cfDef.name, keySpaceName);\n                }\n\n                /*\n                 * Clearing the CTConnectionPool is unnecessary. This method\n                 * removes no keyspaces. All open Cassandra connections will\n                 * remain valid.\n                 */\n            }\n        } catch (Exception e) {\n            throw new TemporaryBackendException(e);\n        } finally {\n            if (conn != null && conn.getClient() != null) {\n                try {\n                    conn.getClient().set_keyspace(SYSTEM_KS);\n                } catch (InvalidRequestException e) {\n                    log.warn(\"Failed to reset keyspace\", e);\n                } catch (TException e) {\n                    log.warn(\"Failed to reset keyspace\", e);\n                }\n            }\n            pool.returnObjectUnsafe(SYSTEM_KS, conn);\n        }\n    }",
            "/**\n * Connect to Cassandra via Thrift on the specified host and port and attempt to truncate the named keyspace.\n * <p/>\n * This is a utility method intended mainly for testing. It is\n * equivalent to issuing 'truncate <cf>' for each of the column families in keyspace using\n * the cassandra-cli tool.\n * <p/>\n * Using truncate is better for a number of reasons, most significantly because it doesn't\n * involve any schema modifications which can take time to propagate across the cluster such\n * leaves nodes in the inconsistent state and could result in read/write failures.\n * Any schema modifications are discouraged until there is no traffic to Keyspace or ColumnFamilies.\n *\n * @throws org.janusgraph.diskstorage.BackendException if any checked Thrift or UnknownHostException is thrown in the body of this method\n */\n",
            "public void clearStorage() throws BackendException {\n        openStores.clear();\n        final String lp = \"ClearStorage: \"; // \"log prefix\"\n        /*\n         * log4j is capable of automatically writing the name of a method that\n         * generated a log message, but the docs warn that \"generating caller\n         * location information is extremely slow and should be avoided unless\n         * execution speed is not an issue.\"\n         */\n\n        CTConnection conn = null;\n        try {\n            conn = pool.borrowObject(SYSTEM_KS);\n            Cassandra.Client client = conn.getClient();\n\n            KsDef ksDef;\n            try {\n                client.set_keyspace(keySpaceName);\n                ksDef = client.describe_keyspace(keySpaceName);\n            } catch (NotFoundException e) {\n                log.debug(lp + \"Keyspace {} does not exist, not attempting to truncate.\", keySpaceName);\n                return;\n            } catch (InvalidRequestException e) {\n                log.debug(lp + \"InvalidRequestException when attempting to describe keyspace {}, not attempting to truncate.\", keySpaceName);\n                return;\n            }\n\n\n            if (null == ksDef) {\n                log.debug(lp + \"Received null KsDef for keyspace {}; not truncating its CFs\", keySpaceName);\n                return;\n            }\n\n            if (this.storageConfig.get(GraphDatabaseConfiguration.DROP_ON_CLEAR)) {\n                client.system_drop_keyspace(keySpaceName);\n                pool.clear();\n            } else {\n                final List<CfDef> columnFamilyDefinitions = ksDef.getCf_defs();\n\n                if (null == columnFamilyDefinitions) {\n                    log.debug(lp + \"Received empty CfDef list for keyspace {}; not truncating CFs\", keySpaceName);\n                    return;\n                }\n\n                for (final CfDef cfDef : ksDef.getCf_defs()) {\n                    client.truncate(cfDef.name);\n                    log.info(lp + \"Truncated CF {} in keyspace {}\", cfDef.name, keySpaceName);\n                }\n\n                /*\n                 * Clearing the CTConnectionPool is unnecessary. This method\n                 * removes no keyspaces. All open Cassandra connections will\n                 * remain valid.\n                 */\n            }\n        } catch (Exception e) {\n            throw new TemporaryBackendException(e);\n        } finally {\n            if (conn != null && conn.getClient() != null) {\n                try {\n                    conn.getClient().set_keyspace(SYSTEM_KS);\n                } catch (InvalidRequestException e) {\n                    log.warn(\"Failed to reset keyspace\", e);\n                } catch (TException e) {\n                    log.warn(\"Failed to reset keyspace\", e);\n                }\n            }\n            pool.returnObjectUnsafe(SYSTEM_KS, conn);\n        }\n    }",
            "/**\n * Connect to Cassandra via Thrift on the specified host and port and attempt to truncate the named keyspace.\n * <p/>\n * This is a utility method intended mainly for testing. It is\n * equivalent to issuing 'truncate <cf>' for each of the column families in keyspace using\n * the cassandra-cli tool.\n * <p/>\n * Using truncate is better for a number of reasons, most significantly because it doesn't\n * involve any schema modifications which can take time to propagate across the cluster such\n * leaves nodes in the inconsistent state and could result in read/write failures.\n * Any schema modifications are discouraged until there is no traffic to Keyspace or ColumnFamilies.\n *\n * @throws org.janusgraph.diskstorage.BackendException if any checked Thrift or UnknownHostException is thrown in the body of this method\n */\n"
        ],
        "test_db": [
            2381765,
            "JanusGraph/janusgraph",
            "/data/comment_repos/JanusGraph@janusgraph",
            "8c9e5d30adc2654250587e38714e3a30eb90527a",
            "15fb33ffef87577749ddbf413bd77821030c3935",
            "janusgraph-test/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java",
            "a41bd24d58ba373db7324066cf7e4182c2de1c8b",
            "janusgraph-test/src/main/java/org/janusgraph/graphdb/JanusGraphIndexTest.java",
            "@Test\n    public void testClearStorage() throws Exception {\n        GraphOfTheGodsFactory.load(graph);\n        tearDown();\n        config.set(ConfigElement.getPath(GraphDatabaseConfiguration.DROP_ON_CLEAR), true);\n        final Backend backend = getBackend(config, false);\n        assertStorageExists(backend, true);\n        clearGraph(config);\n        try { backend.close(); } catch (Exception e) { /* Most backends do not support closing after clearing */}\n        try (final Backend newBackend = getBackend(config, false)) {\n            assertStorageExists(newBackend, false);\n        }\n    }",
            "/**\n * Ensure clearing storage actually removes underlying graph and index databases.\n * @throws Exception\n */\n",
            "@Test\n    public void testClearStorage() throws Exception {\n        GraphOfTheGodsFactory.load(graph);\n        tearDown();\n        config.set(ConfigElement.getPath(GraphDatabaseConfiguration.DROP_ON_CLEAR), true);\n        final Backend backend = getBackend(config, false);\n        assertStorageExists(backend, true);\n        clearGraph(config);\n        try { backend.close(); } catch (Exception e) { /* Most backends do not support closing after clearing */}\n        try (final Backend newBackend = getBackend(config, false)) {\n            assertStorageExists(newBackend, false);\n        }\n    }",
            "/**\n * Ensure clearing storage actually removes underlying graph and index databases.\n * @throws Exception\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "clear",
                "clear",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Storage",
                "Storage",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Backend",
                "Backend",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "open",
                "open",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stores",
                "Stores",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clear",
                "clear",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Clear",
                "Clear",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Storage",
                "Storage",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "CT",
                "CT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connection",
                "Connection",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pool",
                "pool",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "borrow",
                "borrow",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SYSTEM",
                "SYSTEM",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "KS",
                "KS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Cassandra",
                "Cassandra",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Ks",
                "Ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                "ks",
                "ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "ks",
                "ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "describe",
                "describe",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Found",
                "Found",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Keyspace",
                "Keyspace",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "does",
                "does",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "attempting",
                "attempting",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "truncate",
                "truncate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Invalid",
                "Invalid",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Invalid",
                "Invalid",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "when",
                "when",
                "equal"
            ],
            [
                "attempting",
                "attempting",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "describe",
                "describe",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "attempting",
                "attempting",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "truncate",
                "truncate",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "ks",
                "ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Received",
                "Received",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "Ks",
                "Ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "truncating",
                "truncating",
                "equal"
            ],
            [
                "its",
                "its",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fs",
                "Fs",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "storage",
                "storage",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Config",
                "Config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Graph",
                "Graph",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Database",
                "Database",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "DROP",
                "DROP",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ON",
                "ON",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "CLEAR",
                "CLEAR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "system",
                "system",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "drop",
                "drop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pool",
                "pool",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "clear",
                "clear",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Cf",
                "Cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "cf",
                "column",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "",
                "Family",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Defs",
                "Definitions",
                "replace"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ks",
                "ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cf",
                "Cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "defs",
                "defs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "cf",
                "column",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "",
                "Family",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Defs",
                "Definitions",
                "replace"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Received",
                "Received",
                "equal"
            ],
            [
                "empty",
                "empty",
                "equal"
            ],
            [
                "Cf",
                "Cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "truncating",
                "truncating",
                "equal"
            ],
            [
                "C",
                "C",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fs",
                "Fs",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Cf",
                "Cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                "cf",
                "cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "ks",
                "ks",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cf",
                "Cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "defs",
                "defs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "truncate",
                "truncate",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "cf",
                "cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "lp",
                "lp",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Truncated",
                "Truncated",
                "equal"
            ],
            [
                "CF",
                "CF",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "cf",
                "cf",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Def",
                "Def",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Space",
                "Space",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Temporary",
                "Temporary",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Backend",
                "Backend",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "finally",
                "finally",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SYSTEM",
                "SYSTEM",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "KS",
                "KS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Invalid",
                "Invalid",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Failed",
                "Failed",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "reset",
                "reset",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Failed",
                "Failed",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "reset",
                "reset",
                "equal"
            ],
            [
                "keyspace",
                "keyspace",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "pool",
                "pool",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Unsafe",
                "Unsafe",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "SYSTEM",
                "SYSTEM",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "KS",
                "KS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "conn",
                "conn",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "ClientCacheConfiguration cacheConfiguration(BinaryInputStream in, ProtocolVersion ver)throws IOException { try(BinaryReaderExImpl reader = new BinaryReaderExImpl(marsh.context(), in, null, true)) { reader.readInt(); return new ClientCacheConfiguration().setName(\"TBD\").setAtomicityMode(CacheAtomicityMode.fromOrdinal(reader.readInt())).setBackups(reader.readInt()).setCacheMode(CacheMode.fromOrdinal(reader.readInt())).setCopyOnRead(reader.readBoolean()).setDataRegionName(reader.readString()).setEagerTtl(reader.readBoolean()).setStatisticsEnabled(reader.readBoolean()).setGroupName(reader.readString()).setDefaultLockTimeout(reader.readLong()).setMaxConcurrentAsyncOperations(reader.readInt()).setMaxQueryIteratorsCount(reader.readInt()).setName(reader.readString()).setOnheapCacheEnabled(reader.readBoolean()).setPartitionLossPolicy(PartitionLossPolicy.fromOrdinal((byte)reader.readInt())).setQueryDetailMetricsSize(reader.readInt()).setQueryParallelism(reader.readInt()).setReadFromBackup(reader.readBoolean()).setRebalanceBatchSize(reader.readInt()).setRebalanceBatchesPrefetchCount(reader.readLong()).setRebalanceDelay(reader.readLong()).setRebalanceMode(CacheRebalanceMode.fromOrdinal(reader.readInt())).setRebalanceOrder(reader.readInt()).setRebalanceThrottle(reader.readLong()).setRebalanceTimeout(reader.readLong()).setSqlEscapeAll(reader.readBoolean()).setSqlIndexMaxInlineSize(reader.readInt()).setSqlSchema(reader.readString()).setWriteSynchronizationMode(CacheWriteSynchronizationMode.fromOrdinal(reader.readInt())).setKeyConfiguration(ClientUtils.collection(in, unused -> new CacheKeyConfiguration(reader.readString(), reader.readString())).toArray(new CacheKeyConfiguration[0])).setQueryEntities(ClientUtils.collection(in, unused -> { QueryEntity qryEntity = new QueryEntity(reader.readString(), reader.readString()).setTableName(reader.readString()).setKeyFieldName(reader.readString()).setValueFieldName(reader.readString()); boolean isCliVer1_2 = ver.compareTo(V1_2_0) >= 0; Collection < QueryField > qryFields = ClientUtils.collection(in, unused2 -> { String name = reader.readString(); String typeName = reader.readString(); boolean isKey = reader.readBoolean(); boolean isNotNull = reader.readBoolean(); Object dfltVal = reader.readObject(); int precision = isCliVer1_2 ? reader.readInt() : - 1; int scale = isCliVer1_2 ? reader.readInt() : - 1; return new QueryField(name, typeName, isKey, isNotNull, dfltVal, precision, scale); }); return qryEntity.setFields(qryFields.stream().collect(Collectors.toMap(QueryField :: getName, QueryField :: getTypeName, (a, b) -> a, LinkedHashMap :: new))).setKeyFields(qryFields.stream().filter(QueryField :: isKey).map(QueryField :: getName).collect(Collectors.toCollection(LinkedHashSet :: new))).setNotNullFields(qryFields.stream().filter(QueryField :: isNotNull).map(QueryField :: getName).collect(Collectors.toSet())).setDefaultFieldValues(qryFields.stream().filter(f -> f.getDefaultValue() != null).collect(Collectors.toMap(QueryField :: getName, QueryField :: getDefaultValue))).setFieldsPrecision(qryFields.stream().filter(f -> f.getPrecision() != - 1).collect(Collectors.toMap(QueryField :: getName, QueryField :: getPrecision))).setFieldsScale(qryFields.stream().filter(f -> f.getScale() != - 1).collect(Collectors.toMap(QueryField :: getName, QueryField :: getScale))).setAliases(ClientUtils.collection(in, unused3 -> new SimpleEntry < > (reader.readString(), reader.readString())).stream().collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue))).setIndexes(ClientUtils.collection(in, unused4 -> { String name = reader.readString(); QueryIndexType type = QueryIndexType.fromOrdinal(reader.readByte()); int inlineSize = reader.readInt(); LinkedHashMap < String, Boolean > fields = ClientUtils.collection(in, unused5 -> new SimpleEntry < > (reader.readString(), reader.readBoolean())).stream().collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue, (a, b) -> a, LinkedHashMap :: new)); return new QueryIndex(fields, type).setName(name).setInlineSize(inlineSize); })); }).toArray(new QueryEntity[0])); } } ",
        "focal_tgt": "ClientCacheConfiguration cacheConfiguration(BinaryInputStream in, ProtocolVersion ver)throws IOException { try(BinaryReaderExImpl reader = new BinaryReaderExImpl(marsh.context(), in, null, true)) { reader.readInt(); return new ClientCacheConfiguration().setName(\"TBD\").setAtomicityMode(CacheAtomicityMode.fromOrdinal(reader.readInt())).setBackups(reader.readInt()).setCacheMode(CacheMode.fromOrdinal(reader.readInt())).setCopyOnRead(reader.readBoolean()).setDataRegionName(reader.readString()).setEagerTtl(reader.readBoolean()).setStatisticsEnabled(reader.readBoolean()).setGroupName(reader.readString()).setDefaultLockTimeout(reader.readLong()).setMaxConcurrentAsyncOperations(reader.readInt()).setMaxQueryIteratorsCount(reader.readInt()).setName(reader.readString()).setOnheapCacheEnabled(reader.readBoolean()).setPartitionLossPolicy(PartitionLossPolicy.fromOrdinal((byte)reader.readInt())).setQueryDetailMetricsSize(reader.readInt()).setQueryParallelism(reader.readInt()).setReadFromBackup(reader.readBoolean()).setRebalanceBatchSize(reader.readInt()).setRebalanceBatchesPrefetchCount(reader.readLong()).setRebalanceDelay(reader.readLong()).setRebalanceMode(CacheRebalanceMode.fromOrdinal(reader.readInt())).setRebalanceOrder(reader.readInt()).setRebalanceThrottle(reader.readLong()).setRebalanceTimeout(reader.readLong()).setSqlEscapeAll(reader.readBoolean()).setSqlIndexMaxInlineSize(reader.readInt()).setSqlSchema(reader.readString()).setWriteSynchronizationMode(CacheWriteSynchronizationMode.fromOrdinal(reader.readInt())).setKeyConfiguration(ClientUtils.collection(in, unused -> new CacheKeyConfiguration(reader.readString(), reader.readString())).toArray(new CacheKeyConfiguration[0])).setQueryEntities(ClientUtils.collection(in, unused -> { QueryEntity qryEntity = new QueryEntity(reader.readString(), reader.readString()).setTableName(reader.readString()).setKeyFieldName(reader.readString()).setValueFieldName(reader.readString()); boolean isCliVer1_2 = ver.compareTo(V1_2_0) >= 0; Collection < QueryField > qryFields = ClientUtils.collection(in, unused2 -> { String name = reader.readString(); String typeName = reader.readString(); boolean isKey = reader.readBoolean(); boolean isNotNull = reader.readBoolean(); Object dfltVal = reader.readObject(); int precision = isCliVer1_2 ? reader.readInt() : - 1; int scale = isCliVer1_2 ? reader.readInt() : - 1; return new QueryField(name, typeName, isKey, isNotNull, dfltVal, precision, scale); }); return qryEntity.setFields(qryFields.stream().collect(Collectors.toMap(QueryField :: getName, QueryField :: getTypeName, (a, b) -> a, LinkedHashMap :: new))).setKeyFields(qryFields.stream().filter(QueryField :: isKey).map(QueryField :: getName).collect(Collectors.toCollection(LinkedHashSet :: new))).setNotNullFields(qryFields.stream().filter(QueryField :: isNotNull).map(QueryField :: getName).collect(Collectors.toSet())).setDefaultFieldValues(qryFields.stream().filter(f -> f.getDefaultValue() != null).collect(Collectors.toMap(QueryField :: getName, QueryField :: getDefaultValue))).setFieldsPrecision(qryFields.stream().filter(f -> f.getPrecision() != - 1).collect(Collectors.toMap(QueryField :: getName, QueryField :: getPrecision))).setFieldsScale(qryFields.stream().filter(f -> f.getScale() != - 1).collect(Collectors.toMap(QueryField :: getName, QueryField :: getScale))).setAliases(ClientUtils.collection(in, unused3 -> new SimpleEntry < > (reader.readString(), reader.readString())).stream().collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue))).setIndexes(ClientUtils.collection(in, unused4 -> { String name = reader.readString(); QueryIndexType type = QueryIndexType.fromOrdinal(reader.readByte()); int inlineSize = reader.readInt(); LinkedHashMap < String, Boolean > fields = ClientUtils.collection(in, unused5 -> new SimpleEntry < > (reader.readString(), reader.readBoolean())).stream().collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue, (a, b) -> a, LinkedHashMap :: new)); return new QueryIndex(fields, type).setName(name).setInlineSize(inlineSize); })); }).toArray(new QueryEntity[0])).setExpiryPolicy(ver.compareTo(V1_6_0) < 0 ? null : reader.readBoolean() ? new PlatformExpiryPolicy(reader.readLong(), reader.readLong(), reader.readLong()) : null); } } ",
        "test_src": "@Test public void testCacheConfiguration()throws Exception { try(Ignite ignored = Ignition.start(Config.getServerConfiguration()); IgniteClient client = Ignition.startClient(getClientConfiguration())) { final String CACHE_NAME = \"testCacheConfiguration\"; ClientCacheConfiguration cacheCfg = new ClientCacheConfiguration().setName(CACHE_NAME).setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL).setBackups(3).setCacheMode(CacheMode.PARTITIONED).setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC).setEagerTtl(false).setGroupName(\"FunctionalTest\").setDefaultLockTimeout(12345).setPartitionLossPolicy(PartitionLossPolicy.READ_WRITE_ALL).setReadFromBackup(true).setRebalanceBatchSize(67890).setRebalanceBatchesPrefetchCount(102938).setRebalanceDelay(54321).setRebalanceMode(CacheRebalanceMode.SYNC).setRebalanceOrder(2).setRebalanceThrottle(564738).setRebalanceTimeout(142536).setKeyConfiguration(new CacheKeyConfiguration(\"Employee\", \"orgId\")).setQueryEntities(new QueryEntity(int.class.getName(), \"Employee\").setTableName(\"EMPLOYEE\").setFields(Stream.of(new SimpleEntry < > (\"id\", Integer.class.getName()), new SimpleEntry < > (\"orgId\", Integer.class.getName())).collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue, (a, b) -> a, LinkedHashMap :: new))).setKeyFields(Collections.emptySet()).setKeyFieldName(\"id\").setNotNullFields(Collections.singleton(\"id\")).setDefaultFieldValues(Collections.singletonMap(\"id\", 0)).setIndexes(Collections.singletonList(new QueryIndex(\"id\", true, \"IDX_EMPLOYEE_ID\"))).setAliases(Stream.of(\"id\", \"orgId\").collect(Collectors.toMap(f -> f, String :: toUpperCase)))); ClientCache cache = client.createCache(cacheCfg); assertEquals(CACHE_NAME, cache.getName()); assertTrue(Comparers.equal(cacheCfg, cache.getConfiguration())); } } ",
        "test_tgt": "@Test public void testCacheConfiguration()throws Exception { try(Ignite ignored = Ignition.start(Config.getServerConfiguration()); IgniteClient client = Ignition.startClient(getClientConfiguration())) { final String CACHE_NAME = \"testCacheConfiguration\"; ClientCacheConfiguration cacheCfg = new ClientCacheConfiguration().setName(CACHE_NAME).setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL).setBackups(3).setCacheMode(CacheMode.PARTITIONED).setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC).setEagerTtl(false).setGroupName(\"FunctionalTest\").setDefaultLockTimeout(12345).setPartitionLossPolicy(PartitionLossPolicy.READ_WRITE_ALL).setReadFromBackup(true).setRebalanceBatchSize(67890).setRebalanceBatchesPrefetchCount(102938).setRebalanceDelay(54321).setRebalanceMode(CacheRebalanceMode.SYNC).setRebalanceOrder(2).setRebalanceThrottle(564738).setRebalanceTimeout(142536).setKeyConfiguration(new CacheKeyConfiguration(\"Employee\", \"orgId\")).setQueryEntities(new QueryEntity(int.class.getName(), \"Employee\").setTableName(\"EMPLOYEE\").setFields(Stream.of(new SimpleEntry < > (\"id\", Integer.class.getName()), new SimpleEntry < > (\"orgId\", Integer.class.getName())).collect(Collectors.toMap(SimpleEntry :: getKey, SimpleEntry :: getValue, (a, b) -> a, LinkedHashMap :: new))).setKeyFields(Collections.emptySet()).setKeyFieldName(\"id\").setNotNullFields(Collections.singleton(\"id\")).setDefaultFieldValues(Collections.singletonMap(\"id\", 0)).setIndexes(Collections.singletonList(new QueryIndex(\"id\", true, \"IDX_EMPLOYEE_ID\"))).setAliases(Stream.of(\"id\", \"orgId\").collect(Collectors.toMap(f -> f, String :: toUpperCase)))).setExpiryPolicy(new PlatformExpiryPolicy(10, 20, 30)); ClientCache cache = client.createCache(cacheCfg); assertEquals(CACHE_NAME, cache.getName()); assertTrue(Comparers.equal(cacheCfg, cache.getConfiguration())); } } ",
        "label": 1,
        "focal_db": [
            759545,
            "apache/ignite",
            "/data/comment_repos/apache@ignite",
            "4fb139d10913ba757900fa1231ba6dfa1afc16b5",
            "3175cfccdd8fc0ecac63dbd19a1cfb00e51d8f60",
            "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientUtils.java",
            "a0ea2d2af748296a21a1672bf59262316daf2c17",
            "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientUtils.java",
            "ClientCacheConfiguration cacheConfiguration(BinaryInputStream in, ProtocolVersion ver)\n        throws IOException {\n        try (BinaryReaderExImpl reader = new BinaryReaderExImpl(marsh.context(), in, null, true)) {\n            reader.readInt(); // Do not need length to read data. The protocol defines fixed configuration layout.\n\n            return new ClientCacheConfiguration().setName(\"TBD\") // cache name is to be assigned later\n                .setAtomicityMode(CacheAtomicityMode.fromOrdinal(reader.readInt()))\n                .setBackups(reader.readInt())\n                .setCacheMode(CacheMode.fromOrdinal(reader.readInt()))\n                .setCopyOnRead(reader.readBoolean())\n                .setDataRegionName(reader.readString())\n                .setEagerTtl(reader.readBoolean())\n                .setStatisticsEnabled(reader.readBoolean())\n                .setGroupName(reader.readString())\n                .setDefaultLockTimeout(reader.readLong())\n                .setMaxConcurrentAsyncOperations(reader.readInt())\n                .setMaxQueryIteratorsCount(reader.readInt())\n                .setName(reader.readString())\n                .setOnheapCacheEnabled(reader.readBoolean())\n                .setPartitionLossPolicy(PartitionLossPolicy.fromOrdinal((byte)reader.readInt()))\n                .setQueryDetailMetricsSize(reader.readInt())\n                .setQueryParallelism(reader.readInt())\n                .setReadFromBackup(reader.readBoolean())\n                .setRebalanceBatchSize(reader.readInt())\n                .setRebalanceBatchesPrefetchCount(reader.readLong())\n                .setRebalanceDelay(reader.readLong())\n                .setRebalanceMode(CacheRebalanceMode.fromOrdinal(reader.readInt()))\n                .setRebalanceOrder(reader.readInt())\n                .setRebalanceThrottle(reader.readLong())\n                .setRebalanceTimeout(reader.readLong())\n                .setSqlEscapeAll(reader.readBoolean())\n                .setSqlIndexMaxInlineSize(reader.readInt())\n                .setSqlSchema(reader.readString())\n                .setWriteSynchronizationMode(CacheWriteSynchronizationMode.fromOrdinal(reader.readInt()))\n                .setKeyConfiguration(\n                    ClientUtils.collection(in, unused -> new CacheKeyConfiguration(reader.readString(), reader.readString()))\n                        .toArray(new CacheKeyConfiguration[0])\n                ).setQueryEntities(ClientUtils.collection(\n                    in,\n                    unused -> {\n                        QueryEntity qryEntity = new QueryEntity(reader.readString(), reader.readString())\n                            .setTableName(reader.readString())\n                            .setKeyFieldName(reader.readString())\n                            .setValueFieldName(reader.readString());\n\n                        boolean isCliVer1_2 = ver.compareTo(V1_2_0) >= 0;\n\n                        Collection<QueryField> qryFields = ClientUtils.collection(\n                            in,\n                            unused2 -> {\n                                String name = reader.readString();\n                                String typeName = reader.readString();\n                                boolean isKey = reader.readBoolean();\n                                boolean isNotNull = reader.readBoolean(); \n                                Object dfltVal = reader.readObject();\n                                int precision = isCliVer1_2 ? reader.readInt() : -1;\n                                int scale = isCliVer1_2 ? reader.readInt() : -1; \n\n                                return new QueryField(name,\n                                    typeName,\n                                    isKey,\n                                    isNotNull,\n                                    dfltVal,\n                                    precision,\n                                    scale);\n                            }\n                        );\n\n                        return qryEntity\n                            .setFields(qryFields.stream().collect(Collectors.toMap(\n                                QueryField::getName, QueryField::getTypeName, (a, b) -> a, LinkedHashMap::new\n                            )))\n                            .setKeyFields(qryFields.stream()\n                                .filter(QueryField::isKey)\n                                .map(QueryField::getName)\n                                .collect(Collectors.toCollection(LinkedHashSet::new))\n                            )\n                            .setNotNullFields(qryFields.stream()\n                                .filter(QueryField::isNotNull)\n                                .map(QueryField::getName)\n                                .collect(Collectors.toSet())\n                            )\n                            .setDefaultFieldValues(qryFields.stream()\n                                .filter(f -> f.getDefaultValue() != null)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getDefaultValue))\n                            )\n                            .setFieldsPrecision(qryFields.stream()\n                                .filter(f -> f.getPrecision() != -1)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getPrecision))\n                            )\n                            .setFieldsScale(qryFields.stream()\n                                .filter(f -> f.getScale() != -1)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getScale))\n                            )\n                            .setAliases(ClientUtils.collection(\n                                in,\n                                unused3 -> new SimpleEntry<>(reader.readString(), reader.readString())\n                            ).stream().collect(Collectors.toMap(SimpleEntry::getKey, SimpleEntry::getValue)))\n                            .setIndexes(ClientUtils.collection(\n                                in,\n                                unused4 -> {\n                                    String name = reader.readString();\n                                    QueryIndexType type = QueryIndexType.fromOrdinal(reader.readByte());\n                                    int inlineSize = reader.readInt();\n\n                                    LinkedHashMap<String, Boolean> fields = ClientUtils.collection(\n                                        in,\n                                        unused5 -> new SimpleEntry<>(reader.readString(), reader.readBoolean())\n                                    ).stream().collect(Collectors.toMap(\n                                        SimpleEntry::getKey,\n                                        SimpleEntry::getValue,\n                                        (a, b) -> a,\n                                        LinkedHashMap::new\n                                    ));\n\n                                    return new QueryIndex(fields, type).setName(name).setInlineSize(inlineSize);\n                                }\n                            ));\n                    }\n                ).toArray(new QueryEntity[0]));\n        }\n    }",
            "/**\n * Deserialize configuration from stream.\n */\n",
            "ClientCacheConfiguration cacheConfiguration(BinaryInputStream in, ProtocolVersion ver)\n        throws IOException {\n        try (BinaryReaderExImpl reader = new BinaryReaderExImpl(marsh.context(), in, null, true)) {\n            reader.readInt(); // Do not need length to read data. The protocol defines fixed configuration layout.\n\n            return new ClientCacheConfiguration().setName(\"TBD\") // cache name is to be assigned later\n                .setAtomicityMode(CacheAtomicityMode.fromOrdinal(reader.readInt()))\n                .setBackups(reader.readInt())\n                .setCacheMode(CacheMode.fromOrdinal(reader.readInt()))\n                .setCopyOnRead(reader.readBoolean())\n                .setDataRegionName(reader.readString())\n                .setEagerTtl(reader.readBoolean())\n                .setStatisticsEnabled(reader.readBoolean())\n                .setGroupName(reader.readString())\n                .setDefaultLockTimeout(reader.readLong())\n                .setMaxConcurrentAsyncOperations(reader.readInt())\n                .setMaxQueryIteratorsCount(reader.readInt())\n                .setName(reader.readString())\n                .setOnheapCacheEnabled(reader.readBoolean())\n                .setPartitionLossPolicy(PartitionLossPolicy.fromOrdinal((byte)reader.readInt()))\n                .setQueryDetailMetricsSize(reader.readInt())\n                .setQueryParallelism(reader.readInt())\n                .setReadFromBackup(reader.readBoolean())\n                .setRebalanceBatchSize(reader.readInt())\n                .setRebalanceBatchesPrefetchCount(reader.readLong())\n                .setRebalanceDelay(reader.readLong())\n                .setRebalanceMode(CacheRebalanceMode.fromOrdinal(reader.readInt()))\n                .setRebalanceOrder(reader.readInt())\n                .setRebalanceThrottle(reader.readLong())\n                .setRebalanceTimeout(reader.readLong())\n                .setSqlEscapeAll(reader.readBoolean())\n                .setSqlIndexMaxInlineSize(reader.readInt())\n                .setSqlSchema(reader.readString())\n                .setWriteSynchronizationMode(CacheWriteSynchronizationMode.fromOrdinal(reader.readInt()))\n                .setKeyConfiguration(\n                    ClientUtils.collection(in, unused -> new CacheKeyConfiguration(reader.readString(), reader.readString()))\n                        .toArray(new CacheKeyConfiguration[0])\n                ).setQueryEntities(ClientUtils.collection(\n                    in,\n                    unused -> {\n                        QueryEntity qryEntity = new QueryEntity(reader.readString(), reader.readString())\n                            .setTableName(reader.readString())\n                            .setKeyFieldName(reader.readString())\n                            .setValueFieldName(reader.readString());\n\n                        boolean isCliVer1_2 = ver.compareTo(V1_2_0) >= 0;\n\n                        Collection<QueryField> qryFields = ClientUtils.collection(\n                            in,\n                            unused2 -> {\n                                String name = reader.readString();\n                                String typeName = reader.readString();\n                                boolean isKey = reader.readBoolean();\n                                boolean isNotNull = reader.readBoolean(); \n                                Object dfltVal = reader.readObject();\n                                int precision = isCliVer1_2 ? reader.readInt() : -1;\n                                int scale = isCliVer1_2 ? reader.readInt() : -1; \n\n                                return new QueryField(name,\n                                    typeName,\n                                    isKey,\n                                    isNotNull,\n                                    dfltVal,\n                                    precision,\n                                    scale);\n                            }\n                        );\n\n                        return qryEntity\n                            .setFields(qryFields.stream().collect(Collectors.toMap(\n                                QueryField::getName, QueryField::getTypeName, (a, b) -> a, LinkedHashMap::new\n                            )))\n                            .setKeyFields(qryFields.stream()\n                                .filter(QueryField::isKey)\n                                .map(QueryField::getName)\n                                .collect(Collectors.toCollection(LinkedHashSet::new))\n                            )\n                            .setNotNullFields(qryFields.stream()\n                                .filter(QueryField::isNotNull)\n                                .map(QueryField::getName)\n                                .collect(Collectors.toSet())\n                            )\n                            .setDefaultFieldValues(qryFields.stream()\n                                .filter(f -> f.getDefaultValue() != null)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getDefaultValue))\n                            )\n                            .setFieldsPrecision(qryFields.stream()\n                                .filter(f -> f.getPrecision() != -1)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getPrecision))\n                            )\n                            .setFieldsScale(qryFields.stream()\n                                .filter(f -> f.getScale() != -1)\n                                .collect(Collectors.toMap(QueryField::getName, QueryField::getScale))\n                            )\n                            .setAliases(ClientUtils.collection(\n                                in,\n                                unused3 -> new SimpleEntry<>(reader.readString(), reader.readString())\n                            ).stream().collect(Collectors.toMap(SimpleEntry::getKey, SimpleEntry::getValue)))\n                            .setIndexes(ClientUtils.collection(\n                                in,\n                                unused4 -> {\n                                    String name = reader.readString();\n                                    QueryIndexType type = QueryIndexType.fromOrdinal(reader.readByte());\n                                    int inlineSize = reader.readInt();\n\n                                    LinkedHashMap<String, Boolean> fields = ClientUtils.collection(\n                                        in,\n                                        unused5 -> new SimpleEntry<>(reader.readString(), reader.readBoolean())\n                                    ).stream().collect(Collectors.toMap(\n                                        SimpleEntry::getKey,\n                                        SimpleEntry::getValue,\n                                        (a, b) -> a,\n                                        LinkedHashMap::new\n                                    ));\n\n                                    return new QueryIndex(fields, type).setName(name).setInlineSize(inlineSize);\n                                }\n                            ));\n                    }\n                ).toArray(new QueryEntity[0]))\n                .setExpiryPolicy(\n                    ver.compareTo(V1_6_0) < 0 ? null : reader.readBoolean() ?\n                        new PlatformExpiryPolicy(reader.readLong(), reader.readLong(), reader.readLong()) : null\n                );\n        }\n    }",
            "/**\n * Deserialize configuration from stream.\n */\n"
        ],
        "test_db": [
            759888,
            "apache/ignite",
            "/data/comment_repos/apache@ignite",
            "4fb139d10913ba757900fa1231ba6dfa1afc16b5",
            "ff2931ee9e5737119d606ecba1672ebc11795733",
            "modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java",
            "510e7913723857deece4cf299a81c1ee977cf5f3",
            "modules/core/src/test/java/org/apache/ignite/client/FunctionalTest.java",
            "@Test\n    public void testCacheConfiguration() throws Exception {\n        try (Ignite ignored = Ignition.start(Config.getServerConfiguration());\n             IgniteClient client = Ignition.startClient(getClientConfiguration())\n        ) {\n            final String CACHE_NAME = \"testCacheConfiguration\";\n\n            ClientCacheConfiguration cacheCfg = new ClientCacheConfiguration().setName(CACHE_NAME)\n                .setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL)\n                .setBackups(3)\n                .setCacheMode(CacheMode.PARTITIONED)\n                .setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC)\n                .setEagerTtl(false)\n                .setGroupName(\"FunctionalTest\")\n                .setDefaultLockTimeout(12345)\n                .setPartitionLossPolicy(PartitionLossPolicy.READ_WRITE_ALL)\n                .setReadFromBackup(true)\n                .setRebalanceBatchSize(67890)\n                .setRebalanceBatchesPrefetchCount(102938)\n                .setRebalanceDelay(54321)\n                .setRebalanceMode(CacheRebalanceMode.SYNC)\n                .setRebalanceOrder(2)\n                .setRebalanceThrottle(564738)\n                .setRebalanceTimeout(142536)\n                .setKeyConfiguration(new CacheKeyConfiguration(\"Employee\", \"orgId\"))\n                .setQueryEntities(new QueryEntity(int.class.getName(), \"Employee\")\n                    .setTableName(\"EMPLOYEE\")\n                    .setFields(\n                        Stream.of(\n                            new SimpleEntry<>(\"id\", Integer.class.getName()),\n                            new SimpleEntry<>(\"orgId\", Integer.class.getName())\n                        ).collect(Collectors.toMap(\n                            SimpleEntry::getKey, SimpleEntry::getValue, (a, b) -> a, LinkedHashMap::new\n                        ))\n                    )\n                    // During query normalization null keyFields become empty set.\n                    // Set empty collection for comparator.\n                    .setKeyFields(Collections.emptySet())\n                    .setKeyFieldName(\"id\")\n                    .setNotNullFields(Collections.singleton(\"id\"))\n                    .setDefaultFieldValues(Collections.singletonMap(\"id\", 0))\n                    .setIndexes(Collections.singletonList(new QueryIndex(\"id\", true, \"IDX_EMPLOYEE_ID\")))\n                    .setAliases(Stream.of(\"id\", \"orgId\").collect(Collectors.toMap(f -> f, String::toUpperCase)))\n                );\n\n            ClientCache cache = client.createCache(cacheCfg);\n\n            assertEquals(CACHE_NAME, cache.getName());\n\n            assertTrue(Comparers.equal(cacheCfg, cache.getConfiguration()));\n        }\n    }",
            "/**\n * Tested API:\n * <ul>\n * <li>{@link ClientCache#getName()}</li>\n * <li>{@link ClientCache#getConfiguration()}</li>\n * </ul>\n */\n",
            "@Test\n    public void testCacheConfiguration() throws Exception {\n        try (Ignite ignored = Ignition.start(Config.getServerConfiguration());\n             IgniteClient client = Ignition.startClient(getClientConfiguration())\n        ) {\n            final String CACHE_NAME = \"testCacheConfiguration\";\n\n            ClientCacheConfiguration cacheCfg = new ClientCacheConfiguration().setName(CACHE_NAME)\n                .setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL)\n                .setBackups(3)\n                .setCacheMode(CacheMode.PARTITIONED)\n                .setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC)\n                .setEagerTtl(false)\n                .setGroupName(\"FunctionalTest\")\n                .setDefaultLockTimeout(12345)\n                .setPartitionLossPolicy(PartitionLossPolicy.READ_WRITE_ALL)\n                .setReadFromBackup(true)\n                .setRebalanceBatchSize(67890)\n                .setRebalanceBatchesPrefetchCount(102938)\n                .setRebalanceDelay(54321)\n                .setRebalanceMode(CacheRebalanceMode.SYNC)\n                .setRebalanceOrder(2)\n                .setRebalanceThrottle(564738)\n                .setRebalanceTimeout(142536)\n                .setKeyConfiguration(new CacheKeyConfiguration(\"Employee\", \"orgId\"))\n                .setQueryEntities(new QueryEntity(int.class.getName(), \"Employee\")\n                    .setTableName(\"EMPLOYEE\")\n                    .setFields(\n                        Stream.of(\n                            new SimpleEntry<>(\"id\", Integer.class.getName()),\n                            new SimpleEntry<>(\"orgId\", Integer.class.getName())\n                        ).collect(Collectors.toMap(\n                            SimpleEntry::getKey, SimpleEntry::getValue, (a, b) -> a, LinkedHashMap::new\n                        ))\n                    )\n                    // During query normalization null keyFields become empty set.\n                    // Set empty collection for comparator.\n                    .setKeyFields(Collections.emptySet())\n                    .setKeyFieldName(\"id\")\n                    .setNotNullFields(Collections.singleton(\"id\"))\n                    .setDefaultFieldValues(Collections.singletonMap(\"id\", 0))\n                    .setIndexes(Collections.singletonList(new QueryIndex(\"id\", true, \"IDX_EMPLOYEE_ID\")))\n                    .setAliases(Stream.of(\"id\", \"orgId\").collect(Collectors.toMap(f -> f, String::toUpperCase)))\n                )\n                .setExpiryPolicy(new PlatformExpiryPolicy(10, 20, 30));\n\n            ClientCache cache = client.createCache(cacheCfg);\n\n            assertEquals(CACHE_NAME, cache.getName());\n\n            assertTrue(Comparers.equal(cacheCfg, cache.getConfiguration()));\n        }\n    }",
            "/**\n * Tested API:\n * <ul>\n * <li>{@link ClientCache#getName()}</li>\n * <li>{@link ClientCache#getConfiguration()}</li>\n * </ul>\n */\n"
        ],
        "edit_seq": [
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "cache",
                "cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Binary",
                "Binary",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Protocol",
                "Protocol",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Version",
                "Version",
                "equal"
            ],
            [
                "ver",
                "ver",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IO",
                "IO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Binary",
                "Binary",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reader",
                "Reader",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ex",
                "Ex",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Binary",
                "Binary",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reader",
                "Reader",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ex",
                "Ex",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Impl",
                "Impl",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "marsh",
                "marsh",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "context",
                "context",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "TBD",
                "TBD",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Atomicity",
                "Atomicity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Atomicity",
                "Atomicity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Backups",
                "Backups",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Copy",
                "Copy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "On",
                "On",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Read",
                "Read",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Data",
                "Data",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Region",
                "Region",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Eager",
                "Eager",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ttl",
                "Ttl",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Statistics",
                "Statistics",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enabled",
                "Enabled",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Default",
                "Default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lock",
                "Lock",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Timeout",
                "Timeout",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Max",
                "Max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Concurrent",
                "Concurrent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Async",
                "Async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Operations",
                "Operations",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Max",
                "Max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Iterators",
                "Iterators",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Count",
                "Count",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Onheap",
                "Onheap",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enabled",
                "Enabled",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Loss",
                "Loss",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Policy",
                "Policy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Partition",
                "Partition",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Loss",
                "Loss",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Policy",
                "Policy",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Detail",
                "Detail",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Metrics",
                "Metrics",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parallelism",
                "Parallelism",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Read",
                "Read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "From",
                "From",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Backup",
                "Backup",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Batch",
                "Batch",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Batches",
                "Batches",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Prefetch",
                "Prefetch",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Count",
                "Count",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Delay",
                "Delay",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Order",
                "Order",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Throttle",
                "Throttle",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rebalance",
                "Rebalance",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Timeout",
                "Timeout",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sql",
                "Sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Escape",
                "Escape",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sql",
                "Sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Index",
                "Index",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Max",
                "Max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Inline",
                "Inline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sql",
                "Sql",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Schema",
                "Schema",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Write",
                "Write",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Synchronization",
                "Synchronization",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Write",
                "Write",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Synchronization",
                "Synchronization",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mode",
                "Mode",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused",
                "unused",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Cache",
                "Cache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entities",
                "Entities",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused",
                "unused",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Table",
                "Table",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cli",
                "Cli",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ver1",
                "Ver1",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ver",
                "ver",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "compare",
                "compare",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "V1",
                "V1",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">=",
                ">=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused2",
                "unused2",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "dflt",
                "dflt",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Val",
                "Val",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "precision",
                "precision",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cli",
                "Cli",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ver1",
                "Ver1",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cli",
                "Cli",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ver1",
                "Ver1",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "dflt",
                "dflt",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Val",
                "Val",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "precision",
                "precision",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scale",
                "scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Linked",
                "Linked",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Collection",
                "Collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Linked",
                "Linked",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Default",
                "Default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Values",
                "Values",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Default",
                "Default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Default",
                "Default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Precision",
                "Precision",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Precision",
                "Precision",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Precision",
                "Precision",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Scale",
                "Scale",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "qry",
                "qry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Fields",
                "Fields",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "f",
                "f",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Scale",
                "Scale",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Field",
                "Field",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Scale",
                "Scale",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Aliases",
                "Aliases",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused3",
                "unused3",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Indexes",
                "Indexes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused4",
                "unused4",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Index",
                "Index",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Index",
                "Index",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ordinal",
                "Ordinal",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Byte",
                "Byte",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "inline",
                "inline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Int",
                "Int",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Linked",
                "Linked",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "fields",
                "fields",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Utils",
                "Utils",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collection",
                "collection",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "in",
                "in",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "unused5",
                "unused5",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "reader",
                "reader",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Boolean",
                "Boolean",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "collect",
                "collect",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collectors",
                "Collectors",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Simple",
                "Simple",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "b",
                "b",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "a",
                "a",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Linked",
                "Linked",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Index",
                "Index",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "fields",
                "fields",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Inline",
                "Inline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "inline",
                "inline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Size",
                "Size",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entity",
                "Entity",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "set",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Expiry",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Policy",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "ver",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "compare",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "To",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "V1",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "_",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "6",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "_",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "0",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "reader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "read",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Boolean",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Platform",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Expiry",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Policy",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "reader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "read",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Long",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "reader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "read",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Long",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "reader",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "read",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Long",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public String getS3SiteXmlsAsCsv() { logger.debug(\"called\"); StringBuilder csv = new StringBuilder(); if(s3CoreSiteXml != null) { csv.append(s3CoreSiteXml); } csv.append(\",\"); if(s3MapredSiteXml != null) { csv.append(s3MapredSiteXml); } csv.append(\",\"); if(s3HdfsSiteXml != null) { csv.append(s3HdfsSiteXml); } return csv.toString(); } ",
        "focal_tgt": "public String getS3SiteXmlsAsCsv() { logger.debug(\"called\"); StringBuilder csv = new StringBuilder(); if(s3CoreSiteXml != null) { csv.append(s3CoreSiteXml); } if(s3MapredSiteXml != null) { csv.append(\",\"); csv.append(s3MapredSiteXml); } if(s3HdfsSiteXml != null) { csv.append(\",\"); csv.append(s3HdfsSiteXml); } if(s3YarnSiteXml != null) { csv.append(\",\"); csv.append(s3YarnSiteXml); } return csv.toString(); } ",
        "test_src": "@Test public void testGetS3SiteXmlsAsCsv() { cc.setS3CoreSiteXml(\"core\"); cc.setS3MapredSiteXml(\"mapred\"); cc.setS3HdfsSiteXml(\"hdfs\"); Assert.assertEquals(cc.getS3SiteXmlsAsCsv(), \"core,mapred,hdfs\"); } ",
        "test_tgt": "@Test public void testGetS3SiteXmlsAsCsv() { cc.setS3CoreSiteXml(\"core\"); cc.setS3MapredSiteXml(\"mapred\"); cc.setS3HdfsSiteXml(\"hdfs\"); cc.setS3YarnSiteXml(\"yarn\"); Assert.assertEquals(cc.getS3SiteXmlsAsCsv(), \"core,mapred,hdfs,yarn\"); } ",
        "label": 1,
        "focal_db": [
            2861393,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "18836422615d9554c8959208f710199e95c297f0",
            "c2d4c182205504eca56e4a740e4651581dd55266",
            "genie-common/src/main/java/com/netflix/genie/common/model/ClusterConfigElement.java",
            "20403ba18f7f18f2a4105da09c82da0eb8b591f1",
            "genie-common/src/main/java/com/netflix/genie/common/model/ClusterConfigElement.java",
            "public String getS3SiteXmlsAsCsv() {\n        logger.debug(\"called\");\n\n        StringBuilder csv = new StringBuilder();\n        if (s3CoreSiteXml != null) {\n            csv.append(s3CoreSiteXml);\n        }\n        csv.append(\",\");\n\n        if (s3MapredSiteXml != null) {\n            csv.append(s3MapredSiteXml);\n        }\n        csv.append(\",\");\n\n        if (s3HdfsSiteXml != null) {\n            csv.append(s3HdfsSiteXml);\n        }\n\n        return csv.toString();\n    }",
            "/**\n * Return the *-site.xml's as CSVs.\n *\n * @return (s3CoreSiteXml, s3MapredSiteXml, s3HdfsSiteXml)\n */\n",
            "public String getS3SiteXmlsAsCsv() {\n        logger.debug(\"called\");\n\n        StringBuilder csv = new StringBuilder();\n        if (s3CoreSiteXml != null) {\n            csv.append(s3CoreSiteXml);\n        }\n        \n        if (s3MapredSiteXml != null) {\n        \tcsv.append(\",\");\n        \tcsv.append(s3MapredSiteXml);\n        }\n        \n        if (s3HdfsSiteXml != null) {\n        \tcsv.append(\",\");\n        \tcsv.append(s3HdfsSiteXml);\n        }\n        \n        if (s3YarnSiteXml != null) {\n        \tcsv.append(\",\");\n        \tcsv.append(s3YarnSiteXml);\n        }\n\n        return csv.toString();\n    }",
            "/**\n * Return the *-site.xml's as CSVs.\n *\n * @return (s3CoreSiteXml, s3MapredSiteXml, s3HdfsSiteXml)\n */\n"
        ],
        "test_db": [
            2861394,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "18836422615d9554c8959208f710199e95c297f0",
            "c8940fbb06c42513606691b8286bbddbeb7a2d36",
            "genie-common/src/test/java/com/netflix/genie/common/model/TestClusterConfigElement.java",
            "53fee88a5734b8f2c4ee9a89c7e5ef7a05fc3952",
            "genie-common/src/test/java/com/netflix/genie/common/model/TestClusterConfigElement.java",
            "@Test\n    public void testGetS3SiteXmlsAsCsv() {\n        cc.setS3CoreSiteXml(\"core\");\n        cc.setS3MapredSiteXml(\"mapred\");\n        cc.setS3HdfsSiteXml(\"hdfs\");\n        Assert.assertEquals(cc.getS3SiteXmlsAsCsv(), \"core,mapred,hdfs\");\n    }",
            "/**\n * Tests csv generation from the *-site.xml's for the cluster.\n */\n",
            "@Test\n    public void testGetS3SiteXmlsAsCsv() {\n        cc.setS3CoreSiteXml(\"core\");\n        cc.setS3MapredSiteXml(\"mapred\");\n        cc.setS3HdfsSiteXml(\"hdfs\");\n        cc.setS3YarnSiteXml(\"yarn\");\n        Assert.assertEquals(cc.getS3SiteXmlsAsCsv(), \"core,mapred,hdfs,yarn\");\n    }",
            "/**\n * Tests csv generation from the *-site.xml's for the cluster.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "S3",
                "S3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xmls",
                "Xmls",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "As",
                "As",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Csv",
                "Csv",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "logger",
                "logger",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "called",
                "called",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "csv",
                "csv",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Core",
                "Core",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "csv",
                "csv",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Core",
                "Core",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "csv",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "append",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mapred",
                "Mapred",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "csv",
                "csv",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "append",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Mapred",
                "Mapred",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "csv",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "append",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "csv",
                "csv",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "append",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "s3",
                "s3",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Site",
                "Site",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Xml",
                "Xml",
                "equal"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "s3",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Yarn",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Site",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Xml",
                "insert"
            ],
            [
                "",
                "!=",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "append",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "csv",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "append",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "s3",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Yarn",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Site",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Xml",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "csv",
                "csv",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Authorized( { PrivilegeConstants.EDIT_COHORTS })Cohort removeMemberShipFromCohort(Cohort cohort, CohortMembership cohortMembership); ",
        "focal_tgt": "@Authorized( { PrivilegeConstants.EDIT_COHORTS })Cohort removeMembershipFromCohort(Cohort cohort, CohortMembership cohortMembership); ",
        "test_src": "@Test@Verifies(value = \"should remove membership from cohort\", method = \"removeMemberShipFromCohort(Cohort, CohortMembership)\")public void removeMembershipFromCohort_shouldRemoveMembershipFromCohort()throws Exception { executeDataSet(COHORT_XML); CohortMembership memberToAddThenRemove = new CohortMembership(new Patient(4)); service.addMembershipToCohort(service.getCohort(1), memberToAddThenRemove); assertTrue(service.getCohort(1).contains(memberToAddThenRemove.getPatient())); assertNull(memberToAddThenRemove.getEndDate()); service.removeMemberShipFromCohort(service.getCohort(1), memberToAddThenRemove); assertNotNull(memberToAddThenRemove.getEndDate()); } ",
        "test_tgt": "@Test public void removeMembershipFromCohort_shouldRemoveMembershipFromCohort()throws Exception { executeDataSet(COHORT_XML); CohortMembership memberToAddThenRemove = new CohortMembership(4); service.addMembershipToCohort(service.getCohort(1), memberToAddThenRemove); assertTrue(service.getCohort(1).contains(memberToAddThenRemove.getPatientId())); assertNull(memberToAddThenRemove.getEndDate()); service.removeMembershipFromCohort(service.getCohort(1), memberToAddThenRemove); assertNotNull(memberToAddThenRemove.getEndDate()); assertFalse(service.getCohort(1).contains(memberToAddThenRemove.getPatientId())); } ",
        "label": 1,
        "focal_db": [
            2981820,
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "8ccfb0b9cdcc658f5c2819ff5c05b24388291cfd",
            "ea48b06eebebe2fa6eee9f848b0f93be8e86b63b",
            "api/src/main/java/org/openmrs/api/CohortService.java",
            "9c62a304cc36c7189b9f5c2471f9721f7a7ce28c",
            "api/src/main/java/org/openmrs/api/CohortService.java",
            "@Authorized( {PrivilegeConstants.EDIT_COHORTS })\n\tCohort removeMemberShipFromCohort(Cohort cohort, CohortMembership cohortMembership);",
            "/**\n * Removes membership from a Cohort\n *\n * @since 2.1\n * @param cohort cohort to remove the membership\n * @param cohortMembership membership that will be removed from cohort\n * @return the Cohort that was passed in with the CohortMembership\n * @should removes Membership from Cohort by setting end date and save the Cohort\n */\n",
            "@Authorized( {PrivilegeConstants.EDIT_COHORTS })\n\tCohort removeMembershipFromCohort(Cohort cohort, CohortMembership cohortMembership);",
            "/**\n * Removes membership from a Cohort\n *\n * @since 2.1\n * @param cohort cohort to remove the membership\n * @param cohortMembership membership that will be removed from cohort\n * @return the Cohort that was passed in with the CohortMembership\n * @should removes Membership from Cohort by setting end date and save the Cohort\n */\n"
        ],
        "test_db": [
            2981850,
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "8ccfb0b9cdcc658f5c2819ff5c05b24388291cfd",
            "2aeb922dfa21c10339c8b5c8fc55e45e2ec68d8a",
            "api/src/test/java/org/openmrs/api/CohortServiceTest.java",
            "c2dd35bdbb88c825a231c91b77a221a15a83a42f",
            "api/src/test/java/org/openmrs/api/CohortServiceTest.java",
            "@Test\n\t@Verifies(value = \"should remove membership from cohort\", method = \"removeMemberShipFromCohort(Cohort, CohortMembership)\")\n\tpublic void removeMembershipFromCohort_shouldRemoveMembershipFromCohort() throws Exception {\n\t\texecuteDataSet(COHORT_XML);\n\n\t\tCohortMembership memberToAddThenRemove = new CohortMembership(new Patient(4));\n\t\tservice.addMembershipToCohort(service.getCohort(1), memberToAddThenRemove);\n\t\tassertTrue(service.getCohort(1).contains(memberToAddThenRemove.getPatient()));\n\t\tassertNull(memberToAddThenRemove.getEndDate());\n\n\t\tservice.removeMemberShipFromCohort(service.getCohort(1), memberToAddThenRemove);\n\t\tassertNotNull(memberToAddThenRemove.getEndDate());\n\t}",
            "/**\n * @verifies {@link CohortService#removeMemberShipFromCohort(Cohort, CohortMembership)}\n */\n",
            "@Test\n\tpublic void removeMembershipFromCohort_shouldRemoveMembershipFromCohort() throws Exception {\n\t\texecuteDataSet(COHORT_XML);\n\n\t\tCohortMembership memberToAddThenRemove = new CohortMembership(4);\n\t\tservice.addMembershipToCohort(service.getCohort(1), memberToAddThenRemove);\n\t\tassertTrue(service.getCohort(1).contains(memberToAddThenRemove.getPatientId()));\n\t\tassertNull(memberToAddThenRemove.getEndDate());\n\n\t\tservice.removeMembershipFromCohort(service.getCohort(1), memberToAddThenRemove);\n\t\tassertNotNull(memberToAddThenRemove.getEndDate());\n\t\tassertFalse(service.getCohort(1).contains(memberToAddThenRemove.getPatientId()));\n\t}",
            ""
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Authorized",
                "Authorized",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Privilege",
                "Privilege",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Constants",
                "Constants",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EDIT",
                "EDIT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "COHORTS",
                "COHORTS",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "Cohort",
                "Cohort",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Member",
                "Membership",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Ship",
                "",
                "delete"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "From",
                "From",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cohort",
                "Cohort",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Cohort",
                "Cohort",
                "equal"
            ],
            [
                "cohort",
                "cohort",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Cohort",
                "Cohort",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Membership",
                "Membership",
                "equal"
            ],
            [
                "cohort",
                "cohort",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Membership",
                "Membership",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Criterion matchOpticalSignalType(int sigType) { return new OpticalSignalTypeCriterion(sigType, Type.OCH_SIGTYPE); } ",
        "focal_tgt": "public static Criterion matchOpticalSignalType(short sigType) { return new OpticalSignalTypeCriterion(sigType, Type.OCH_SIGTYPE); } ",
        "test_src": "@Test public void matchOpticalSignalTypeTest() { Criterion criterion = Criteria.matchOpticalSignalType((short)40000); ObjectNode result = criterionCodec.encode(criterion, context); assertThat(result.get(\"type\").textValue(), is(criterion.type().toString())); assertThat(result.get(\"signalType\").asInt(), is(40000)); } ",
        "test_tgt": "@Test public void matchOpticalSignalTypeTest() { Criterion criterion = Criteria.matchOpticalSignalType((byte)250); ObjectNode result = criterionCodec.encode(criterion, context); assertThat(result.get(\"type\").textValue(), is(criterion.type().toString())); assertThat(result.get(\"signalType\").asInt(), is(250)); } ",
        "label": 1,
        "focal_db": [
            3060855,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "5e4f754f19a180e5a3ab9b6cdf3bfa48be0d7831",
            "3c32dea4e53deb56280fc4bd5be725184f4dfae7",
            "core/api/src/main/java/org/onosproject/net/flow/criteria/Criteria.java",
            "34893a4f264cace03af8af2bfa2d792544777e78",
            "core/api/src/main/java/org/onosproject/net/flow/criteria/Criteria.java",
            "public static Criterion matchOpticalSignalType(int sigType) {\n        return new OpticalSignalTypeCriterion(sigType, Type.OCH_SIGTYPE);\n    }",
            "/**\n * Creates a match on optical signal type using the specified value.\n *\n * @param sigType optical signal type (16 bits unsigned integer)\n * @return match criterion\n */\n",
            "public static Criterion matchOpticalSignalType(short sigType) {\n        return new OpticalSignalTypeCriterion(sigType, Type.OCH_SIGTYPE);\n    }",
            "/**\n * Creates a match on optical signal type using the specified value.\n *\n * @param sigType optical signal type (8 bits unsigned integer)\n * @return match criterion\n */\n"
        ],
        "test_db": [
            3060860,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "5e4f754f19a180e5a3ab9b6cdf3bfa48be0d7831",
            "6276f244e4c59a7adf11548dfe9f2f59bc89a9fb",
            "web/api/src/test/java/org/onosproject/codec/impl/CriterionCodecTest.java",
            "3efc018bf333deaa7c9c7fb3d046476a4d35ac0e",
            "web/api/src/test/java/org/onosproject/codec/impl/CriterionCodecTest.java",
            "@Test\n    public void matchOpticalSignalTypeTest() {\n        Criterion criterion = Criteria.matchOpticalSignalType((short) 40000);\n        ObjectNode result = criterionCodec.encode(criterion, context);\n        assertThat(result.get(\"type\").textValue(), is(criterion.type().toString()));\n        assertThat(result.get(\"signalType\").asInt(), is(40000));\n    }",
            "/**\n * Tests optical signal type criterion.\n */\n",
            "@Test\n    public void matchOpticalSignalTypeTest() {\n        Criterion criterion = Criteria.matchOpticalSignalType((byte) 250);\n        ObjectNode result = criterionCodec.encode(criterion, context);\n        assertThat(result.get(\"type\").textValue(), is(criterion.type().toString()));\n        assertThat(result.get(\"signalType\").asInt(), is(250));\n    }",
            "/**\n * Tests optical signal type criterion.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Criterion",
                "Criterion",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Optical",
                "Optical",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Signal",
                "Signal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "short",
                "replace"
            ],
            [
                "sig",
                "sig",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Optical",
                "Optical",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Signal",
                "Signal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Criterion",
                "Criterion",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "sig",
                "sig",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OCH",
                "OCH",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SIGTYPE",
                "SIGTYPE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override@Transactional(rollbackFor = { GenieException.class, ConstraintViolationException.class })public void setJobStatus(@NotBlank(message = \"No id entered for the job. Unable to update the status.\")final String id, @NotNull(message = \"No status entered unable to update.\")final JobStatus status, final String msg)throws GenieException { LOG.debug(\"Setting job with id \" + id + \" to status \" + status + \" for reason \" + msg); final Job job = this.jobRepo.findOne(id); if(job != null) { job.setJobStatus(status, msg); } else { throw new GenieNotFoundException(\"No job with id \" + id + \" exists\"); } } ",
        "focal_tgt": "@Override@Transactional(rollbackFor = { GenieException.class, ConstraintViolationException.class })public void setJobStatus(@NotBlank(message = \"No id entered for the job. Unable to update the status.\")final String id, @NotNull(message = \"No status entered unable to update.\")final JobStatus status, final String msg)throws GenieException { if(LOG.isDebugEnabled()) { LOG.debug(\"Setting job with id \" + id + \" to status \" + status + \" for reason \" + msg); } final Job job = this.jobRepo.findOne(id); if(job != null) { job.setJobStatus(status, msg); } else { throw new GenieNotFoundException(\"No job with id \" + id + \" exists\"); } } ",
        "test_src": "@Test public void testSetJobStatus()throws GenieException { final String msg = UUID.randomUUID().toString(); this.service.setJobStatus(JOB_1_ID, JobStatus.RUNNING, msg); final Job job = this.service.getJob(JOB_1_ID); Assert.assertEquals(JobStatus.RUNNING, job.getStatus()); Assert.assertEquals(msg, job.getStatusMsg()); } ",
        "test_tgt": "@Test@Ignore public void testSetJobStatus()throws GenieException { } ",
        "label": 1,
        "focal_db": [
            2856438,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "cde77a889ba0a92de277ec138a289d7d1ca4988c",
            "aa4f4d8f8ac67e20258cf410778fe39085fce8d2",
            "genie-server/src/main/java/com/netflix/genie/server/services/impl/jpa/JobServiceJPAImpl.java",
            "a703a9678d69ac0319ef518d5ea708978c78faa6",
            "genie-server/src/main/java/com/netflix/genie/server/services/impl/jpa/JobServiceJPAImpl.java",
            "@Override\n    @Transactional(\n            rollbackFor = {\n                    GenieException.class,\n                    ConstraintViolationException.class\n            }\n    )\n    public void setJobStatus(\n            @NotBlank(message = \"No id entered for the job. Unable to update the status.\")\n            final String id,\n            @NotNull(message = \"No status entered unable to update.\")\n            final JobStatus status,\n            final String msg\n    ) throws GenieException {\n        LOG.debug(\"Setting job with id \" + id + \" to status \" + status + \" for reason \" + msg);\n        final Job job = this.jobRepo.findOne(id);\n        if (job != null) {\n            job.setJobStatus(status, msg);\n        } else {\n            throw new GenieNotFoundException(\"No job with id \" + id + \" exists\");\n        }\n    }",
            "/**\n * {@inheritDoc}\n */\n",
            "@Override\n    @Transactional(\n            rollbackFor = {\n                    GenieException.class,\n                    ConstraintViolationException.class\n            }\n    )\n    public void setJobStatus(\n            @NotBlank(message = \"No id entered for the job. Unable to update the status.\")\n            final String id,\n            @NotNull(message = \"No status entered unable to update.\")\n            final JobStatus status,\n            final String msg\n    ) throws GenieException {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Setting job with id \" + id + \" to status \" + status + \" for reason \" + msg);\n        }\n        final Job job = this.jobRepo.findOne(id);\n        if (job != null) {\n            job.setJobStatus(status, msg);\n        } else {\n            throw new GenieNotFoundException(\"No job with id \" + id + \" exists\");\n        }\n    }",
            "/**\n * {@inheritDoc}\n */\n"
        ],
        "test_db": [
            2856567,
            "Netflix/genie",
            "/data/comment_repos/Netflix@genie",
            "cde77a889ba0a92de277ec138a289d7d1ca4988c",
            "2dcfb12aa36432c115b2c5e1a5a3a73c06bb2678",
            "genie-server/src/test/java/com/netflix/genie/server/services/impl/jpa/TestJobServiceJPAImpl.java",
            "fbb403ac59a924d14b9ae5a50c55f8c1accdd0f7",
            "genie-server/src/test/java/com/netflix/genie/server/services/impl/jpa/TestJobServiceJPAImpl.java",
            "@Test\n    public void testSetJobStatus() throws GenieException {\n        final String msg = UUID.randomUUID().toString();\n        this.service.setJobStatus(JOB_1_ID, JobStatus.RUNNING, msg);\n        final Job job = this.service.getJob(JOB_1_ID);\n        Assert.assertEquals(JobStatus.RUNNING, job.getStatus());\n        Assert.assertEquals(msg, job.getStatusMsg());\n    }",
            "/**\n * Test setting the job status.\n *\n * @throws GenieException For any problem\n */\n",
            "@Test\n    @Ignore\n    public void testSetJobStatus() throws GenieException {\n    }",
            "/**\n * Test setting the job status.\n *\n * @throws GenieException For any problem\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Transactional",
                "Transactional",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "rollback",
                "rollback",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "For",
                "For",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Genie",
                "Genie",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Constraint",
                "Constraint",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Violation",
                "Violation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Job",
                "Job",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Blank",
                "Blank",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "entered",
                "entered",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Unable",
                "Unable",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "the",
                "the",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "message",
                "message",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "entered",
                "entered",
                "equal"
            ],
            [
                "unable",
                "unable",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Job",
                "Job",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Genie",
                "Genie",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "LOG",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "is",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Debug",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Enabled",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Setting",
                "Setting",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Job",
                "Job",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Repo",
                "Repo",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "find",
                "find",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "One",
                "One",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Job",
                "Job",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Genie",
                "Genie",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Found",
                "Found",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "job",
                "job",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "exists",
                "exists",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public synchronized User[]users(final Users users) { final ArrayList < User > al = new ArrayList < > (); for(final User user : list) { if(users == null || users.get(user.name) != null)al.add(user); } return al.toArray(new User[al.size()]); } ",
        "focal_tgt": "public synchronized User[]users(final Users users) { final ArrayList < User > al = new ArrayList < > (); for(final User user : list) { if(users == null || users.get(user.name()) != null)al.add(user); } return al.toArray(new User[al.size()]); } ",
        "test_src": "@Test public void users()throws BaseXException { query(_ADMIN_USERS.args() + \"= 'admin'\", \"true\"); new CreateUser(NAME, md5(NAME)).execute(context); query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"true\"); new Grant(Perm.READ, NAME, NAME).execute(context); query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"true\"); new DropUser(NAME).execute(context); query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"false\"); query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"false\"); } ",
        "test_tgt": "@Test public void users()throws BaseXException { query(_ADMIN_USERS.args() + \"= 'admin'\", \"true\"); new CreateUser(NAME, NAME).execute(context); query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"true\"); new Grant(Perm.READ, NAME, NAME).execute(context); query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"true\"); new DropUser(NAME).execute(context); query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"false\"); query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"false\"); } ",
        "label": 1,
        "focal_db": [
            4629531,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "82a7c9e87fd4d82cbfb53cdccf7ad46eee9b568f",
            "b6ab78bedfe5952fc82e1c2a62ad6997f1f00a67",
            "basex-core/src/main/java/org/basex/core/Users.java",
            "4818d333fc13d5edf4f09f8ef3dd3874f58a1c1e",
            "basex-core/src/main/java/org/basex/core/Users.java",
            "public synchronized User[] users(final Users users) {\n    final ArrayList<User> al = new ArrayList<>();\n    for(final User user : list) {\n      if(users == null || users.get(user.name) != null) al.add(user);\n    }\n    return al.toArray(new User[al.size()]);\n  }",
            "/**\n * Returns all users.\n * @param users optional second list\n * @return user information\n */\n",
            "public synchronized User[] users(final Users users) {\n    final ArrayList<User> al = new ArrayList<>();\n    for(final User user : list) {\n      if(users == null || users.get(user.name()) != null) al.add(user);\n    }\n    return al.toArray(new User[al.size()]);\n  }",
            "/**\n * Returns all users.\n * @param users optional second list\n * @return user information\n */\n"
        ],
        "test_db": [
            4629627,
            "BaseXdb/basex",
            "/data/local_comment_repos/BaseXdb@basex",
            "82a7c9e87fd4d82cbfb53cdccf7ad46eee9b568f",
            "edc358bd84ea654f241e50e054638c43a54176be",
            "basex-core/src/test/java/org/basex/query/func/AdminModuleTest.java",
            "9b8c2cad82b85cbe6ce94c038fe1241d08a55ac8",
            "basex-core/src/test/java/org/basex/query/func/AdminModuleTest.java",
            "@Test\n  public void users() throws BaseXException {\n    // check if the admin user exists\n    query(_ADMIN_USERS.args() + \"= 'admin'\", \"true\");\n    // check if the temporarily created user is found\n    new CreateUser(NAME, md5(NAME)).execute(context);\n    query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"true\");\n    // check if local user is found\n    new Grant(Perm.READ, NAME, NAME).execute(context);\n    query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"true\");\n    // check if user has been removed\n    new DropUser(NAME).execute(context);\n    query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"false\");\n    query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"false\");\n  }",
            "/**\n * Test method.\n * @throws BaseXException database exception\n */\n",
            "@Test\n  public void users() throws BaseXException {\n    // check if the admin user exists\n    query(_ADMIN_USERS.args() + \"= 'admin'\", \"true\");\n    // check if the temporarily created user is found\n    new CreateUser(NAME, NAME).execute(context);\n    query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"true\");\n    // check if local user is found\n    new Grant(Perm.READ, NAME, NAME).execute(context);\n    query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"true\");\n    // check if user has been removed\n    new DropUser(NAME).execute(context);\n    query(_ADMIN_USERS.args(NAME) + \"= '\" + NAME + '\\'', \"false\");\n    query(_ADMIN_USERS.args() + \"= '\" + NAME + '\\'', \"false\");\n  }",
            "/**\n * Test method.\n * @throws BaseXException database exception\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "synchronized",
                "synchronized",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "users",
                "users",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Users",
                "Users",
                "equal"
            ],
            [
                "users",
                "users",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "al",
                "al",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "users",
                "users",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "users",
                "users",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "al",
                "al",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "user",
                "user",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "al",
                "al",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "to",
                "to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "User",
                "User",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "al",
                "al",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static PointRDD SpatialRangeQuery(PointRDD pointRDD, Envelope envelope, Integer condition) { JavaRDD < Point > result = pointRDD.getRawPointRDD().filter(new PointRangeFilter(envelope, condition)); return new PointRDD(result); } ",
        "focal_tgt": "public static JavaRDD < Point > SpatialRangeQuery(PointRDD spatialRDD, Envelope queryWindow, Integer condition, boolean useIndex)throws Exception { if(useIndex == true) { if(spatialRDD.indexedRawRDD == null) { throw new Exception(\"[RangeQuery][SpatialRangeQuery] Index doesn't exist. Please build index.\"); } JavaRDD < Object > result = spatialRDD.indexedRawRDD.mapPartitions(new RangeFilterUsingIndex(queryWindow)); return result.map(new Function < Object, Point > () { @Override public Point call(Object spatialObject)throws Exception { return(Point)spatialObject; } }); } else { JavaRDD < Object > result = spatialRDD.getRawSpatialRDD().filter(new GeometryRangeFilter(queryWindow, condition)); return result.map(new Function < Object, Point > () { @Override public Point call(Object spatialObject)throws Exception { return(Point)spatialObject; } }); } } ",
        "test_src": "@Test public void testSpatialRangeQuery()throws Exception { RectangleRDD rectangleRDD = new RectangleRDD(sc, InputLocation, offset, splitter); for(int i = 0; i < loopTimes; i ++ ) { long resultSize = RangeQuery.SpatialRangeQuery(rectangleRDD, queryEnvelope, 0).getRawRectangleRDD().count(); assert resultSize > - 1; } assert RangeQuery.SpatialRangeQuery(rectangleRDD, queryEnvelope, 0).getRawRectangleRDD().take(10).get(1).getUserData().toString() != null; } ",
        "test_tgt": "@Test public void testSpatialRangeQuery()throws Exception { RectangleRDD spatialRDD = new RectangleRDD(sc, InputLocation, offset, splitter); for(int i = 0; i < loopTimes; i ++ ) { long resultSize = RangeQuery.SpatialRangeQuery(spatialRDD, queryEnvelope, 0, false).count(); assert resultSize > - 1; } assert RangeQuery.SpatialRangeQuery(spatialRDD, queryEnvelope, 0, false).take(10).get(1).getUserData().toString() != null; } ",
        "label": 1,
        "focal_db": [
            1759119,
            "DataSystemsLab/GeoSpark",
            "/data/comment_repos/DataSystemsLab@GeoSpark",
            "03855b8fd052cbe47065c40fad9927114ad1d55a",
            "09a2ef1fe2ef2493119e29bf26c80cb346a476e9",
            "src/main/java/org/datasyslab/geospark/spatialOperator/RangeQuery.java",
            "f3cf76a330b90790bb2c488e1291d250fee1925c",
            "src/main/java/org/datasyslab/geospark/spatialOperator/RangeQuery.java",
            "public static PointRDD SpatialRangeQuery(PointRDD pointRDD, Envelope envelope, Integer condition) {\n\t\tJavaRDD<Point> result = pointRDD.getRawPointRDD().filter(new PointRangeFilter(envelope, condition));\n\t\treturn new PointRDD(result);\n\t}",
            "/**\n * Spatial range query on top of PointRDD\n * @param pointRDD Input PointRDD\n * @param envelope Query window\n * @param condition 0 means query predicate is \"contains\", 1 means query predicate is \"intersects\"\n * @return A PointRDD contains qualified records\n */\n",
            "public static JavaRDD<Point> SpatialRangeQuery(PointRDD spatialRDD, Envelope queryWindow, Integer condition, boolean useIndex) throws Exception {\n\t\tif(useIndex==true)\n\t\t{\n\t        if(spatialRDD.indexedRawRDD == null) {\n\t            throw new Exception(\"[RangeQuery][SpatialRangeQuery] Index doesn't exist. Please build index on rawSpatialRDD.\");\n\t        }\n\t\t\tJavaRDD<Object> result = spatialRDD.indexedRawRDD.mapPartitions(new RangeFilterUsingIndex(queryWindow));\n\t\t\treturn result.map(new Function<Object, Point>()\n\t\t\t{\n\n\t\t\t\t@Override\n\t\t\t\tpublic Point call(Object spatialObject) throws Exception {\n\t\t\t\t\treturn (Point)spatialObject;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tJavaRDD<Object> result = spatialRDD.getRawSpatialRDD().filter(new GeometryRangeFilter(queryWindow, condition));\n\t\t\treturn result.map(new Function<Object,Point>()\n\t\t\t{\n\t\t\t\t@Override\n\t\t\t\tpublic Point call(Object spatialObject) throws Exception {\n\t\t\t\t\treturn (Point)spatialObject;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t}",
            "/**\n * Spatial range query.\n *\n * @param spatialRDD the spatial RDD\n * @param queryWindow the query window\n * @param condition the condition\n * @param useIndex the use index\n * @return the java RDD\n * @throws Exception the exception\n */\n"
        ],
        "test_db": [
            1759165,
            "DataSystemsLab/GeoSpark",
            "/data/comment_repos/DataSystemsLab@GeoSpark",
            "03855b8fd052cbe47065c40fad9927114ad1d55a",
            "4645cf6e77756541173130c37bf03c8ed18cf054",
            "src/test/java/org/datasyslab/geospark/spatialOperator/RectangleRangeTest.java",
            "10bb4a1806b5c6cecb795448fd91861ce50d3de8",
            "src/test/java/org/datasyslab/geospark/spatialOperator/RectangleRangeTest.java",
            "@Test\n    public void testSpatialRangeQuery() throws Exception {\n    \tRectangleRDD rectangleRDD = new RectangleRDD(sc, InputLocation, offset, splitter);\n    \tfor(int i=0;i<loopTimes;i++)\n    \t{\n    \t\tlong resultSize = RangeQuery.SpatialRangeQuery(rectangleRDD, queryEnvelope, 0).getRawRectangleRDD().count();\n    \t\tassert resultSize>-1;\n    \t}\n    \tassert RangeQuery.SpatialRangeQuery(rectangleRDD, queryEnvelope, 0).getRawRectangleRDD().take(10).get(1).getUserData().toString()!=null;\n    }",
            "",
            "@Test\n    public void testSpatialRangeQuery() throws Exception {\n    \tRectangleRDD spatialRDD = new RectangleRDD(sc, InputLocation, offset, splitter, true);\n    \tfor(int i=0;i<loopTimes;i++)\n    \t{\n    \t\tlong resultSize = RangeQuery.SpatialRangeQuery(spatialRDD, queryEnvelope, 0,false).count();\n    \t\tassert resultSize>-1;\n    \t}\n    \tassert RangeQuery.SpatialRangeQuery(spatialRDD, queryEnvelope, 0,false).take(10).get(1).getUserData().toString()!=null;\n        \n    }",
            "/**\n * Test spatial range query.\n *\n * @throws Exception the exception\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Point",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "RDD",
                "",
                "delete"
            ],
            [
                "Spatial",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Range",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Query",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Point",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "RDD",
                "",
                "delete"
            ],
            [
                "point",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "RDD",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Envelope",
                "",
                "delete"
            ],
            [
                "envelope",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Integer",
                "",
                "delete"
            ],
            [
                "condition",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "Java",
                "Java",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RDD",
                "RDD",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "",
                "Spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Range",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Query",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Envelope",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Window",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Integer",
                "insert"
            ],
            [
                "",
                "condition",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "use",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "use",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "",
                "true",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "indexed",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Raw",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Range",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Query",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "[",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Range",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Query",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "]",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                "doesn",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "'",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "t",
                "insert"
            ],
            [
                "",
                "exist",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "Please",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "index",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "Java",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "point",
                "spatial",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RDD",
                "RDD",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "",
                "indexed",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Raw",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "map",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Partitions",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Range",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Filter",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Using",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Window",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "result",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "map",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Function",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "",
                "public",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                "call",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "Java",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "result",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "RDD",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Raw",
                "Raw",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Spatial",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "RDD",
                "RDD",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "filter",
                "filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Point",
                "Geometry",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Range",
                "Range",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Filter",
                "Filter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "query",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "envelope",
                "Window",
                "replace"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "condition",
                "condition",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "",
                "result",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "map",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Point",
                "Function",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "RDD",
                "",
                "delete"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "result",
                ")",
                "replace"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "",
                "public",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                "call",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "throws",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Point",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "spatial",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Object",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ]
        ]
    },
    {
        "focal_src": "@Override public boolean equals(Object object) { if(this == object) { return true; } if(object instanceof Map) { Map < ? , ? > map = (Map < ? , ? > )object; if(size() != map.size()) { return false; } Iterator < Map.Entry < K, V > > it = entrySet().iterator(); while(it.hasNext()) { Entry < K, V > entry = it.next(); K key = entry.getKey(); V value = entry.getValue(); Object obj = map.get(key); if(null != obj && ( ! obj.equals(value)) || null == obj && obj != value) { return false; } } return true; } return false; } ",
        "focal_tgt": "@Override public boolean equals(Object object) { if(this == object) { return true; } if(object instanceof Map) { Map < ? , ? > map = (Map < ? , ? > )object; if(size() != map.size()) { return false; } Iterator < Map.Entry < K, V > > it = entrySet().iterator(); try { while(it.hasNext()) { Entry < K, V > entry = it.next(); K key = entry.getKey(); V value = entry.getValue(); Object obj = map.get(key); if(null != obj && ( ! obj.equals(value)) || null == obj && obj != value) { return false; } } } catch(ClassCastException cce) { return false; } return true; } return false; } ",
        "test_src": "@TestTargetNew(level = TestLevel.COMPLETE, notes = \"\", method = \"equals\", args = { java.lang.Object.class })@KnownFailure(\"equals(Onject o) method throws java.lang.ClassCastException \" + \"for TreeMap objects with different key objects.\")public void test_equals()throws Exception { Map m1 = new TreeMap(); Map m2 = new TreeMap(); m1.put(\"key1\", \"val1\"); m1.put(\"key2\", \"val2\"); m2.put(new Integer(1), \"val1\"); m2.put(new Integer(2), \"val2\"); assertFalse(\"Maps should not be equal 1\", m1.equals(m2)); assertFalse(\"Maps should not be equal 2\", m2.equals(m1)); m1 = new TreeMap(); m2 = new HashMap(); m1.put(\"key\", \"val\"); m2.put(new Object(), \"val\"); assertFalse(\"Maps should not be equal 3\", m1.equals(m2)); assertFalse(\"Maps should not be equal 4\", m2.equals(m1)); m1 = new TreeMap(); m2 = new TreeMap(); m1.put(new Object(), \"val1\"); m2.put(new Object(), \"val1\"); assertFalse(\"Maps should not be equal 5\", m1.equals(m2)); assertFalse(\"Maps should not be equal 6\", m2.equals(m1)); } ",
        "test_tgt": "@TestTargetNew(level = TestLevel.COMPLETE, notes = \"\", method = \"equals\", args = { java.lang.Object.class })public void test_equals()throws Exception { Map m1 = new TreeMap(); Map m2 = new TreeMap(); m1.put(\"key1\", \"val1\"); m1.put(\"key2\", \"val2\"); m2.put(new Integer(1), \"val1\"); m2.put(new Integer(2), \"val2\"); assertFalse(\"Maps should not be equal 1\", m1.equals(m2)); assertFalse(\"Maps should not be equal 2\", m2.equals(m1)); m1 = new TreeMap(); m2 = new HashMap(); m1.put(\"key\", \"val\"); m2.put(new Object(), \"val\"); assertFalse(\"Maps should not be equal 3\", m1.equals(m2)); assertFalse(\"Maps should not be equal 4\", m2.equals(m1)); m1 = new TreeMap(); m2 = new TreeMap(); m1.put(new Object(), \"val1\"); m2.put(new Object(), \"val1\"); assertFalse(\"Maps should not be equal 5\", m1.equals(m2)); assertFalse(\"Maps should not be equal 6\", m2.equals(m1)); } ",
        "label": 1,
        "focal_db": [
            319684,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "3819a76e7c1f49253f0e077bd497f149340c02b8",
            "00266a71ac9dd37195f6f440beb4592043b25a9c",
            "libcore/luni/src/main/java/java/util/AbstractMap.java",
            "b687e7264ecd07eabca36e4446b53dd57cd7a96c",
            "libcore/luni/src/main/java/java/util/AbstractMap.java",
            "@Override\n    public boolean equals(Object object) {\n        if (this == object) {\n            return true;\n        }\n        if (object instanceof Map) {\n            Map<?, ?> map = (Map<?, ?>) object;\n            if (size() != map.size()) {\n                return false;\n            }\n\n            // BEGIN android-changed\n            // copied from newer version of harmony\n            Iterator<Map.Entry<K, V>> it = entrySet().iterator();\n            while (it.hasNext()) {\n                Entry<K, V> entry = it.next();\n                K key = entry.getKey();\n                V value = entry.getValue();\n                Object obj = map.get(key);\n                if( null != obj && (!obj.equals(value)) || null == obj && obj != value) {\n                    return false;\n                }\n            }\n            // END android-changed\n            return true;\n        }\n        return false;\n    }",
            "/**\n * Compares the specified object to this instance, and returns {@code true}\n * if the specified object is a map and both maps contain the same mappings.\n *\n * @param object\n *            the object to compare with this object.\n * @return boolean {@code true} if the object is the same as this object,\n *         and {@code false} if it is different from this object.\n * @see #hashCode()\n * @see #entrySet()\n * @since Android 1.0\n */\n",
            "@Override\n    public boolean equals(Object object) {\n        if (this == object) {\n            return true;\n        }\n        if (object instanceof Map) {\n            Map<?, ?> map = (Map<?, ?>) object;\n            if (size() != map.size()) {\n                return false;\n            }\n\n            Iterator<Map.Entry<K, V>> it = entrySet().iterator();\n\n            try {\n                while (it.hasNext()) {\n                    Entry<K, V> entry = it.next();\n                    K key = entry.getKey();\n                    V value = entry.getValue();\n                    Object obj = map.get(key);\n                    if( null != obj && (!obj.equals(value)) || null == obj && obj != value) {\n                        return false;\n                    }\n                }\n            } catch (ClassCastException cce) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }",
            "/**\n * Compares the specified object to this instance, and returns {@code true}\n * if the specified object is a map and both maps contain the same mappings.\n *\n * @param object\n *            the object to compare with this object.\n * @return boolean {@code true} if the object is the same as this object,\n *         and {@code false} if it is different from this object.\n * @see #hashCode()\n * @see #entrySet()\n */\n"
        ],
        "test_db": [
            319884,
            "aosp-mirror/platform_dalvik",
            "/data/comment_repos/aosp-mirror@platform_dalvik",
            "3819a76e7c1f49253f0e077bd497f149340c02b8",
            "7ea4c9e5664700a3c1891d56130a2179e055eb87",
            "libcore/luni/src/test/java/tests/api/java/util/TreeMapTest.java",
            "0e7f6a1879e72e4686cfa88ece1b3d65c53dcaa8",
            "libcore/luni/src/test/java/tests/api/java/util/TreeMapTest.java",
            "@TestTargetNew(\n        level = TestLevel.COMPLETE,\n        notes = \"\",\n        method = \"equals\",\n        args = {java.lang.Object.class}\n    )\n    @KnownFailure(\"equals(Onject o) method throws java.lang.ClassCastException \" +\n            \"for TreeMap objects with different key objects.\")\n    public void test_equals() throws Exception {\n        // comparing TreeMaps with different object types\n        Map m1 = new TreeMap();\n        Map m2 = new TreeMap();\n        m1.put(\"key1\", \"val1\");\n        m1.put(\"key2\", \"val2\");\n        m2.put(new Integer(1), \"val1\");\n        m2.put(new Integer(2), \"val2\");\n        assertFalse(\"Maps should not be equal 1\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 2\", m2.equals(m1));\n\n        // comparing TreeMap with HashMap\n        m1 = new TreeMap();\n        m2 = new HashMap();\n        m1.put(\"key\", \"val\");\n        m2.put(new Object(), \"val\");\n        assertFalse(\"Maps should not be equal 3\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 4\", m2.equals(m1));\n\n        // comparing TreeMaps with not-comparable objects inside\n        m1 = new TreeMap();\n        m2 = new TreeMap();\n        m1.put(new Object(), \"val1\");\n        m2.put(new Object(), \"val1\");\n        assertFalse(\"Maps should not be equal 5\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 6\", m2.equals(m1));\n    }",
            "/**\n * Tests equals() method.\n * Tests that no ClassCastException will be thrown in all cases.\n * Regression test for HARMONY-1639.\n */\n",
            "@TestTargetNew(\n        level = TestLevel.COMPLETE,\n        notes = \"\",\n        method = \"equals\",\n        args = {java.lang.Object.class}\n    )\n    public void test_equals() throws Exception {\n        // comparing TreeMaps with different object types\n        Map m1 = new TreeMap();\n        Map m2 = new TreeMap();\n        m1.put(\"key1\", \"val1\");\n        m1.put(\"key2\", \"val2\");\n        m2.put(new Integer(1), \"val1\");\n        m2.put(new Integer(2), \"val2\");\n        assertFalse(\"Maps should not be equal 1\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 2\", m2.equals(m1));\n\n        // comparing TreeMap with HashMap\n        m1 = new TreeMap();\n        m2 = new HashMap();\n        m1.put(\"key\", \"val\");\n        m2.put(new Object(), \"val\");\n        assertFalse(\"Maps should not be equal 3\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 4\", m2.equals(m1));\n\n        // comparing TreeMaps with not-comparable objects inside\n        m1 = new TreeMap();\n        m2 = new TreeMap();\n        m1.put(new Object(), \"val1\");\n        m2.put(new Object(), \"val1\");\n        assertFalse(\"Maps should not be equal 5\", m1.equals(m2));\n        assertFalse(\"Maps should not be equal 6\", m2.equals(m1));\n    }",
            "/**\n * Tests equals() method.\n * Tests that no ClassCastException will be thrown in all cases.\n * Regression test for HARMONY-1639.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                "instanceof",
                "instanceof",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "object",
                "object",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "it",
                "it",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "it",
                "it",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Next",
                "Next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "it",
                "it",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "entry",
                "entry",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "map",
                "map",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "obj",
                "obj",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Class",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Cast",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "cce",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "false",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "protected Query parseQuery(String searchString)throws ParseException { if(searchString == null || searchString.trim().isEmpty()) { throw new ParseException(\"Query is null or empty\"); } LOGGER.debug(searchString); final Query query = queryParser.parse(searchString); return query; } ",
        "focal_tgt": "public synchronized Query parseQuery(String searchString)throws ParseException, IndexException { if(searchString == null || searchString.trim().isEmpty()) { throw new ParseException(\"Query is null or empty\"); } LOGGER.debug(searchString); final Query query = queryParser.parse(searchString); try { resetAnalyzers(); } catch(IOException ex) { throw new IndexException(\"Unable to reset the analyzer after parsing\", ex); } return query; } ",
        "test_src": "@Test public void testParseQuery()throws Exception { String searchString = \"product:(resteasy) AND vendor:(red hat)\"; String expResult = \"+product:resteasy +(vendor:red vendor:redhat vendor:hat)\"; Query result = instance.parseQuery(searchString); assertEquals(expResult, result.toString()); instance.close(); } ",
        "test_tgt": "@Test public void testParseQuery()throws Exception { String searchString = \"product:(resteasy) AND vendor:(red hat)\"; String expResult = \"+product:resteasy +(vendor:red vendor:redhat vendor:hat)\"; Query result = instance.parseQuery(searchString); assertEquals(expResult, result.toString()); instance.resetAnalyzers(); searchString = \"product:(struts2\\\\-core^2 struts^3 core) AND vendor:(apache.struts apache^3 foundation)\"; expResult = \"+((product:struts product:strutsstruts2 product:struts2 product:struts2core product:core)^2.0 (product:corestruts product:struts)^3.0 (product:strutscore product:core)) +((vendor:apache vendor:apachestruts vendor:struts) (vendor:strutsapache vendor:apache)^3.0)\"; result = instance.parseQuery(searchString); assertEquals(expResult, result.toString()); instance.close(); } ",
        "label": 1,
        "focal_db": [
            2435421,
            "jeremylong/DependencyCheck",
            "/data/comment_repos/jeremylong@DependencyCheck",
            "0e1540627cce1dc6ff85f2bbd10206b3e7dad05e",
            "5642cf52551040cd38bd2f2f1003e4a076552624",
            "core/src/main/java/org/owasp/dependencycheck/data/cpe/CpeMemoryIndex.java",
            "7299aa596a2dcef67fdf9f5bf6934f06b2eceeb8",
            "core/src/main/java/org/owasp/dependencycheck/data/cpe/CpeMemoryIndex.java",
            "protected Query parseQuery(String searchString) throws ParseException {\n        if (searchString == null || searchString.trim().isEmpty()) {\n            throw new ParseException(\"Query is null or empty\");\n        }\n        LOGGER.debug(searchString);\n        final Query query = queryParser.parse(searchString);\n        return query;\n    }",
            "/**\n * Parses the given string into a Lucene Query.\n *\n * @param searchString the search text\n * @return the Query object\n * @throws ParseException thrown if the search text cannot be parsed\n */\n",
            "public synchronized Query parseQuery(String searchString) throws ParseException, IndexException {\n        if (searchString == null || searchString.trim().isEmpty()) {\n            throw new ParseException(\"Query is null or empty\");\n        }\n        LOGGER.debug(searchString);\n\n        final Query query = queryParser.parse(searchString);\n        try {\n            resetAnalyzers();\n        } catch (IOException ex) {\n            throw new IndexException(\"Unable to reset the analyzer after parsing\", ex);\n        }\n        return query;\n    }",
            "/**\n * Parses the given string into a Lucene Query.\n *\n * @param searchString the search text\n * @return the Query object\n * @throws ParseException thrown if the search text cannot be parsed\n * @throws IndexException thrown if there is an error resetting the\n * analyzers\n */\n"
        ],
        "test_db": [
            2435497,
            "jeremylong/DependencyCheck",
            "/data/comment_repos/jeremylong@DependencyCheck",
            "0e1540627cce1dc6ff85f2bbd10206b3e7dad05e",
            "38e5d7d8772f0fb2ef04adce54e494e3ef7d9a89",
            "core/src/test/java/org/owasp/dependencycheck/data/cpe/CpeMemoryIndexTest.java",
            "b82ae493ab651cd5d8f65b46dc50bcd41411cedc",
            "core/src/test/java/org/owasp/dependencycheck/data/cpe/CpeMemoryIndexTest.java",
            "@Test\n    public void testParseQuery() throws Exception {\n        String searchString = \"product:(resteasy) AND vendor:(red hat)\";\n\n        String expResult = \"+product:resteasy +(vendor:red vendor:redhat vendor:hat)\";\n        Query result = instance.parseQuery(searchString);\n        assertEquals(expResult, result.toString());\n        instance.close();\n    }",
            "/**\n * Test of parseQuery method, of class CpeMemoryIndex.\n */\n",
            "@Test\n    public void testParseQuery() throws Exception {\n        String searchString = \"product:(resteasy) AND vendor:(red hat)\";\n\n        String expResult = \"+product:resteasy +(vendor:red vendor:redhat vendor:hat)\";\n        Query result = instance.parseQuery(searchString);\n        assertEquals(expResult, result.toString());\n        instance.resetAnalyzers();\n        searchString = \"product:(struts2\\\\-core^2 struts^3 core) AND vendor:(apache.struts apache^3 foundation)\";\n\n        expResult = \"+((product:struts product:strutsstruts2 product:struts2 product:struts2core product:core)^2.0 (product:corestruts product:struts)^3.0 (product:strutscore product:core)) +((vendor:apache vendor:apachestruts vendor:struts) (vendor:strutsapache vendor:apache)^3.0)\";\n        result = instance.parseQuery(searchString);\n        assertEquals(expResult, result.toString());\n        instance.close();\n    }",
            "/**\n * Test of parseQuery method, of class CpeMemoryIndex.\n */\n"
        ],
        "edit_seq": [
            [
                "",
                "public",
                "insert"
            ],
            [
                "protected",
                "synchronized",
                "replace"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "search",
                "search",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "search",
                "search",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "search",
                "search",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trim",
                "trim",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "or",
                "or",
                "equal"
            ],
            [
                "empty",
                "empty",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "LOGGER",
                "LOGGER",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "debug",
                "debug",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "search",
                "search",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Query",
                "Query",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "search",
                "search",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "reset",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Analyzers",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "IO",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "ex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Index",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Unable",
                "insert"
            ],
            [
                "",
                "to",
                "insert"
            ],
            [
                "",
                "reset",
                "insert"
            ],
            [
                "",
                "the",
                "insert"
            ],
            [
                "",
                "analyzer",
                "insert"
            ],
            [
                "",
                "after",
                "insert"
            ],
            [
                "",
                "parsing",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "ex",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "query",
                "query",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public Point findSegment(Point point) { Point bestPoint = null; double bestDistSq = java.lang.Double.MAX_VALUE; if(points.size() < 2) { return null; } Point prevPt = points.get(0); for(Point pt : points) { if(pt == prevPt) { continue; } Line2D.Double line = new Line2D.Double(prevPt, pt); double distSq = line.ptSegDistSq(point); if(distSq < bestDistSq) { bestPoint = prevPt; bestDistSq = distSq; } prevPt = pt; } if(bestDistSq <= (stickyDistance * stickyDistance)) { return bestPoint; } else { return null; } } ",
        "focal_tgt": "public Point findSegment(Point point) { final int sqrStickyDistance = getStickyDistance() * getStickyDistance(); Point bestPoint = null; double bestDistSq = java.lang.Double.MAX_VALUE; if(points.size() < 2) { return null; } Point prevPt = points.get(0); for(Point pt : points) { if(pt == prevPt) { continue; } Line2D.Double line = new Line2D.Double(prevPt, pt); double distSq = line.ptSegDistSq(point); if(distSq < bestDistSq) { bestPoint = prevPt; bestDistSq = distSq; } prevPt = pt; } if(bestDistSq <= sqrStickyDistance) { return bestPoint; } else { return null; } } ",
        "test_src": "@Test public void findSegment() { System.out.println(\"findSegment\"); System.out.println(\"before: \" + instance.getSequenceString()); Point point = new Point(11, 3); instance.setStickyDistance(2); assertEquals(p1, instance.findSegment(point)); instance.setStickyDistance(0); assertEquals(null, instance.findSegment(point)); instance = new BrokenLine(); instance.setStickyDistance(2); assertEquals(null, instance.findSegment(point)); instance.addPoint(p1); assertEquals(null, instance.findSegment(point)); instance.addPoint(p2); assertEquals(p1, instance.findSegment(point)); } ",
        "test_tgt": "@Test public void findSegment() { System.out.println(\"findSegment\"); System.out.println(\"before: \" + instance.getSequenceString()); Point point = new Point(11, 3); assertEquals(p1, instance.findSegment(point)); instance = new BrokenLine(); assertEquals(null, instance.findSegment(point)); instance.addPoint(p1); assertEquals(null, instance.findSegment(point)); instance.addPoint(p2); assertEquals(p1, instance.findSegment(point)); } ",
        "label": 1,
        "focal_db": [
            1363929,
            "Audiveris/audiveris",
            "/data/comment_repos/Audiveris@audiveris",
            "4829b2b153831372abd95186d8a3863ce0c9fd12",
            "3c9091f4d805975c7599cbd1d7cb8107f6375890",
            "src/main/omr/util/BrokenLine.java",
            "efe798e0e16d7e151f4f3d5c3394bf46a353e114",
            "src/main/omr/util/BrokenLine.java",
            "public Point findSegment (Point point)\r\n    {\r\n        Point bestPoint = null;\r\n        double bestDistSq = java.lang.Double.MAX_VALUE;\r\n\r\n        if (points.size() < 2) {\r\n            return null;\r\n        }\r\n\r\n        Point prevPt = points.get(0);\r\n\r\n        for (Point pt : points) {\r\n            // Skip first point\r\n            if (pt == prevPt) {\r\n                continue;\r\n            }\r\n\r\n            Line2D.Double line = new Line2D.Double(prevPt, pt);\r\n            double distSq = line.ptSegDistSq(point);\r\n\r\n            if (distSq < bestDistSq) {\r\n                bestPoint = prevPt;\r\n                bestDistSq = distSq;\r\n            }\r\n\r\n            prevPt = pt;\r\n        }\r\n\r\n        if (bestDistSq <= (stickyDistance * stickyDistance)) {\r\n            return bestPoint;\r\n        } else {\r\n            return null;\r\n        }\r\n    }",
            "/**\n * Find the closest segment (if any) which lies at a maximum of\n * sticky distance from the provided point.\n *\n * @param point the provided point\n * @return the sequence point that starts the segment found\n *         (or null if not found)\n */\n",
            "public Point findSegment (Point point)\r\n    {\r\n        final int sqrStickyDistance = getStickyDistance() * getStickyDistance();\r\n        Point bestPoint = null;\r\n        double bestDistSq = java.lang.Double.MAX_VALUE;\r\n\r\n        if (points.size() < 2) {\r\n            return null;\r\n        }\r\n\r\n        Point prevPt = points.get(0);\r\n\r\n        for (Point pt : points) {\r\n            // Skip first point\r\n            if (pt == prevPt) {\r\n                continue;\r\n            }\r\n\r\n            Line2D.Double line = new Line2D.Double(prevPt, pt);\r\n            double distSq = line.ptSegDistSq(point);\r\n\r\n            if (distSq < bestDistSq) {\r\n                bestPoint = prevPt;\r\n                bestDistSq = distSq;\r\n            }\r\n\r\n            prevPt = pt;\r\n        }\r\n\r\n        if (bestDistSq <= sqrStickyDistance) {\r\n            return bestPoint;\r\n        } else {\r\n            return null;\r\n        }\r\n    }",
            "/**\n * Find the closest segment (if any) which lies at a maximum of\n * sticky distance from the provided point.\n *\n * @param point the provided point\n * @return the sequence point that starts the segment found\n *         (or null if not found)\n */\n"
        ],
        "test_db": [
            1364042,
            "Audiveris/audiveris",
            "/data/comment_repos/Audiveris@audiveris",
            "4829b2b153831372abd95186d8a3863ce0c9fd12",
            "283c0aa6857ae27de3c85da4b4402395c67a22b4",
            "src/test/omr/util/BrokenLineTest.java",
            "25ffe8df600abc480e3fe1e8607281a3b7b4afaa",
            "src/test/omr/util/BrokenLineTest.java",
            "@Test\n    public void findSegment ()\n    {\n        System.out.println(\"findSegment\");\n        System.out.println(\"before: \" + instance.getSequenceString());\n\n        Point point = new Point(11, 3);\n        instance.setStickyDistance(2);\n        assertEquals(p1, instance.findSegment(point));\n\n        instance.setStickyDistance(0);\n        assertEquals(null, instance.findSegment(point));\n\n        instance = new BrokenLine();\n        instance.setStickyDistance(2);\n        assertEquals(null, instance.findSegment(point));\n        instance.addPoint(p1);\n        assertEquals(null, instance.findSegment(point));\n        instance.addPoint(p2);\n        assertEquals(p1, instance.findSegment(point));\n    }",
            "/**\n * Test of findSegment method, of class BrokenLine.\n */\n",
            "@Test\n    public void findSegment ()\n    {\n        System.out.println(\"findSegment\");\n        System.out.println(\"before: \" + instance.getSequenceString());\n\n        Point point = new Point(11, 3);\n        assertEquals(p1, instance.findSegment(point));\n\n        instance = new BrokenLine();\n        assertEquals(null, instance.findSegment(point));\n        instance.addPoint(p1);\n        assertEquals(null, instance.findSegment(point));\n        instance.addPoint(p2);\n        assertEquals(p1, instance.findSegment(point));\n    }",
            "/**\n * Test of findSegment method, of class BrokenLine.\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "find",
                "find",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Segment",
                "Segment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "point",
                "point",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "final",
                "insert"
            ],
            [
                "",
                "int",
                "insert"
            ],
            [
                "",
                "sqr",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Sticky",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Distance",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Sticky",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Distance",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "*",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Sticky",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Distance",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dist",
                "Dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "lang",
                "lang",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Double",
                "Double",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "MAX",
                "MAX",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "VALUE",
                "VALUE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "points",
                "points",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "prev",
                "prev",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pt",
                "Pt",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "points",
                "points",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "pt",
                "pt",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "points",
                "points",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pt",
                "pt",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "prev",
                "prev",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pt",
                "Pt",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Line2",
                "Line2",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "D",
                "D",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Double",
                "Double",
                "equal"
            ],
            [
                "line",
                "line",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Line2",
                "Line2",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "D",
                "D",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Double",
                "Double",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "prev",
                "prev",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pt",
                "Pt",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "pt",
                "pt",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "dist",
                "dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "line",
                "line",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "pt",
                "pt",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Seg",
                "Seg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dist",
                "Dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "point",
                "point",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dist",
                "dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dist",
                "Dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "prev",
                "prev",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pt",
                "Pt",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dist",
                "Dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "dist",
                "dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "prev",
                "prev",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pt",
                "Pt",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pt",
                "pt",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dist",
                "Dist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Sq",
                "Sq",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "(",
                "sqr",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Sticky",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Distance",
                "insert"
            ],
            [
                "sticky",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Distance",
                "",
                "delete"
            ],
            [
                "*",
                "",
                "delete"
            ],
            [
                "sticky",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Distance",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "best",
                "best",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Point",
                "Point",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public NormalizationPreprocessor < K, V > fit(DatasetBuilder < K, V > datasetBuilder, IgniteBiFunction < K, V, double[] > basePreprocessor) { try(Dataset < EmptyContext, NormalizationPartitionData > dataset = datasetBuilder.build((upstream, upstreamSize) -> new EmptyContext(), (upstream, upstreamSize, ctx) -> { double[]min = null; double[]max = null; while(upstream.hasNext()) { UpstreamEntry < K, V > entity = upstream.next(); double[]row = basePreprocessor.apply(entity.getKey(), entity.getValue()); if(min == null) { min = new double[row.length]; for(int i = 0; i < min.length; i ++ )min[i] = Double.MAX_VALUE; } else assert min.length == row.length : \"Base preprocessor must return exactly \" + min.length + \" features\"; if(max == null) { max = new double[row.length]; for(int i = 0; i < max.length; i ++ )max[i] = - Double.MAX_VALUE; } else assert max.length == row.length : \"Base preprocessor must return exactly \" + min.length + \" features\"; for(int i = 0; i < row.length; i ++ ) { if(row[i] < min[i])min[i] = row[i]; if(row[i] > max[i])max[i] = row[i]; } } return new NormalizationPartitionData(min, max); })) { double[][]minMax = dataset.compute(data -> data.getMin() != null ? new double[][] { data.getMin(), data.getMax() } : null, (a, b) -> { if(a == null)return b; if(b == null)return a; double[][]res = new double[2][]; res[0] = new double[a[0].length]; for(int i = 0; i < res[0].length; i ++ )res[0][i] = Math.min(a[0][i], b[0][i]); res[1] = new double[a[1].length]; for(int i = 0; i < res[1].length; i ++ )res[1][i] = Math.max(a[1][i], b[1][i]); return res; }); return new NormalizationPreprocessor < > (minMax[0], minMax[1], basePreprocessor); } catch(Exception e) { throw new RuntimeException(e); } } ",
        "focal_tgt": "@Override public NormalizationPreprocessor < K, V > fit(DatasetBuilder < K, V > datasetBuilder, IgniteBiFunction < K, V, double[] > basePreprocessor) { return new NormalizationPreprocessor < > (p, basePreprocessor); } ",
        "test_src": "@Test public void testFit() { Map < Integer, double[] > data = new HashMap < > (); data.put(1, new double[] { 2, 4, 1 }); data.put(2, new double[] { 1, 8, 22 }); data.put(3, new double[] { 4, 10, 100 }); data.put(4, new double[] { 0, 22, 300 }); DatasetBuilder < Integer, double[] > datasetBuilder = new LocalDatasetBuilder < > (data, parts); NormalizationTrainer < Integer, double[] > standardizationTrainer = new NormalizationTrainer < > (); NormalizationPreprocessor < Integer, double[] > preprocessor = standardizationTrainer.fit(datasetBuilder, (k, v) -> v); assertArrayEquals(new double[] { 0, 4, 1 }, preprocessor.getMin(), 1e-8); assertArrayEquals(new double[] { 4, 22, 300 }, preprocessor.getMax(), 1e-8); } ",
        "test_tgt": "@Test public void testFit() { Map < Integer, double[] > data = new HashMap < > (); data.put(1, new double[] { 2, 4, 1 }); data.put(2, new double[] { 1, 8, 22 }); data.put(3, new double[] { 4, 10, 100 }); data.put(4, new double[] { 0, 22, 300 }); DatasetBuilder < Integer, double[] > datasetBuilder = new LocalDatasetBuilder < > (data, parts); NormalizationTrainer < Integer, double[] > normalizationTrainer = new NormalizationTrainer < Integer, double[] > ().withP(3); NormalizationPreprocessor < Integer, double[] > preprocessor = normalizationTrainer.fit(datasetBuilder, (k, v) -> v); assertArrayEquals(new double[] { 0.125, 0.99, 0.125 }, preprocessor.apply(5, new double[] { 1, 8, 1 }), 1e-2); } ",
        "label": 1,
        "focal_db": [
            811308,
            "apache/ignite",
            "/data/comment_repos/apache@ignite",
            "ae7357ba24518795873174e8c914fc4bdab39986",
            "57acbad54345c2d81a8481820ea908525e155781",
            "modules/ml/src/main/java/org/apache/ignite/ml/preprocessing/normalization/NormalizationTrainer.java",
            "5db4218a48a7ecafd7958b939b0413170ec222c8",
            "modules/ml/src/main/java/org/apache/ignite/ml/preprocessing/normalization/NormalizationTrainer.java",
            "@Override public NormalizationPreprocessor<K, V> fit(DatasetBuilder<K, V> datasetBuilder,\n        IgniteBiFunction<K, V, double[]> basePreprocessor) {\n        try (Dataset<EmptyContext, NormalizationPartitionData> dataset = datasetBuilder.build(\n            (upstream, upstreamSize) -> new EmptyContext(),\n            (upstream, upstreamSize, ctx) -> {\n                double[] min = null;\n                double[] max = null;\n\n                while (upstream.hasNext()) {\n                    UpstreamEntry<K, V> entity = upstream.next();\n                    double[] row = basePreprocessor.apply(entity.getKey(), entity.getValue());\n\n                    if (min == null) {\n                        min = new double[row.length];\n                        for (int i = 0; i < min.length; i++)\n                            min[i] = Double.MAX_VALUE;\n                    }\n                    else\n                        assert min.length == row.length : \"Base preprocessor must return exactly \" + min.length\n                            + \" features\";\n\n                    if (max == null) {\n                        max = new double[row.length];\n                        for (int i = 0; i < max.length; i++)\n                            max[i] = -Double.MAX_VALUE;\n                    }\n                    else\n                        assert max.length == row.length : \"Base preprocessor must return exactly \" + min.length\n                            + \" features\";\n\n                    for (int i = 0; i < row.length; i++) {\n                        if (row[i] < min[i])\n                            min[i] = row[i];\n                        if (row[i] > max[i])\n                            max[i] = row[i];\n                    }\n                }\n\n                return new NormalizationPartitionData(min, max);\n            }\n        )) {\n            double[][] minMax = dataset.compute(\n                data -> data.getMin() != null ? new double[][]{ data.getMin(), data.getMax() } : null,\n                (a, b) -> {\n                    if (a == null)\n                        return b;\n\n                    if (b == null)\n                        return a;\n\n                    double[][] res = new double[2][];\n\n                    res[0] = new double[a[0].length];\n                    for (int i = 0; i < res[0].length; i++)\n                        res[0][i] = Math.min(a[0][i], b[0][i]);\n\n                    res[1] = new double[a[1].length];\n                    for (int i = 0; i < res[1].length; i++)\n                        res[1][i] = Math.max(a[1][i], b[1][i]);\n\n                    return res;\n                }\n            );\n\n            return new NormalizationPreprocessor<>(minMax[0], minMax[1], basePreprocessor);\n        }\n        catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }",
            "/**\n * {@inheritDoc}\n */\n",
            "@Override public NormalizationPreprocessor<K, V> fit(DatasetBuilder<K, V> datasetBuilder,\n        IgniteBiFunction<K, V, double[]> basePreprocessor) {\n        return new NormalizationPreprocessor<>(p, basePreprocessor);\n    }",
            "/**\n * {@inheritDoc}\n */\n"
        ],
        "test_db": [
            811765,
            "apache/ignite",
            "/data/comment_repos/apache@ignite",
            "ae7357ba24518795873174e8c914fc4bdab39986",
            "e7a0d47b1f861a1671331914a14fd7d909a8900a",
            "modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/normalization/NormalizationTrainerTest.java",
            "ef86b0748e135a4686625cd9c582dc9c3414d0cd",
            "modules/ml/src/test/java/org/apache/ignite/ml/preprocessing/normalization/NormalizationTrainerTest.java",
            "@Test\n    public void testFit() {\n        Map<Integer, double[]> data = new HashMap<>();\n        data.put(1, new double[] {2, 4, 1});\n        data.put(2, new double[] {1, 8, 22});\n        data.put(3, new double[] {4, 10, 100});\n        data.put(4, new double[] {0, 22, 300});\n\n        DatasetBuilder<Integer, double[]> datasetBuilder = new LocalDatasetBuilder<>(data, parts);\n\n        NormalizationTrainer<Integer, double[]> standardizationTrainer = new NormalizationTrainer<>();\n\n        NormalizationPreprocessor<Integer, double[]> preprocessor = standardizationTrainer.fit(\n            datasetBuilder,\n            (k, v) -> v\n        );\n\n        assertArrayEquals(new double[] {0, 4, 1}, preprocessor.getMin(), 1e-8);\n        assertArrayEquals(new double[] {4, 22, 300}, preprocessor.getMax(), 1e-8);\n    }",
            "/**\n * Tests {@code fit()} method.\n */\n",
            "@Test\n    public void testFit() {\n        Map<Integer, double[]> data = new HashMap<>();\n        data.put(1, new double[] {2, 4, 1});\n        data.put(2, new double[] {1, 8, 22});\n        data.put(3, new double[] {4, 10, 100});\n        data.put(4, new double[] {0, 22, 300});\n\n        DatasetBuilder<Integer, double[]> datasetBuilder = new LocalDatasetBuilder<>(data, parts);\n\n        NormalizationTrainer<Integer, double[]> normalizationTrainer = new NormalizationTrainer<Integer, double[]>()\n            .withP(3);\n\n        NormalizationPreprocessor<Integer, double[]> preprocessor = normalizationTrainer.fit(\n            datasetBuilder,\n            (k, v) -> v\n        );\n\n        assertArrayEquals(new double[] {0.125, 0.99, 0.125}, preprocessor.apply(5, new double[] {1, 8, 1}), 1e-2);\n    }",
            "/**\n * Tests {@code fit()} method.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Normalization",
                "Normalization",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Preprocessor",
                "Preprocessor",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "fit",
                "fit",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Dataset",
                "Dataset",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "dataset",
                "dataset",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Ignite",
                "Ignite",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bi",
                "Bi",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Function",
                "Function",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "K",
                "K",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "V",
                "V",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "base",
                "base",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Preprocessor",
                "Preprocessor",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "try",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Dataset",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "Empty",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Context",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "Normalization",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Partition",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "dataset",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "dataset",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Builder",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "build",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Size",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "->",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Empty",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Context",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Size",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "ctx",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "->",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "while",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "has",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Next",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "Upstream",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Entry",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "K",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "V",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "entity",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "upstream",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "next",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "base",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Preprocessor",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "apply",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "entity",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Key",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "entity",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Value",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "++",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Double",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAX",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "VALUE",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "assert",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Base",
                "",
                "delete"
            ],
            [
                "preprocessor",
                "",
                "delete"
            ],
            [
                "must",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "exactly",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "features",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "++",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "-",
                "",
                "delete"
            ],
            [
                "Double",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAX",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "VALUE",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "else",
                "",
                "delete"
            ],
            [
                "assert",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Base",
                "",
                "delete"
            ],
            [
                "preprocessor",
                "",
                "delete"
            ],
            [
                "must",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "exactly",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "+",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "features",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "++",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Normalization",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Partition",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Max",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "dataset",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "compute",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                "->",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Min",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "!=",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                "?",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Min",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "data",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Max",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "b",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "->",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "b",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "b",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "2",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "++",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Math",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "b",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "double",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "for",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "int",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "<",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "length",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "++",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Math",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "max",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "a",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "b",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "i",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                "res",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Normalization",
                "Normalization",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Preprocessor",
                "Preprocessor",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "min",
                "p",
                "replace"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Max",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "0",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "min",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Max",
                "",
                "delete"
            ],
            [
                "[",
                "",
                "delete"
            ],
            [
                "1",
                "",
                "delete"
            ],
            [
                "]",
                "",
                "delete"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "base",
                "base",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Preprocessor",
                "Preprocessor",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Runtime",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "e",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "@Theory public void noProxySelected(@FromDataPoints(\"configurations\")ProxyConfiguration configuration) { final String hostname = \"foo.eventhubs.azure.com\"; when(proxySelector.select(argThat(u -> u.getHost().equals(hostname)))).thenReturn(Collections.singletonList(PROXY)); final ConnectionHandler handler = provider.createConnectionHandler(CONNECTION_ID, hostname, TransportType.AMQP_WEB_SOCKETS, configuration); Assert.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname()); Assert.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort()); } ",
        "focal_tgt": "@ParameterizedTest@MethodSource(\"getProxyConfigurations\")public void noProxySelected(ProxyConfiguration configuration) { final String hostname = \"foo.eventhubs.azure.com\"; when(proxySelector.select(argThat(u -> u.getHost().equals(hostname)))).thenReturn(Collections.singletonList(PROXY)); final ConnectionHandler handler = provider.createConnectionHandler(CONNECTION_ID, hostname, TransportType.AMQP_WEB_SOCKETS, configuration); Assertions.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname()); Assertions.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort()); } ",
        "test_src": "@Test public void noProxySelected() { when(proxySelector.select(argThat(u -> u.getHost().equals(HOSTNAME)))).thenReturn(Collections.singletonList(PROXY)); final WebSocketsProxyConnectionHandler handler = new WebSocketsProxyConnectionHandler(CONNECTION_ID, HOSTNAME, PROXY_CONFIGURATION); Assert.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname()); Assert.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort()); } ",
        "test_tgt": "@Test public void noProxySelected() { when(proxySelector.select(argThat(u -> u.getHost().equals(HOSTNAME)))).thenReturn(Collections.singletonList(PROXY)); final WebSocketsProxyConnectionHandler handler = new WebSocketsProxyConnectionHandler(CONNECTION_ID, HOSTNAME, PROXY_CONFIGURATION); Assertions.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname()); Assertions.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort()); } ",
        "label": 1,
        "focal_db": [
            4475663,
            "Azure/azure-sdk-for-java",
            "/data/local_comment_repos/Azure@azure-sdk-for-java",
            "6b15da7f272085b7d75bce57ea318c232109669f",
            "9799453c5ef6e4f02c6d33457ebece303d04f248",
            "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/ReactorHandlerProviderTest.java",
            "86a97f9c53e19884a545e9293abd7f05b9499a3f",
            "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/ReactorHandlerProviderTest.java",
            "@Theory\n    public void noProxySelected(@FromDataPoints(\"configurations\") ProxyConfiguration configuration) {\n        // Arrange\n        final String hostname = \"foo.eventhubs.azure.com\";\n        when(proxySelector.select(argThat(u -> u.getHost().equals(hostname))))\n            .thenReturn(Collections.singletonList(PROXY));\n\n        // Act\n        final ConnectionHandler handler = provider.createConnectionHandler(CONNECTION_ID, hostname,\n            TransportType.AMQP_WEB_SOCKETS, configuration);\n\n        // Act and Assert\n        Assert.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname());\n        Assert.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort());\n    }",
            "/**\n * Verifies that if no proxy configuration is set, then it will use the system configured proxy.\n */\n",
            "@ParameterizedTest\n    @MethodSource(\"getProxyConfigurations\")\n    public void noProxySelected(ProxyConfiguration configuration) {\n        // Arrange\n        final String hostname = \"foo.eventhubs.azure.com\";\n        when(proxySelector.select(argThat(u -> u.getHost().equals(hostname))))\n            .thenReturn(Collections.singletonList(PROXY));\n\n        // Act\n        final ConnectionHandler handler = provider.createConnectionHandler(CONNECTION_ID, hostname,\n            TransportType.AMQP_WEB_SOCKETS, configuration);\n\n        // Act and Assert\n        Assertions.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname());\n        Assertions.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort());\n    }",
            "/**\n * Verifies that if no proxy configuration is set, then it will use the system configured proxy.\n */\n"
        ],
        "test_db": [
            4475670,
            "Azure/azure-sdk-for-java",
            "/data/local_comment_repos/Azure@azure-sdk-for-java",
            "6b15da7f272085b7d75bce57ea318c232109669f",
            "d12e2014b541f710567e0e981dda2b0ed2d30b46",
            "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/handler/WebSocketsProxyConnectionHandlerTest.java",
            "da763e804a93200cf3d6e08ba5ef6730da0452c6",
            "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/handler/WebSocketsProxyConnectionHandlerTest.java",
            "@Test\n    public void noProxySelected() {\n        // Arrange\n        when(proxySelector.select(argThat(u -> u.getHost().equals(HOSTNAME))))\n            .thenReturn(Collections.singletonList(PROXY));\n\n        final WebSocketsProxyConnectionHandler handler = new WebSocketsProxyConnectionHandler(CONNECTION_ID, HOSTNAME,\n            PROXY_CONFIGURATION);\n\n        // Act and Assert\n        Assert.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname());\n        Assert.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort());\n    }",
            "/**\n * Verifies that if no proxy configuration is set, then it will use the system configured proxy.\n */\n",
            "@Test\n    public void noProxySelected() {\n        // Arrange\n        when(proxySelector.select(argThat(u -> u.getHost().equals(HOSTNAME))))\n            .thenReturn(Collections.singletonList(PROXY));\n\n        final WebSocketsProxyConnectionHandler handler = new WebSocketsProxyConnectionHandler(CONNECTION_ID, HOSTNAME,\n            PROXY_CONFIGURATION);\n\n        // Act and Assert\n        Assertions.assertEquals(PROXY_ADDRESS.getHostName(), handler.getHostname());\n        Assertions.assertEquals(PROXY_ADDRESS.getPort(), handler.getProtocolPort());\n    }",
            "/**\n * Verifies that if no proxy configuration is set, then it will use the system configured proxy.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "",
                "Parameterized",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "Theory",
                "Test",
                "replace"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Method",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Source",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Proxy",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Configurations",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "no",
                "no",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Proxy",
                "Proxy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Selected",
                "Selected",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "",
                "delete"
            ],
            [
                "From",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Data",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Points",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "configurations",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "Proxy",
                "Proxy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "configuration",
                "configuration",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "hostname",
                "hostname",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "foo",
                "foo",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "eventhubs",
                "eventhubs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "azure",
                "azure",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "com",
                "com",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "when",
                "when",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "proxy",
                "proxy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Selector",
                "Selector",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "select",
                "select",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "arg",
                "arg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "That",
                "That",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "u",
                "u",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "u",
                "u",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Host",
                "Host",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "equals",
                "equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "hostname",
                "hostname",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Return",
                "Return",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Collections",
                "Collections",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "singleton",
                "singleton",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PROXY",
                "PROXY",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Connection",
                "Connection",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Handler",
                "Handler",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "provider",
                "provider",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Connection",
                "Connection",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Handler",
                "Handler",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "CONNECTION",
                "CONNECTION",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ID",
                "ID",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "hostname",
                "hostname",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Transport",
                "Transport",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "AMQP",
                "AMQP",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "WEB",
                "WEB",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SOCKETS",
                "SOCKETS",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "configuration",
                "configuration",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Assert",
                "Assertions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "assert",
                "assert",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Equals",
                "Equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PROXY",
                "PROXY",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ADDRESS",
                "ADDRESS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Host",
                "Host",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hostname",
                "Hostname",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Assert",
                "Assertions",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "assert",
                "assert",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Equals",
                "Equals",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PROXY",
                "PROXY",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ADDRESS",
                "ADDRESS",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Port",
                "Port",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "handler",
                "handler",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Protocol",
                "Protocol",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Port",
                "Port",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "private void add(CharsRef input, int numInputWords, CharsRef output, int numOutputWords, boolean includeOrig) { if(numInputWords <= 0) { throw new IllegalArgumentException(\"numInputWords must be > 0 (got \" + numInputWords + \")\"); } if(input.length <= 0) { throw new IllegalArgumentException(\"input.length must be > 0 (got \" + input.length + \")\"); } if(numOutputWords <= 0) { throw new IllegalArgumentException(\"numOutputWords must be > 0 (got \" + numOutputWords + \")\"); } if(output.length <= 0) { throw new IllegalArgumentException(\"output.length must be > 0 (got \" + output.length + \")\"); } assert ! hasHoles(input) : \"input has holes: \" + input; assert ! hasHoles(output) : \"output has holes: \" + output; final int hashCode = UnicodeUtil.UTF16toUTF8WithHash(output.chars, output.offset, output.length, utf8Scratch); int ord = words.add(utf8Scratch, hashCode); if(ord < 0) { ord = ( - ord) - 1; } else { } MapEntry e = workingSet.get(input); if(e == null) { e = new MapEntry(); workingSet.put(new CharsRef(input), e); } e.ords.add(ord); e.includeOrig |= includeOrig; maxHorizontalContext = Math.max(maxHorizontalContext, numInputWords); maxHorizontalContext = Math.max(maxHorizontalContext, numOutputWords); } ",
        "focal_tgt": "private void add(CharsRef input, int numInputWords, CharsRef output, int numOutputWords, boolean includeOrig) { if(numInputWords <= 0) { throw new IllegalArgumentException(\"numInputWords must be > 0 (got \" + numInputWords + \")\"); } if(input.length <= 0) { throw new IllegalArgumentException(\"input.length must be > 0 (got \" + input.length + \")\"); } if(numOutputWords <= 0) { throw new IllegalArgumentException(\"numOutputWords must be > 0 (got \" + numOutputWords + \")\"); } if(output.length <= 0) { throw new IllegalArgumentException(\"output.length must be > 0 (got \" + output.length + \")\"); } assert ! hasHoles(input) : \"input has holes: \" + input; assert ! hasHoles(output) : \"output has holes: \" + output; final int hashCode = UnicodeUtil.UTF16toUTF8WithHash(output.chars, output.offset, output.length, utf8Scratch); int ord = words.add(utf8Scratch, hashCode); if(ord < 0) { ord = ( - ord) - 1; } else { } MapEntry e = workingSet.get(input); if(e == null) { e = new MapEntry(); workingSet.put(CharsRef.deepCopyOf(input), e); } e.ords.add(ord); e.includeOrig |= includeOrig; maxHorizontalContext = Math.max(maxHorizontalContext, numInputWords); maxHorizontalContext = Math.max(maxHorizontalContext, numOutputWords); } ",
        "test_src": "@Test public void testAdd() { BytesRef ref = new BytesRef(); BytesRef scratch = new BytesRef(); int num = atLeast(2); for(int j = 0; j < num; j ++ ) { Set < String > strings = new HashSet < String > (); int uniqueCount = 0; for(int i = 0; i < 797; i ++ ) { String str; do { str = _TestUtil.randomRealisticUnicodeString(random, 1000); } while(str.length() == 0); ref.copy(str); int count = hash.size(); int key = hash.add(ref); if(key >= 0) { assertTrue(strings.add(str)); assertEquals(uniqueCount, key); assertEquals(hash.size(), count + 1); uniqueCount ++ ; } else { assertFalse(strings.add(str)); assertTrue(( - key) - 1 < count); assertEquals(str, hash.get(( - key) - 1, scratch).utf8ToString()); assertEquals(count, hash.size()); } } assertAllIn(strings, hash); hash.clear(); assertEquals(0, hash.size()); hash.reinit(); } } ",
        "test_tgt": "@Test public void testAdd() { BytesRef ref = new BytesRef(); BytesRef scratch = new BytesRef(); int num = atLeast(2); for(int j = 0; j < num; j ++ ) { Set < String > strings = new HashSet < String > (); int uniqueCount = 0; for(int i = 0; i < 797; i ++ ) { String str; do { str = _TestUtil.randomRealisticUnicodeString(random, 1000); } while(str.length() == 0); ref.copyChars(str); int count = hash.size(); int key = hash.add(ref); if(key >= 0) { assertTrue(strings.add(str)); assertEquals(uniqueCount, key); assertEquals(hash.size(), count + 1); uniqueCount ++ ; } else { assertFalse(strings.add(str)); assertTrue(( - key) - 1 < count); assertEquals(str, hash.get(( - key) - 1, scratch).utf8ToString()); assertEquals(count, hash.size()); } } assertAllIn(strings, hash); hash.clear(); assertEquals(0, hash.size()); hash.reinit(); } } ",
        "label": 1,
        "focal_db": [
            1198224,
            "apache/lucene-solr",
            "/data/comment_repos/apache@lucene-solr",
            "d376630e7a5cfa5aae16aae9c318ba7f01472b04",
            "1cc22a4d6d39c0ee14e62a6849d3712616b8e440",
            "lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java",
            "fd39cb895294e59db7b1a6bcae85bd7ffe8c48f3",
            "lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java",
            "private void add(CharsRef input, int numInputWords, CharsRef output, int numOutputWords, boolean includeOrig) {\n      // first convert to UTF-8\n      if (numInputWords <= 0) {\n        throw new IllegalArgumentException(\"numInputWords must be > 0 (got \" + numInputWords + \")\");\n      }\n      if (input.length <= 0) {\n        throw new IllegalArgumentException(\"input.length must be > 0 (got \" + input.length + \")\");\n      }\n      if (numOutputWords <= 0) {\n        throw new IllegalArgumentException(\"numOutputWords must be > 0 (got \" + numOutputWords + \")\");\n      }\n      if (output.length <= 0) {\n        throw new IllegalArgumentException(\"output.length must be > 0 (got \" + output.length + \")\");\n      }\n\n      assert !hasHoles(input): \"input has holes: \" + input;\n      assert !hasHoles(output): \"output has holes: \" + output;\n\n      //System.out.println(\"fmap.add input=\" + input + \" numInputWords=\" + numInputWords + \" output=\" + output + \" numOutputWords=\" + numOutputWords);\n      final int hashCode = UnicodeUtil.UTF16toUTF8WithHash(output.chars, output.offset, output.length, utf8Scratch);\n      // lookup in hash\n      int ord = words.add(utf8Scratch, hashCode);\n      if (ord < 0) {\n        // already exists in our hash\n        ord = (-ord)-1;\n        //System.out.println(\"  output=\" + output + \" old ord=\" + ord);\n      } else {\n        //System.out.println(\"  output=\" + output + \" new ord=\" + ord);\n      }\n      \n      MapEntry e = workingSet.get(input);\n      if (e == null) {\n        e = new MapEntry();\n        workingSet.put(new CharsRef(input), e); // make a copy, since we will keep around in our map    \n      }\n      \n      e.ords.add(ord);\n      e.includeOrig |= includeOrig;\n      maxHorizontalContext = Math.max(maxHorizontalContext, numInputWords);\n      maxHorizontalContext = Math.max(maxHorizontalContext, numOutputWords);\n    }",
            "// recompute ourselves to be safe:\n",
            "private void add(CharsRef input, int numInputWords, CharsRef output, int numOutputWords, boolean includeOrig) {\n      // first convert to UTF-8\n      if (numInputWords <= 0) {\n        throw new IllegalArgumentException(\"numInputWords must be > 0 (got \" + numInputWords + \")\");\n      }\n      if (input.length <= 0) {\n        throw new IllegalArgumentException(\"input.length must be > 0 (got \" + input.length + \")\");\n      }\n      if (numOutputWords <= 0) {\n        throw new IllegalArgumentException(\"numOutputWords must be > 0 (got \" + numOutputWords + \")\");\n      }\n      if (output.length <= 0) {\n        throw new IllegalArgumentException(\"output.length must be > 0 (got \" + output.length + \")\");\n      }\n\n      assert !hasHoles(input): \"input has holes: \" + input;\n      assert !hasHoles(output): \"output has holes: \" + output;\n\n      //System.out.println(\"fmap.add input=\" + input + \" numInputWords=\" + numInputWords + \" output=\" + output + \" numOutputWords=\" + numOutputWords);\n      final int hashCode = UnicodeUtil.UTF16toUTF8WithHash(output.chars, output.offset, output.length, utf8Scratch);\n      // lookup in hash\n      int ord = words.add(utf8Scratch, hashCode);\n      if (ord < 0) {\n        // already exists in our hash\n        ord = (-ord)-1;\n        //System.out.println(\"  output=\" + output + \" old ord=\" + ord);\n      } else {\n        //System.out.println(\"  output=\" + output + \" new ord=\" + ord);\n      }\n      \n      MapEntry e = workingSet.get(input);\n      if (e == null) {\n        e = new MapEntry();\n        workingSet.put(CharsRef.deepCopyOf(input), e); // make a copy, since we will keep around in our map    \n      }\n      \n      e.ords.add(ord);\n      e.includeOrig |= includeOrig;\n      maxHorizontalContext = Math.max(maxHorizontalContext, numInputWords);\n      maxHorizontalContext = Math.max(maxHorizontalContext, numOutputWords);\n    }",
            "// recompute ourselves to be safe:\n"
        ],
        "test_db": [
            1198237,
            "apache/lucene-solr",
            "/data/comment_repos/apache@lucene-solr",
            "d376630e7a5cfa5aae16aae9c318ba7f01472b04",
            "b677ff9d5e83019b1046c18cf519dabb91ed4eed",
            "lucene/src/test/org/apache/lucene/util/TestBytesRefHash.java",
            "1e0ecd99013c534ef8d6a6e855f369a554baa9ca",
            "lucene/src/test/org/apache/lucene/util/TestBytesRefHash.java",
            "@Test\n  public void testAdd() {\n    BytesRef ref = new BytesRef();\n    BytesRef scratch = new BytesRef();\n    int num = atLeast(2);\n    for (int j = 0; j < num; j++) {\n      Set<String> strings = new HashSet<String>();\n      int uniqueCount = 0;\n      for (int i = 0; i < 797; i++) {\n        String str;\n        do {\n          str = _TestUtil.randomRealisticUnicodeString(random, 1000);\n        } while (str.length() == 0);\n        ref.copy(str);\n        int count = hash.size();\n        int key = hash.add(ref);\n\n        if (key >=0) {\n          assertTrue(strings.add(str));\n          assertEquals(uniqueCount, key);\n          assertEquals(hash.size(), count + 1);\n          uniqueCount++;\n        } else {\n          assertFalse(strings.add(str));\n          assertTrue((-key)-1 < count);\n          assertEquals(str, hash.get((-key)-1, scratch).utf8ToString());\n          assertEquals(count, hash.size());\n        }\n      }\n      \n      assertAllIn(strings, hash);\n      hash.clear();\n      assertEquals(0, hash.size());\n      hash.reinit();\n    }\n  }",
            "/**\n * Test method for\n * {@link org.apache.lucene.util.BytesRefHash#add(org.apache.lucene.util.BytesRef)}\n * .\n */\n",
            "@Test\n  public void testAdd() {\n    BytesRef ref = new BytesRef();\n    BytesRef scratch = new BytesRef();\n    int num = atLeast(2);\n    for (int j = 0; j < num; j++) {\n      Set<String> strings = new HashSet<String>();\n      int uniqueCount = 0;\n      for (int i = 0; i < 797; i++) {\n        String str;\n        do {\n          str = _TestUtil.randomRealisticUnicodeString(random, 1000);\n        } while (str.length() == 0);\n        ref.copyChars(str);\n        int count = hash.size();\n        int key = hash.add(ref);\n\n        if (key >=0) {\n          assertTrue(strings.add(str));\n          assertEquals(uniqueCount, key);\n          assertEquals(hash.size(), count + 1);\n          uniqueCount++;\n        } else {\n          assertFalse(strings.add(str));\n          assertTrue((-key)-1 < count);\n          assertEquals(str, hash.get((-key)-1, scratch).utf8ToString());\n          assertEquals(count, hash.size());\n        }\n      }\n      \n      assertAllIn(strings, hash);\n      hash.clear();\n      assertEquals(0, hash.size());\n      hash.reinit();\n    }\n  }",
            "/**\n * Test method for\n * {@link org.apache.lucene.util.BytesRefHash#add(org.apache.lucene.util.BytesRef)}\n * .\n */\n"
        ],
        "edit_seq": [
            [
                "private",
                "private",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Chars",
                "Chars",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ref",
                "Ref",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Chars",
                "Chars",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ref",
                "Ref",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Orig",
                "Orig",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "got",
                "got",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "got",
                "got",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "got",
                "got",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Illegal",
                "Illegal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "must",
                "must",
                "equal"
            ],
            [
                "be",
                "be",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "got",
                "got",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "assert",
                "assert",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holes",
                "Holes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "holes",
                "holes",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "assert",
                "assert",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holes",
                "Holes",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "holes",
                "holes",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "hash",
                "hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Unicode",
                "Unicode",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Util",
                "Util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "UTF16to",
                "UTF16to",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "UTF8",
                "UTF8",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "With",
                "With",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hash",
                "Hash",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "chars",
                "chars",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "offset",
                "offset",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "output",
                "output",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "utf8",
                "utf8",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Scratch",
                "Scratch",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "ord",
                "ord",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "words",
                "words",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "utf8",
                "utf8",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Scratch",
                "Scratch",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "hash",
                "hash",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Code",
                "Code",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ord",
                "ord",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "ord",
                "ord",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "ord",
                "ord",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "working",
                "working",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Map",
                "Map",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Entry",
                "Entry",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "working",
                "working",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "put",
                "put",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Chars",
                "Chars",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ref",
                "Ref",
                "equal"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "deep",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Copy",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Of",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "input",
                "input",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ords",
                "ords",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ord",
                "ord",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Orig",
                "Orig",
                "equal"
            ],
            [
                "|=",
                "|=",
                "equal"
            ],
            [
                "include",
                "include",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Orig",
                "Orig",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Horizontal",
                "Horizontal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Horizontal",
                "Horizontal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Input",
                "Input",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Horizontal",
                "Horizontal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Horizontal",
                "Horizontal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "num",
                "num",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Output",
                "Output",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Words",
                "Words",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void initialize()throws IOException { Preconditions.checkState(this.fileSystem == null, \"HDFSStorage has already been initialized.\"); Exceptions.checkNotClosed(this.closed.get(), this); Configuration conf = new Configuration(); conf.set(\"fs.default.name\", config.getHdfsHostURL()); conf.set(\"fs.hdfs.impl\", \"org.apache.hadoop.hdfs.DistributedFileSystem\"); this.fileSystem = FileSystem.get(conf); log.info(\"{}: Initialized.\", LOG_ID); } ",
        "focal_tgt": "@Override@SneakyThrows(IOException.class)public void initialize(long epoch) { Preconditions.checkState(this.fileSystem == null, \"HDFSStorage has already been initialized.\"); Exceptions.checkNotClosed(this.closed.get(), this); Configuration conf = new Configuration(); conf.set(\"fs.default.name\", config.getHdfsHostURL()); conf.set(\"fs.hdfs.impl\", \"org.apache.hadoop.hdfs.DistributedFileSystem\"); this.fileSystem = FileSystem.get(conf); log.info(\"{}: Initialized.\", LOG_ID); } ",
        "test_src": "@Test public void testInitialize() { @Cleanup TestContext context = new TestContext(DEFAULT_CONFIG); context.transactionAggregators[0].initialize(TIMEOUT).join(); Assert.assertTrue(\"isDeleted() flag not set on metadata for deleted segment.\", context.transactionAggregators[0].getMetadata().isDeleted()); context.storage.create(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join(); context.storage.seal(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join(); AssertExtensions.assertThrows(\"initialize() succeeded on a Segment is sealed in Storage but not in the metadata.\", () -> context.transactionAggregators[1].initialize(TIMEOUT), ex -> ex instanceof DataCorruptionException); context.storage.create(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join(); context.storage.seal(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join(); ((UpdateableSegmentMetadata)context.transactionAggregators[2].getMetadata()).markSealed(); context.transactionAggregators[2].initialize(TIMEOUT).join(); Assert.assertTrue(\"isSealedInStorage() flag not set on metadata for storage-sealed segment.\", context.transactionAggregators[2].getMetadata().isSealedInStorage()); final int writeLength = 10; context.storage.create(context.segmentAggregator.getMetadata().getName(), TIMEOUT).join(); context.storage.write(context.segmentAggregator.getMetadata().getName(), 0, new ByteArrayInputStream(new byte[writeLength]), writeLength, TIMEOUT).join(); context.segmentAggregator.initialize(TIMEOUT).join(); Assert.assertEquals(\"SegmentMetadata.StorageLength was not updated after call to initialize().\", writeLength, context.segmentAggregator.getMetadata().getStorageLength()); } ",
        "test_tgt": "@Test public void testInitialize() { @Cleanup TestContext context = new TestContext(DEFAULT_CONFIG); context.transactionAggregators[0].initialize(TIMEOUT, executorService()).join(); Assert.assertTrue(\"isDeleted() flag not set on metadata for deleted segment.\", context.transactionAggregators[0].getMetadata().isDeleted()); context.storage.create(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join(); context.storage.seal(writeHandle(context.transactionAggregators[1].getMetadata().getName()), TIMEOUT).join(); AssertExtensions.assertThrows(\"initialize() succeeded on a Segment is sealed in Storage but not in the metadata.\", () -> context.transactionAggregators[1].initialize(TIMEOUT, executorService()), ex -> ex instanceof DataCorruptionException); context.storage.create(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join(); context.storage.seal(writeHandle(context.transactionAggregators[2].getMetadata().getName()), TIMEOUT).join(); ((UpdateableSegmentMetadata)context.transactionAggregators[2].getMetadata()).markSealed(); context.transactionAggregators[2].initialize(TIMEOUT, executorService()).join(); Assert.assertTrue(\"isSealedInStorage() flag not set on metadata for storage-sealed segment.\", context.transactionAggregators[2].getMetadata().isSealedInStorage()); final int writeLength = 10; context.storage.create(context.segmentAggregator.getMetadata().getName(), TIMEOUT).join(); context.storage.write(writeHandle(context.segmentAggregator.getMetadata().getName()), 0, new ByteArrayInputStream(new byte[writeLength]), writeLength, TIMEOUT).join(); context.segmentAggregator.initialize(TIMEOUT, executorService()).join(); Assert.assertEquals(\"SegmentMetadata.StorageLength was not updated after call to initialize().\", writeLength, context.segmentAggregator.getMetadata().getStorageLength()); } ",
        "label": 1,
        "focal_db": [
            3287836,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "7fecfedb65890ac41dad795628e3a1fce97e3051",
            "7caf63c91b9b061d768e54ce55dfefa81ecefbe7",
            "service/storage/impl/src/main/java/com/emc/pravega/service/storage/impl/hdfs/HDFSStorage.java",
            "67ba600ab6224e9fe61d982186ae4584e9a74b45",
            "service/storage/impl/src/main/java/com/emc/pravega/service/storage/impl/hdfs/HDFSStorage.java",
            "public void initialize() throws IOException {\n        Preconditions.checkState(this.fileSystem == null, \"HDFSStorage has already been initialized.\");\n        Exceptions.checkNotClosed(this.closed.get(), this);\n        Configuration conf = new Configuration();\n        conf.set(\"fs.default.name\", config.getHdfsHostURL());\n        conf.set(\"fs.hdfs.impl\", \"org.apache.hadoop.hdfs.DistributedFileSystem\");\n        this.fileSystem = FileSystem.get(conf);\n        log.info(\"{}: Initialized.\", LOG_ID);\n    }",
            "/**\n * Initializes the HDFSStorage.\n *\n * @throws IOException If the initialization failed.\n */\n",
            "@Override\n    @SneakyThrows(IOException.class)\n    public void initialize(long epoch) {\n        Preconditions.checkState(this.fileSystem == null, \"HDFSStorage has already been initialized.\");\n        Exceptions.checkNotClosed(this.closed.get(), this);\n        Configuration conf = new Configuration();\n        conf.set(\"fs.default.name\", config.getHdfsHostURL());\n        conf.set(\"fs.hdfs.impl\", \"org.apache.hadoop.hdfs.DistributedFileSystem\");\n        this.fileSystem = FileSystem.get(conf);\n        log.info(\"{}: Initialized.\", LOG_ID);\n    }",
            ""
        ],
        "test_db": [
            3287827,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "7fecfedb65890ac41dad795628e3a1fce97e3051",
            "67c6311673bd7263b5b0e15b8b8d3e264e8a2abe",
            "service/server/src/test/java/com/emc/pravega/service/server/writer/SegmentAggregatorTests.java",
            "d12f0d93d73adb1b5183e8d239c89938e312536e",
            "service/server/src/test/java/com/emc/pravega/service/server/writer/SegmentAggregatorTests.java",
            "@Test\n    public void testInitialize() {\n        @Cleanup\n        TestContext context = new TestContext(DEFAULT_CONFIG);\n\n        // Check behavior for non-existent segments (in Storage).\n        context.transactionAggregators[0].initialize(TIMEOUT).join();\n        Assert.assertTrue(\"isDeleted() flag not set on metadata for deleted segment.\", context.transactionAggregators[0].getMetadata().isDeleted());\n\n        // Check behavior for already-sealed segments (in storage, but not in metadata)\n        context.storage.create(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join();\n        context.storage.seal(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join();\n        AssertExtensions.assertThrows(\n                \"initialize() succeeded on a Segment is sealed in Storage but not in the metadata.\",\n                () -> context.transactionAggregators[1].initialize(TIMEOUT),\n                ex -> ex instanceof DataCorruptionException);\n\n        // Check behavior for already-sealed segments (in storage, in metadata, but metadata does not reflect Sealed in storage.)\n        context.storage.create(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join();\n        context.storage.seal(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join();\n        ((UpdateableSegmentMetadata) context.transactionAggregators[2].getMetadata()).markSealed();\n        context.transactionAggregators[2].initialize(TIMEOUT).join();\n        Assert.assertTrue(\"isSealedInStorage() flag not set on metadata for storage-sealed segment.\", context.transactionAggregators[2].getMetadata().isSealedInStorage());\n\n        // Check the ability to update Metadata.StorageOffset if it is different.\n        final int writeLength = 10;\n        context.storage.create(context.segmentAggregator.getMetadata().getName(), TIMEOUT).join();\n        context.storage.write(context.segmentAggregator.getMetadata().getName(), 0, new ByteArrayInputStream(new byte[writeLength]), writeLength, TIMEOUT).join();\n        context.segmentAggregator.initialize(TIMEOUT).join();\n        Assert.assertEquals(\"SegmentMetadata.StorageLength was not updated after call to initialize().\", writeLength, context.segmentAggregator.getMetadata().getStorageLength());\n    }",
            "/**\n * Tests the initialize() method.\n */\n",
            "@Test\n    public void testInitialize() {\n        @Cleanup\n        TestContext context = new TestContext(DEFAULT_CONFIG);\n\n        // Check behavior for non-existent segments (in Storage).\n        context.transactionAggregators[0].initialize(TIMEOUT, executorService()).join();\n        Assert.assertTrue(\"isDeleted() flag not set on metadata for deleted segment.\", context.transactionAggregators[0].getMetadata().isDeleted());\n\n        // Check behavior for already-sealed segments (in storage, but not in metadata)\n        context.storage.create(context.transactionAggregators[1].getMetadata().getName(), TIMEOUT).join();\n        context.storage.seal(writeHandle(context.transactionAggregators[1].getMetadata().getName()), TIMEOUT).join();\n        AssertExtensions.assertThrows(\n                \"initialize() succeeded on a Segment is sealed in Storage but not in the metadata.\",\n                () -> context.transactionAggregators[1].initialize(TIMEOUT, executorService()),\n                ex -> ex instanceof DataCorruptionException);\n\n        // Check behavior for already-sealed segments (in storage, in metadata, but metadata does not reflect Sealed in storage.)\n        context.storage.create(context.transactionAggregators[2].getMetadata().getName(), TIMEOUT).join();\n        context.storage.seal(writeHandle(context.transactionAggregators[2].getMetadata().getName()), TIMEOUT).join();\n        ((UpdateableSegmentMetadata) context.transactionAggregators[2].getMetadata()).markSealed();\n        context.transactionAggregators[2].initialize(TIMEOUT, executorService()).join();\n        Assert.assertTrue(\"isSealedInStorage() flag not set on metadata for storage-sealed segment.\", context.transactionAggregators[2].getMetadata().isSealedInStorage());\n\n        // Check the ability to update Metadata.StorageOffset if it is different.\n        final int writeLength = 10;\n        context.storage.create(context.segmentAggregator.getMetadata().getName(), TIMEOUT).join();\n        context.storage.write(writeHandle(context.segmentAggregator.getMetadata().getName()), 0, new ByteArrayInputStream(new byte[writeLength]), writeLength, TIMEOUT).join();\n        context.segmentAggregator.initialize(TIMEOUT, executorService()).join();\n        Assert.assertEquals(\"SegmentMetadata.StorageLength was not updated after call to initialize().\", writeLength, context.segmentAggregator.getMetadata().getStorageLength());\n    }",
            "/**\n * Tests the initialize() method.\n */\n"
        ],
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Override",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Sneaky",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Throws",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "IO",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "class",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "initialize",
                "initialize",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "",
                "long",
                "insert"
            ],
            [
                "",
                "epoch",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "",
                "delete"
            ],
            [
                "IO",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Preconditions",
                "Preconditions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "HDFS",
                "HDFS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Storage",
                "Storage",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "already",
                "already",
                "equal"
            ],
            [
                "been",
                "been",
                "equal"
            ],
            [
                "initialized",
                "initialized",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Exceptions",
                "Exceptions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Closed",
                "Closed",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "closed",
                "closed",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "conf",
                "conf",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Configuration",
                "Configuration",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "conf",
                "conf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "fs",
                "fs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "config",
                "config",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hdfs",
                "Hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Host",
                "Host",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "URL",
                "URL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "conf",
                "conf",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "fs",
                "fs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hdfs",
                "hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "impl",
                "impl",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "org",
                "org",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "apache",
                "apache",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hadoop",
                "hadoop",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hdfs",
                "hdfs",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Distributed",
                "Distributed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "conf",
                "conf",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "Initialized",
                "Initialized",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "LOG",
                "LOG",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ID",
                "ID",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public void removeFromRealm() { if(row == null) { throw new IllegalStateException(\"Object malformed: missing object in Realm. Make sure to instantiate RealmObjects with Realm.createObject()\"); } if(realm == null) { throw new IllegalStateException(\"Object malformed: missing Realm. Make sure to instantiate RealmObjects with Realm.createObject()\"); } realm.checkIfValid(); row.getTable().moveLastOver(row.getIndex()); row = InvalidRow.INSTANCE; } ",
        "focal_tgt": "@Deprecated public void removeFromRealm() { deleteFromRealm(); } ",
        "test_src": "@Test public void removeFromRealm_removedFromResults() { realm.beginTransaction(); realm.clear(Dog.class); Dog dogToAdd = realm.createObject(Dog.class); dogToAdd.setName(\"Rex\"); realm.commitTransaction(); assertEquals(1, realm.allObjects(Dog.class).size()); Dog dogToRemove = realm.where(Dog.class).findFirst(); assertNotNull(dogToRemove); realm.beginTransaction(); dogToRemove.removeFromRealm(); realm.commitTransaction(); assertEquals(0, realm.allObjects(Dog.class).size()); try { dogToAdd.getName(); realm.close(); fail(); } catch(IllegalStateException ignored) { } try { dogToRemove.getName(); realm.close(); fail(); } catch(IllegalStateException ignored) { } realm.close(); } ",
        "test_tgt": "@Test public void deleteFromRealm_removedFromResults() { realm.beginTransaction(); realm.delete(Dog.class); Dog dogToAdd = realm.createObject(Dog.class); dogToAdd.setName(\"Rex\"); realm.commitTransaction(); assertEquals(1, realm.allObjects(Dog.class).size()); Dog dogToRemove = realm.where(Dog.class).findFirst(); assertNotNull(dogToRemove); realm.beginTransaction(); dogToRemove.deleteFromRealm(); realm.commitTransaction(); assertEquals(0, realm.allObjects(Dog.class).size()); try { dogToAdd.getName(); realm.close(); fail(); } catch(IllegalStateException ignored) { } try { dogToRemove.getName(); realm.close(); fail(); } catch(IllegalStateException ignored) { } realm.close(); } ",
        "label": 1,
        "focal_db": [
            3370224,
            "realm/realm-java",
            "/data/comment_repos/realm@realm-java",
            "61095506f76b7341792ac7941caf6b67b150a5f9",
            "03827e330edf0b13896dbf62db11f3e131c7e3bd",
            "realm/realm-library/src/main/java/io/realm/RealmObject.java",
            "3d711f6d7f3b7602e3b306fc400ffc4c6379d3c6",
            "realm/realm-library/src/main/java/io/realm/RealmObject.java",
            "public void removeFromRealm() {\n        if (row == null) {\n            throw new IllegalStateException(\"Object malformed: missing object in Realm. Make sure to instantiate RealmObjects with Realm.createObject()\");\n        }\n        if (realm == null) {\n            throw new IllegalStateException(\"Object malformed: missing Realm. Make sure to instantiate RealmObjects with Realm.createObject()\");\n        }\n        realm.checkIfValid();\n\n        row.getTable().moveLastOver(row.getIndex());\n        row = InvalidRow.INSTANCE;\n    }",
            "/**\n * Removes the object from the Realm it is currently associated to.\n * <p>\n * After this method is called the object will be invalid and any operation (read or write) performed on it will\n * fail with an IllegalStateException\n *\n * @throws IllegalStateException if the corresponding Realm is closed or in an incorrect thread.\n */\n",
            "@Deprecated\n    public void removeFromRealm() {\n        deleteFromRealm();\n    }",
            "/**\n * DEPRECATED: Use {@link #deleteFromRealm()} instead.\n *\n * Removes the object from the Realm it is currently associated to.\n * <p>\n * After this method is called the object will be invalid and any operation (read or write) performed on it will\n * fail with an IllegalStateException\n *\n * @throws IllegalStateException if the corresponding Realm is closed or in an incorrect thread.\n */\n"
        ],
        "test_db": [
            3370192,
            "realm/realm-java",
            "/data/comment_repos/realm@realm-java",
            "61095506f76b7341792ac7941caf6b67b150a5f9",
            "b75f458c71e4d1f39184072a4646411d05ef0a11",
            "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java",
            "d593f9afbdc9f7a192f279f0f9c0ed460652a768",
            "realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java",
            "@Test\n    public void removeFromRealm_removedFromResults() {\n        realm.beginTransaction();\n        realm.clear(Dog.class);\n        Dog dogToAdd = realm.createObject(Dog.class);\n        dogToAdd.setName(\"Rex\");\n        realm.commitTransaction();\n\n        assertEquals(1, realm.allObjects(Dog.class).size());\n\n        Dog dogToRemove = realm.where(Dog.class).findFirst();\n        assertNotNull(dogToRemove);\n        realm.beginTransaction();\n        dogToRemove.removeFromRealm();\n        realm.commitTransaction();\n\n        assertEquals(0, realm.allObjects(Dog.class).size());\n        try {\n            dogToAdd.getName();\n            realm.close();\n            fail();\n        } catch (IllegalStateException ignored) {\n        }\n        try {\n            dogToRemove.getName();\n            realm.close();\n            fail();\n        } catch (IllegalStateException ignored) {\n        }\n        realm.close();\n    }",
            "// query for an object, remove it and see it has been removed from realm\n",
            "@Test\n    public void deleteFromRealm_removedFromResults() {\n        realm.beginTransaction();\n        realm.delete(Dog.class);\n        Dog dogToAdd = realm.createObject(Dog.class);\n        dogToAdd.setName(\"Rex\");\n        realm.commitTransaction();\n\n        assertEquals(1, realm.allObjects(Dog.class).size());\n\n        Dog dogToRemove = realm.where(Dog.class).findFirst();\n        assertNotNull(dogToRemove);\n        realm.beginTransaction();\n        dogToRemove.deleteFromRealm();\n        realm.commitTransaction();\n\n        assertEquals(0, realm.allObjects(Dog.class).size());\n        try {\n            dogToAdd.getName();\n            realm.close();\n            fail();\n        } catch (IllegalStateException ignored) {\n        }\n        try {\n            dogToRemove.getName();\n            realm.close();\n            fail();\n        } catch (IllegalStateException ignored) {\n        }\n        realm.close();\n    }",
            "// query for an object, remove it and see it has been removed from realm\n"
        ],
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Deprecated",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "remove",
                "remove",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "From",
                "From",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Realm",
                "Realm",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "delete",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "From",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Realm",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Illegal",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "State",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Object",
                "",
                "delete"
            ],
            [
                "malformed",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "missing",
                "",
                "delete"
            ],
            [
                "object",
                "",
                "delete"
            ],
            [
                "in",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Make",
                "",
                "delete"
            ],
            [
                "sure",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "instantiate",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Objects",
                "",
                "delete"
            ],
            [
                "with",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "create",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Object",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "realm",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "throw",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Illegal",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "State",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Exception",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "Object",
                "",
                "delete"
            ],
            [
                "malformed",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ":",
                "",
                "delete"
            ],
            [
                "missing",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "Make",
                "",
                "delete"
            ],
            [
                "sure",
                "",
                "delete"
            ],
            [
                "to",
                "",
                "delete"
            ],
            [
                "instantiate",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Objects",
                "",
                "delete"
            ],
            [
                "with",
                "",
                "delete"
            ],
            [
                "Realm",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "create",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Object",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "realm",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "check",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "If",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Valid",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Table",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "move",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Last",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Over",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "get",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Index",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "row",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "Invalid",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Row",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "INSTANCE",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ]
        ]
    },
    {
        "focal_src": "@Override public void ensureCapacity(int capacity) { Preconditions.checkArgument(capacity <= _maxCapacity); if(_storageMode == StorageMode.MAP_STORAGE) { return; } if(capacity > _trimSize) { switchToMapMode(capacity); return; } if(capacity > _resultHolderCapacity) { int copyLength = _resultHolderCapacity; _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, capacity); _resultHolderCapacity = Math.min(_resultHolderCapacity, _maxCapacity); double[]current = _resultArray; _resultArray = new double[_resultHolderCapacity]; System.arraycopy(current, 0, _resultArray, 0, copyLength); if(_defaultValue != 0.0) { Arrays.fill(_resultArray, copyLength, _resultHolderCapacity, _defaultValue); } } } ",
        "focal_tgt": "@Override public void ensureCapacity(int capacity) { Preconditions.checkArgument(capacity <= _maxCapacity); if(capacity > _resultHolderCapacity) { int copyLength = _resultHolderCapacity; _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, capacity); _resultHolderCapacity = Math.min(_resultHolderCapacity, _maxCapacity); double[]current = _resultArray; _resultArray = new double[_resultHolderCapacity]; System.arraycopy(current, 0, _resultArray, 0, copyLength); if(_defaultValue != 0.0) { Arrays.fill(_resultArray, copyLength, _resultHolderCapacity, _defaultValue); } } } ",
        "test_src": "@Test void testEnsureCapacity() { GroupByResultHolder resultHolder = new DoubleGroupByResultHolder(INITIAL_CAPACITY, MAX_CAPACITY, MAX_CAPACITY, DEFAULT_VALUE); for(int i = 0; i < INITIAL_CAPACITY; i ++ ) { resultHolder.setValueForKey(i, _expected[i]); } resultHolder.ensureCapacity(MAX_CAPACITY); for(int i = INITIAL_CAPACITY; i < MAX_CAPACITY; i ++ ) { double actual = resultHolder.getDoubleResult(i); Assert.assertEquals(actual, DEFAULT_VALUE, \"Default Value mis-match: Actual: \" + actual + \" Expected: \" + DEFAULT_VALUE + \" Random seed: \" + RANDOM_SEED); resultHolder.setValueForKey(i, _expected[i]); } testValues(resultHolder, _expected, 0, MAX_CAPACITY); } ",
        "test_tgt": "@Test void testEnsureCapacity() { GroupByResultHolder resultHolder = new DoubleGroupByResultHolder(INITIAL_CAPACITY, MAX_CAPACITY, DEFAULT_VALUE); for(int i = 0; i < INITIAL_CAPACITY; i ++ ) { resultHolder.setValueForKey(i, _expected[i]); } resultHolder.ensureCapacity(MAX_CAPACITY); for(int i = INITIAL_CAPACITY; i < MAX_CAPACITY; i ++ ) { double actual = resultHolder.getDoubleResult(i); Assert.assertEquals(actual, DEFAULT_VALUE, \"Default Value mis-match: Actual: \" + actual + \" Expected: \" + DEFAULT_VALUE + \" Random seed: \" + RANDOM_SEED); resultHolder.setValueForKey(i, _expected[i]); } testValues(resultHolder, _expected, 0, MAX_CAPACITY); } ",
        "label": 1,
        "focal_db": [
            3983582,
            "apache/incubator-pinot",
            "/data/local_comment_repos/apache@incubator-pinot",
            "e3c12ba4461ef15be86d73b2c6128f98d8719f64",
            "103fce24b7f285d5c4759b5631d46ac07921063d",
            "pinot-core/src/main/java/com/linkedin/pinot/core/query/aggregation/groupby/DoubleGroupByResultHolder.java",
            "6ea8d985eadb04e9ff786782762230b39bf333bb",
            "pinot-core/src/main/java/com/linkedin/pinot/core/query/aggregation/groupby/DoubleGroupByResultHolder.java",
            "@Override\n  public void ensureCapacity(int capacity) {\n    Preconditions.checkArgument(capacity <= _maxCapacity);\n\n    // Nothing to be done for map mode.\n    if (_storageMode == StorageMode.MAP_STORAGE) {\n      return;\n    }\n\n    if (capacity > _trimSize) {\n      switchToMapMode(capacity);\n      return;\n    }\n\n    if (capacity > _resultHolderCapacity) {\n      int copyLength = _resultHolderCapacity;\n      _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, capacity);\n\n      // Cap the growth to maximum possible number of group keys\n      _resultHolderCapacity = Math.min(_resultHolderCapacity, _maxCapacity);\n\n      double[] current = _resultArray;\n      _resultArray = new double[_resultHolderCapacity];\n      System.arraycopy(current, 0, _resultArray, 0, copyLength);\n\n      if (_defaultValue != 0.0) {\n        Arrays.fill(_resultArray, copyLength, _resultHolderCapacity, _defaultValue);\n      }\n    }\n  }",
            "/**\n * {@inheritDoc}\n * For array mode, expands the array size as long as it is under {@link #_maxCapacity},\n * else switches to map mode. For map mode, trims the result.\n *\n * @param capacity Capacity required (number of group keys expected to be stored)\n */\n",
            "@Override\n  public void ensureCapacity(int capacity) {\n    Preconditions.checkArgument(capacity <= _maxCapacity);\n\n    if (capacity > _resultHolderCapacity) {\n      int copyLength = _resultHolderCapacity;\n      _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, capacity);\n\n      // Cap the growth to maximum possible number of group keys\n      _resultHolderCapacity = Math.min(_resultHolderCapacity, _maxCapacity);\n\n      double[] current = _resultArray;\n      _resultArray = new double[_resultHolderCapacity];\n      System.arraycopy(current, 0, _resultArray, 0, copyLength);\n\n      if (_defaultValue != 0.0) {\n        Arrays.fill(_resultArray, copyLength, _resultHolderCapacity, _defaultValue);\n      }\n    }\n  }",
            ""
        ],
        "test_db": [
            3983592,
            "apache/incubator-pinot",
            "/data/local_comment_repos/apache@incubator-pinot",
            "e3c12ba4461ef15be86d73b2c6128f98d8719f64",
            "b8b05c9a40504d57951a4bd1929051ea36bef15f",
            "pinot-core/src/test/java/com/linkedin/pinot/query/aggregation/groupby/DoubleGroupByResultHolderTest.java",
            "cda6f121cb4fa4beae5dd0f2aefde77d5feacaa9",
            "pinot-core/src/test/java/com/linkedin/pinot/query/aggregation/groupby/DoubleGroupByResultHolderTest.java",
            "@Test\n  void testEnsureCapacity() {\n    GroupByResultHolder resultHolder =\n        new DoubleGroupByResultHolder(INITIAL_CAPACITY, MAX_CAPACITY, MAX_CAPACITY, DEFAULT_VALUE);\n\n    for (int i = 0; i < INITIAL_CAPACITY; i++) {\n      resultHolder.setValueForKey(i, _expected[i]);\n    }\n\n    resultHolder.ensureCapacity(MAX_CAPACITY);\n    for (int i = INITIAL_CAPACITY; i < MAX_CAPACITY; i++) {\n      double actual = resultHolder.getDoubleResult(i);\n      Assert.assertEquals(actual, DEFAULT_VALUE,\n          \"Default Value mis-match: Actual: \" + actual + \" Expected: \" + DEFAULT_VALUE + \" Random seed: \"\n              + RANDOM_SEED);\n\n      resultHolder.setValueForKey(i, _expected[i]);\n    }\n\n    testValues(resultHolder, _expected, 0, MAX_CAPACITY);\n  }",
            "/**\n * This test is for the GroupByResultHolder.EnsureCapacity api.\n * - Fills the the result holder with a set of values.\n * - Calls ensureCapacity to expand the result holder size.\n * - Checks that the expanded unfilled portion of the result holder contains {@ref #DEFAULT_VALUE}\n * - Fills the rest of the resultHolder, and ensures all values are returned as expected.\n */\n",
            "@Test\n  void testEnsureCapacity() {\n    GroupByResultHolder resultHolder = new DoubleGroupByResultHolder(INITIAL_CAPACITY, MAX_CAPACITY, DEFAULT_VALUE);\n\n    for (int i = 0; i < INITIAL_CAPACITY; i++) {\n      resultHolder.setValueForKey(i, _expected[i]);\n    }\n\n    resultHolder.ensureCapacity(MAX_CAPACITY);\n    for (int i = INITIAL_CAPACITY; i < MAX_CAPACITY; i++) {\n      double actual = resultHolder.getDoubleResult(i);\n      Assert.assertEquals(actual, DEFAULT_VALUE,\n          \"Default Value mis-match: Actual: \" + actual + \" Expected: \" + DEFAULT_VALUE + \" Random seed: \"\n              + RANDOM_SEED);\n\n      resultHolder.setValueForKey(i, _expected[i]);\n    }\n\n    testValues(resultHolder, _expected, 0, MAX_CAPACITY);\n  }",
            "/**\n * This test is for the GroupByResultHolder.EnsureCapacity api.\n * - Fills the the result holder with a set of values.\n * - Calls ensureCapacity to expand the result holder size.\n * - Checks that the expanded unfilled portion of the result holder contains {@ref #DEFAULT_VALUE}\n * - Fills the rest of the resultHolder, and ensures all values are returned as expected.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "ensure",
                "ensure",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Preconditions",
                "Preconditions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Argument",
                "Argument",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                "<=",
                "<=",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "storage",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Mode",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "Storage",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Mode",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "MAP",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "STORAGE",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "capacity",
                "",
                "delete"
            ],
            [
                ">",
                "",
                "delete"
            ],
            [
                "_",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "trim",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Size",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "switch",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "To",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Map",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Mode",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "capacity",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "return",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Length",
                "Length",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                "*",
                "*",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "capacity",
                "capacity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Math",
                "Math",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "min",
                "min",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "max",
                "max",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "current",
                "current",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "double",
                "double",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "System",
                "System",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "arraycopy",
                "arraycopy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "current",
                "current",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Length",
                "Length",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "0.0",
                "0.0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Arrays",
                "Arrays",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "fill",
                "fill",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "copy",
                "copy",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Length",
                "Length",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Holder",
                "Holder",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Capacity",
                "Capacity",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void enableGroup(String groupName) { if( ! existGroup(groupName)) { throw new GroupNotFoundException(groupName); } for(String feat : featureGroups.get(groupName)) { this.enable(feat); } } ",
        "focal_tgt": "@Override public void enableGroup(String groupName) { if(groupName == null || groupName.isEmpty()) { throw new IllegalArgumentException(\"Groupname cannot be null nor empty\"); } if( ! existGroup(groupName)) { throw new GroupNotFoundException(groupName); } for(String feat : featureGroups.get(groupName)) { this.enable(feat); } } ",
        "test_src": "@Test public void testEnableGroup() { assertFf4j.assertThatFeatureIsDisabled(F2); testedStore.enableGroup(G0); assertFf4j.assertThatFeatureIsEnabled(F2); testedStore.disable(F2); } ",
        "test_tgt": "@Test public void testEnableGroup() { assertFf4j.assertThatFeatureIsDisabled(F2); assertFf4j.assertThatFeatureIsInGroup(F2, G0); testedStore.enableGroup(G0); assertFf4j.assertThatFeatureIsEnabled(F2); testedStore.disable(F2); } ",
        "label": 1,
        "focal_db": [
            4977190,
            "ff4j/ff4j",
            "/data/local_comment_repos/ff4j@ff4j",
            "40c373bc32aa5c9bbad01137388e37bacf603e6f",
            "2d0943676ac4dd054ab53d5d5e3e1d59d26debdd",
            "ff4j-core/src/main/java/org/ff4j/store/InMemoryFeatureStore.java",
            "f2bf8f8a3a7e8125fa6d981416b96f58a86ca62a",
            "ff4j-core/src/main/java/org/ff4j/store/InMemoryFeatureStore.java",
            "@Override\n    public void enableGroup(String groupName) {\n        if (!existGroup(groupName)) {\n            throw new GroupNotFoundException(groupName);\n        }\n        for (String feat : featureGroups.get(groupName)) {\n            this.enable(feat);\n        }\n    }",
            "/**\n * {@inheritDoc}\n */\n",
            "@Override\n    public void enableGroup(String groupName) {\n        if (groupName == null || groupName.isEmpty()) {\n            throw new IllegalArgumentException(\"Groupname cannot be null nor empty\");\n        }\n        if (!existGroup(groupName)) {\n            throw new GroupNotFoundException(groupName);\n        }\n        for (String feat : featureGroups.get(groupName)) {\n            this.enable(feat);\n        }\n    }",
            "/**\n * {@inheritDoc}\n */\n"
        ],
        "test_db": [
            4977216,
            "ff4j/ff4j",
            "/data/local_comment_repos/ff4j@ff4j",
            "40c373bc32aa5c9bbad01137388e37bacf603e6f",
            "9d9fecef0a8500c0820a74daae2ec9c30f037305",
            "ff4j-core/src/test/java/org/ff4j/test/store/AbstractStoreTest.java",
            "74a283585602c28aabe42078ead359b38cc474c4",
            "ff4j-core/src/test/java/org/ff4j/test/store/AbstractStoreTest.java",
            "@Test\n    public void testEnableGroup() {\n        // Given\n        assertFf4j.assertThatFeatureIsDisabled(F2);\n        // When\n        testedStore.enableGroup(G0);\n        // Then\n        assertFf4j.assertThatFeatureIsEnabled(F2);\n        // Reinit\n        testedStore.disable(F2);\n    }",
            "/**\n * TDD.\n */\n",
            "@Test\n    public void testEnableGroup() {\n        // Given\n        assertFf4j.assertThatFeatureIsDisabled(F2);\n        assertFf4j.assertThatFeatureIsInGroup(F2, G0);\n        // When\n        testedStore.enableGroup(G0);\n        // Then\n        assertFf4j.assertThatFeatureIsEnabled(F2);\n        // Reinit\n        testedStore.disable(F2);\n    }",
            "/**\n * TDD.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "enable",
                "enable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "group",
                "group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "group",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "||",
                "insert"
            ],
            [
                "",
                "group",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "is",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Empty",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "throw",
                "insert"
            ],
            [
                "",
                "new",
                "insert"
            ],
            [
                "",
                "Illegal",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Argument",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Groupname",
                "insert"
            ],
            [
                "",
                "can",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "not",
                "insert"
            ],
            [
                "",
                "be",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "nor",
                "insert"
            ],
            [
                "",
                "empty",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "exist",
                "exist",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "group",
                "group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Group",
                "Group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Found",
                "Found",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "group",
                "group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "feat",
                "feat",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "feature",
                "feature",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Groups",
                "Groups",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "group",
                "group",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "this",
                "this",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "enable",
                "enable",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "feat",
                "feat",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public boolean process(I frame) { tracker.process(frame); totalProcessed ++ ; if(totalProcessed == 1) { tracker.spawnTracks(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; } List < AssociatedPair > pairs = tracker.getActiveTracks(); if( ! modelMatcher.process(pairs, null)) { return false; } keyToCurr.set(modelMatcher.getModel()); worldToKey.concat(keyToCurr, worldToCurr); return true; } ",
        "focal_tgt": "public boolean process(I frame) { tracker.process(frame); totalProcessed ++ ; if(totalProcessed == 1) { tracker.spawnTracks(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; } List < AssociatedPair > pairs = tracker.getActiveTracks(); if( ! modelMatcher.process(pairs, null)) { return false; } if(modelRefiner == null || ! modelRefiner.fitModel(modelMatcher.getMatchSet(), modelMatcher.getModel(), keyToCurr)) { keyToCurr.set(modelMatcher.getModel()); } worldToKey.concat(keyToCurr, worldToCurr); return true; } ",
        "test_src": "@Test public void process() { Se2_F32 initial = new Se2_F32(1, 2, 3); Se2_F32 computed = new Se2_F32(4, 5, 6); Se2_F32 model = new Se2_F32(); DummyTracker tracker = new DummyTracker(); DummyModelMatcher < Se2_F32 > matcher = new DummyModelMatcher < Se2_F32 > (computed, 5); ImageUInt8 input = new ImageUInt8(20, 30); ImageMotionPointKey < ImageUInt8, Se2_F32 > alg = new ImageMotionPointKey < ImageUInt8, Se2_F32 > (tracker, matcher, model); alg.setInitialTransform(initial); assertTrue(alg.process(input)); Se2_F32 found = alg.getWorldToCurr(); assertEquals(initial.getX(), found.getX(), 1e-8); assertEquals(1, tracker.numSpawn); assertTrue(alg.process(input)); assertEquals(1, tracker.numSpawn); Se2_F32 keyToCurr = alg.getKeyToCurr(); assertEquals(computed.getX(), keyToCurr.getX(), 1e-8); Se2_F32 worldToCurr = initial.concat(keyToCurr, null); found = alg.getWorldToCurr(); assertEquals(worldToCurr.getX(), found.getX(), 1e-8); } ",
        "test_tgt": "@Test public void process() { Se2_F32 initial = new Se2_F32(1, 2, 3); Se2_F32 computed = new Se2_F32(4, 5, 6); Se2_F32 model = new Se2_F32(); DummyTracker tracker = new DummyTracker(); DummyModelMatcher < Se2_F32 > matcher = new DummyModelMatcher < Se2_F32 > (computed, 5); ImageUInt8 input = new ImageUInt8(20, 30); ImageMotionPointKey < ImageUInt8, Se2_F32 > alg = new ImageMotionPointKey < ImageUInt8, Se2_F32 > (tracker, matcher, null, model); alg.setInitialTransform(initial); assertTrue(alg.process(input)); Se2_F32 found = alg.getWorldToCurr(); assertEquals(initial.getX(), found.getX(), 1e-8); assertEquals(1, tracker.numSpawn); assertTrue(alg.process(input)); assertEquals(1, tracker.numSpawn); Se2_F32 keyToCurr = alg.getKeyToCurr(); assertEquals(computed.getX(), keyToCurr.getX(), 1e-8); Se2_F32 worldToCurr = initial.concat(keyToCurr, null); found = alg.getWorldToCurr(); assertEquals(worldToCurr.getX(), found.getX(), 1e-8); } ",
        "label": 1,
        "focal_db": [
            6032483,
            "lessthanoptimal/BoofCV",
            "/data/local_comment_repos/lessthanoptimal@BoofCV",
            "5446afc59ac65d30aa8435156f9e4cde1068a6ff",
            "de2a165fe2e4f8f4085eafea8c78c320fb31b044",
            "main/geo/src/boofcv/alg/geo/d2/stabilization/ImageMotionPointKey.java",
            "main/geo/src/boofcv/alg/geo/d2/stabilization/ImageMotionPointKey.java",
            "main/geo/src/boofcv/alg/geo/d2/stabilization/ImageMotionPointKey.java",
            "public boolean process( I frame ) {\n\t\t// update the feature tracker\n\t\ttracker.process(frame);\n\t\ttotalProcessed++;\n\n\t\t// set up data structures and spawn tracks\n\t\tif( totalProcessed == 1 ) {\n\t\t\ttracker.spawnTracks();\n\t\t\tworldToKey.set(worldToInit);\n\t\t\tworldToCurr.set(worldToInit);\n\t\t\treturn true;\n\t\t}\n\n\t\t// fit the motion model to the feature tracks\n\t\tList<AssociatedPair> pairs = tracker.getActiveTracks();\n\t\tif( !modelMatcher.process(pairs,null) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Update the motion\n\t\tkeyToCurr.set(modelMatcher.getModel());\n\t\tworldToKey.concat(keyToCurr, worldToCurr);\n\n\t\treturn true;\n\t}",
            "/**\n * Processes the next frame in the sequence.\n *\n * @param frame Next frame in the video sequence\n * @return If a fatal error occurred or not.\n */\n",
            "public boolean process( I frame ) {\n\t\t// update the feature tracker\n\t\ttracker.process(frame);\n\t\ttotalProcessed++;\n\n\t\t// set up data structures and spawn tracks\n\t\tif( totalProcessed == 1 ) {\n\t\t\ttracker.spawnTracks();\n\t\t\tworldToKey.set(worldToInit);\n\t\t\tworldToCurr.set(worldToInit);\n\t\t\treturn true;\n\t\t}\n\n\t\t// fit the motion model to the feature tracks\n\t\tList<AssociatedPair> pairs = tracker.getActiveTracks();\n\t\tif( !modelMatcher.process(pairs,null) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// refine the motion estimate\n\t\tif( modelRefiner == null ||\n\t\t\t\t!modelRefiner.fitModel(modelMatcher.getMatchSet(),modelMatcher.getModel(),keyToCurr))\n\t\t{\n\t\t\tkeyToCurr.set(modelMatcher.getModel());\n\t\t}\n\n\t\t// Update the motion\n\t\tworldToKey.concat(keyToCurr, worldToCurr);\n\n\t\treturn true;\n\t}",
            "/**\n * Processes the next frame in the sequence.\n *\n * @param frame Next frame in the video sequence\n * @return If a fatal error occurred or not.\n */\n"
        ],
        "test_db": [
            6032485,
            "lessthanoptimal/BoofCV",
            "/data/local_comment_repos/lessthanoptimal@BoofCV",
            "5446afc59ac65d30aa8435156f9e4cde1068a6ff",
            "72aaea05a33521693db8f173e5ae680c1325c06a",
            "main/geo/test/boofcv/alg/geo/d2/stabilization/TestImageMotionPointKey.java",
            "main/geo/test/boofcv/alg/geo/d2/stabilization/TestImageMotionPointKey.java",
            "main/geo/test/boofcv/alg/geo/d2/stabilization/TestImageMotionPointKey.java",
            "@Test\n\tpublic void process() {\n\t\t// what the initial transform should be\n\t\tSe2_F32 initial = new Se2_F32(1,2,3);\n\t\tSe2_F32 computed = new Se2_F32(4,5,6);\n\t\tSe2_F32 model = new Se2_F32();\n\t\tDummyTracker tracker = new DummyTracker();\n\t\tDummyModelMatcher<Se2_F32> matcher = new DummyModelMatcher<Se2_F32>(computed,5);\n\n\t\tImageUInt8 input = new ImageUInt8(20,30);\n\t\t\n\t\tImageMotionPointKey<ImageUInt8,Se2_F32> alg = new ImageMotionPointKey<ImageUInt8,Se2_F32>(tracker,matcher,model);\n\n\t\t// specify an initial transform\n\t\talg.setInitialTransform(initial);\n\t\t\n\t\t// the first time it processes an image it should always return true since no motion is estimated\n\t\tassertTrue(alg.process(input));\n\n\t\t// the transform should be the same as the initial one\n\t\t// and requested that new tracks be spawned\n\t\tSe2_F32 found = alg.getWorldToCurr();\n\t\tassertEquals(initial.getX(),found.getX(),1e-8);\n\t\tassertEquals(1,tracker.numSpawn);\n\n\t\t// now it should compute some motion\n\t\tassertTrue(alg.process(input));\n\n\t\t// no new tracks should have been spawned\n\t\tassertEquals(1,tracker.numSpawn);\n\n\t\t// test the newly computed results\n\t\tSe2_F32 keyToCurr = alg.getKeyToCurr();\n\t\tassertEquals(computed.getX(),keyToCurr.getX(),1e-8);\n\n\t\t// see if this transform was correctly computed\n\t\tSe2_F32 worldToCurr = initial.concat(keyToCurr, null);\n\t\tfound = alg.getWorldToCurr();\n\t\tassertEquals(worldToCurr.getX(), found.getX(), 1e-8);\n\t}",
            "/**\n * Give it a very simple example and see if it computes the correct motion and has the expected behavior\n * when processing an image\n */\n",
            "@Test\n\tpublic void process() {\n\t\t// what the initial transform should be\n\t\tSe2_F32 initial = new Se2_F32(1,2,3);\n\t\tSe2_F32 computed = new Se2_F32(4,5,6);\n\t\tSe2_F32 model = new Se2_F32();\n\t\tDummyTracker tracker = new DummyTracker();\n\t\tDummyModelMatcher<Se2_F32> matcher = new DummyModelMatcher<Se2_F32>(computed,5);\n\n\t\tImageUInt8 input = new ImageUInt8(20,30);\n\t\t\n\t\tImageMotionPointKey<ImageUInt8,Se2_F32> alg = new ImageMotionPointKey<ImageUInt8,Se2_F32>(tracker,matcher,null,model);\n\n\t\t// specify an initial transform\n\t\talg.setInitialTransform(initial);\n\t\t\n\t\t// the first time it processes an image it should always return true since no motion is estimated\n\t\tassertTrue(alg.process(input));\n\n\t\t// the transform should be the same as the initial one\n\t\t// and requested that new tracks be spawned\n\t\tSe2_F32 found = alg.getWorldToCurr();\n\t\tassertEquals(initial.getX(),found.getX(),1e-8);\n\t\tassertEquals(1,tracker.numSpawn);\n\n\t\t// now it should compute some motion\n\t\tassertTrue(alg.process(input));\n\n\t\t// no new tracks should have been spawned\n\t\tassertEquals(1,tracker.numSpawn);\n\n\t\t// test the newly computed results\n\t\tSe2_F32 keyToCurr = alg.getKeyToCurr();\n\t\tassertEquals(computed.getX(),keyToCurr.getX(),1e-8);\n\n\t\t// see if this transform was correctly computed\n\t\tSe2_F32 worldToCurr = initial.concat(keyToCurr, null);\n\t\tfound = alg.getWorldToCurr();\n\t\tassertEquals(worldToCurr.getX(), found.getX(), 1e-8);\n\t}",
            "/**\n * Give it a very simple example and see if it computes the correct motion and has the expected behavior\n * when processing an image\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "process",
                "process",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "I",
                "I",
                "equal"
            ],
            [
                "frame",
                "frame",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "tracker",
                "tracker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "process",
                "process",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "frame",
                "frame",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Processed",
                "Processed",
                "equal"
            ],
            [
                "++",
                "++",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "total",
                "total",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Processed",
                "Processed",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "tracker",
                "tracker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "spawn",
                "spawn",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tracks",
                "Tracks",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Init",
                "Init",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Curr",
                "Curr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Init",
                "Init",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Associated",
                "Associated",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pair",
                "Pair",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "pairs",
                "pairs",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "tracker",
                "tracker",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Active",
                "Active",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tracks",
                "Tracks",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "model",
                "model",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Matcher",
                "Matcher",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "process",
                "process",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pairs",
                "pairs",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Refiner",
                "insert"
            ],
            [
                "",
                "==",
                "insert"
            ],
            [
                "",
                "null",
                "insert"
            ],
            [
                "",
                "||",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Refiner",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "fit",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Matcher",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Match",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Set",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "model",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Matcher",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Model",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "key",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "To",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Curr",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Curr",
                "Curr",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "model",
                "model",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Matcher",
                "Matcher",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Model",
                "Model",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Key",
                "Key",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "concat",
                "concat",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Curr",
                "Curr",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "world",
                "world",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "To",
                "To",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Curr",
                "Curr",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public void updateStreamState(final String scopeName, final String streamName, final StreamState updateStreamStateRequest, SecurityContext securityContext, AsyncResponse asyncResponse) { long traceId = LoggerHelpers.traceEnter(log, \"updateStreamState\"); if(updateStreamStateRequest.getStreamState() != StreamState.StreamStateEnum.SEALED) { log.warn(\"Received invalid stream state: {} from client for stream {}/{}\", updateStreamStateRequest.getStreamState(), scopeName, streamName); asyncResponse.resume(Response.status(Status.BAD_REQUEST).build()); return; } controllerService.sealStream(scopeName, streamName).thenApply(updateStreamStatus -> { if(updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) { log.info(\"Successfully sealed stream: {}\", streamName); return Response.status(Status.OK).entity(updateStreamStateRequest).build(); } else if(updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND || updateStreamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND) { log.warn(\"Scope: {} or Stream {} not found\", scopeName, streamName); return Response.status(Status.NOT_FOUND).build(); } else { log.warn(\"updateStreamState for {} failed\", streamName); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); } }).exceptionally(exception -> { log.warn(\"updateStreamState for {} failed with exception: {}\", streamName, exception); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); }).thenApply(asyncResponse :: resume).thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStreamState\", traceId)); } ",
        "focal_tgt": "@Override public void updateStreamState(final String scopeName, final String streamName, final StreamState updateStreamStateRequest, SecurityContext securityContext, AsyncResponse asyncResponse) { long traceId = LoggerHelpers.traceEnter(log, \"updateStreamState\"); try { authenticate(scopeName + \"/\" + streamName, READ_UPDATE); } catch(AuthenticationException e) { log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName); asyncResponse.resume(Response.status(Status.UNAUTHORIZED).build()); LoggerHelpers.traceLeave(log, \"Update stream\", traceId); return; } if(updateStreamStateRequest.getStreamState() != StreamState.StreamStateEnum.SEALED) { log.warn(\"Received invalid stream state: {} from client for stream {}/{}\", updateStreamStateRequest.getStreamState(), scopeName, streamName); asyncResponse.resume(Response.status(Status.BAD_REQUEST).build()); return; } controllerService.sealStream(scopeName, streamName).thenApply(updateStreamStatus -> { if(updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) { log.info(\"Successfully sealed stream: {}\", streamName); return Response.status(Status.OK).entity(updateStreamStateRequest).build(); } else if(updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND || updateStreamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND) { log.warn(\"Scope: {} or Stream {} not found\", scopeName, streamName); return Response.status(Status.NOT_FOUND).build(); } else { log.warn(\"updateStreamState for {} failed\", streamName); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); } }).exceptionally(exception -> { log.warn(\"updateStreamState for {} failed with exception: {}\", streamName, exception); return Response.status(Status.INTERNAL_SERVER_ERROR).build(); }).thenApply(asyncResponse :: resume).thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStreamState\", traceId)); } ",
        "test_src": "@Test public void testUpdateStreamState()throws Exception { final String resourceURI = getURI() + \"v1/scopes/scope1/streams/stream1/state\"; when(mockControllerService.sealStream(\"scope1\", \"stream1\")).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SUCCESS).build())); StreamState streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); Response response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 200, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SCOPE_NOT_FOUND).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 404, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.STREAM_NOT_FOUND).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 404, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.FAILURE).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 500, response.getStatus()); response.close(); } ",
        "test_tgt": "@Test public void testUpdateStreamState()throws Exception { final String resourceURI = getURI() + \"v1/scopes/scope1/streams/stream1/state\"; when(mockControllerService.sealStream(\"scope1\", \"stream1\")).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SUCCESS).build())); StreamState streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 200, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SCOPE_NOT_FOUND).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 404, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.STREAM_NOT_FOUND).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 404, response.getStatus()); response.close(); when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.FAILURE).build())); streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED); response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke(); assertEquals(\"Update Stream State response code\", 500, response.getStatus()); response.close(); } ",
        "label": 1,
        "focal_db": [
            3285643,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "1ab37524d535d453ebfc4bc92f3342f6f715c9d6",
            "10c037e379eb71fe3dd6a74f987146df2091ce01",
            "controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java",
            "547bd1088b800436c4964408085180b238a2cad1",
            "controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java",
            "@Override\n    public void updateStreamState(final String scopeName, final String streamName,\n            final StreamState updateStreamStateRequest, SecurityContext securityContext, AsyncResponse asyncResponse) {\n        long traceId = LoggerHelpers.traceEnter(log, \"updateStreamState\");\n\n        // We only support sealed state now.\n        if (updateStreamStateRequest.getStreamState() != StreamState.StreamStateEnum.SEALED) {\n            log.warn(\"Received invalid stream state: {} from client for stream {}/{}\",\n                     updateStreamStateRequest.getStreamState(), scopeName, streamName);\n            asyncResponse.resume(Response.status(Status.BAD_REQUEST).build());\n            return;\n        }\n\n        controllerService.sealStream(scopeName, streamName).thenApply(updateStreamStatus  -> {\n            if (updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) {\n                log.info(\"Successfully sealed stream: {}\", streamName);\n                return Response.status(Status.OK).entity(updateStreamStateRequest).build();\n            } else if (updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND ||\n                    updateStreamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND) {\n                log.warn(\"Scope: {} or Stream {} not found\", scopeName, streamName);\n                return Response.status(Status.NOT_FOUND).build();\n            } else {\n                log.warn(\"updateStreamState for {} failed\", streamName);\n                return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n            }\n        }).exceptionally(exception -> {\n            log.warn(\"updateStreamState for {} failed with exception: {}\", streamName, exception);\n            return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n        }).thenApply(asyncResponse::resume)\n        .thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStreamState\", traceId));\n    }",
            "/**\n * Implementation of updateStreamState REST API.\n *\n * @param scopeName                 The scope name of stream.\n * @param streamName                The name of stream.\n * @param updateStreamStateRequest  The object conforming to updateStreamStateRequest request json.\n * @param securityContext           The security for API access.\n * @param asyncResponse             AsyncResponse provides means for asynchronous server side response processing.\n */\n",
            "@Override\n    public void updateStreamState(final String scopeName, final String streamName,\n            final StreamState updateStreamStateRequest, SecurityContext securityContext, AsyncResponse asyncResponse) {\n        long traceId = LoggerHelpers.traceEnter(log, \"updateStreamState\");\n\n        try {\n            authenticate(scopeName + \"/\" + streamName, READ_UPDATE);\n        } catch (AuthenticationException e) {\n            log.warn(\"Update stream for {} failed due to authentication failure.\", scopeName + \"/\" + streamName);\n            asyncResponse.resume(Response.status(Status.UNAUTHORIZED).build());\n            LoggerHelpers.traceLeave(log, \"Update stream\", traceId);\n            return;\n        }\n\n        // We only support sealed state now.\n        if (updateStreamStateRequest.getStreamState() != StreamState.StreamStateEnum.SEALED) {\n            log.warn(\"Received invalid stream state: {} from client for stream {}/{}\",\n                     updateStreamStateRequest.getStreamState(), scopeName, streamName);\n            asyncResponse.resume(Response.status(Status.BAD_REQUEST).build());\n            return;\n        }\n\n        controllerService.sealStream(scopeName, streamName).thenApply(updateStreamStatus  -> {\n            if (updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SUCCESS) {\n                log.info(\"Successfully sealed stream: {}\", streamName);\n                return Response.status(Status.OK).entity(updateStreamStateRequest).build();\n            } else if (updateStreamStatus.getStatus() == UpdateStreamStatus.Status.SCOPE_NOT_FOUND ||\n                    updateStreamStatus.getStatus() == UpdateStreamStatus.Status.STREAM_NOT_FOUND) {\n                log.warn(\"Scope: {} or Stream {} not found\", scopeName, streamName);\n                return Response.status(Status.NOT_FOUND).build();\n            } else {\n                log.warn(\"updateStreamState for {} failed\", streamName);\n                return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n            }\n        }).exceptionally(exception -> {\n            log.warn(\"updateStreamState for {} failed with exception: {}\", streamName, exception);\n            return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n        }).thenApply(asyncResponse::resume)\n        .thenAccept(x -> LoggerHelpers.traceLeave(log, \"updateStreamState\", traceId));\n    }",
            "/**\n * Implementation of updateStreamState REST API.\n *\n * @param scopeName                 The scope name of stream.\n * @param streamName                The name of stream.\n * @param updateStreamStateRequest  The object conforming to updateStreamStateRequest request json.\n * @param securityContext           The security for API access.\n * @param asyncResponse             AsyncResponse provides means for asynchronous server side response processing.\n */\n"
        ],
        "test_db": [
            3285660,
            "pravega/pravega",
            "/data/comment_repos/pravega@pravega",
            "1ab37524d535d453ebfc4bc92f3342f6f715c9d6",
            "22a72ad888723488d41fad94b095e71f1ae22e8b",
            "controller/src/test/java/io/pravega/controller/rest/v1/StreamMetaDataTests.java",
            "519f73a9c21b8fe847e8721deaf785229a407312",
            "controller/src/test/java/io/pravega/controller/rest/v1/StreamMetaDataTests.java",
            "@Test\n    public void testUpdateStreamState() throws Exception {\n        final String resourceURI = getURI() + \"v1/scopes/scope1/streams/stream1/state\";\n\n        // Test to seal a stream.\n        when(mockControllerService.sealStream(\"scope1\", \"stream1\")).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SUCCESS).build()));\n        StreamState streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        Response response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 200, response.getStatus());\n        response.close();\n\n        // Test to seal a non existent scope.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SCOPE_NOT_FOUND).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 404, response.getStatus());\n        response.close();\n\n        // Test to seal a non existent stream.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.STREAM_NOT_FOUND).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 404, response.getStatus());\n        response.close();\n\n        // Test to check failure.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.FAILURE).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = client.target(resourceURI).request().buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 500, response.getStatus());\n        response.close();\n    }",
            "/**\n * Test for updateStreamState REST API.\n */\n",
            "@Test\n    public void testUpdateStreamState() throws Exception {\n        final String resourceURI = getURI() + \"v1/scopes/scope1/streams/stream1/state\";\n\n        // Test to seal a stream.\n        when(mockControllerService.sealStream(\"scope1\", \"stream1\")).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SUCCESS).build()));\n        StreamState streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        Response response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 200, response.getStatus());\n        response.close();\n\n        // Test to seal a non existent scope.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.SCOPE_NOT_FOUND).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 404, response.getStatus());\n        response.close();\n\n        // Test to seal a non existent stream.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.STREAM_NOT_FOUND).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 404, response.getStatus());\n        response.close();\n\n        // Test to check failure.\n        when(mockControllerService.sealStream(scope1, stream1)).thenReturn(CompletableFuture.completedFuture(\n                UpdateStreamStatus.newBuilder().setStatus(UpdateStreamStatus.Status.FAILURE).build()));\n        streamState = new StreamState().streamState(StreamState.StreamStateEnum.SEALED);\n        response = addAuthHeaders(client.target(resourceURI).request()).buildPut(Entity.json(streamState)).invoke();\n        assertEquals(\"Update Stream State response code\", 500, response.getStatus());\n        response.close();\n    }",
            "/**\n * Test for updateStreamState REST API.\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Security",
                "Security",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                "security",
                "security",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Context",
                "Context",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Async",
                "Async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "long",
                "long",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helpers",
                "Helpers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enter",
                "Enter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "",
                "try",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "authenticate",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "scope",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "READ",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "_",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "UPDATE",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "catch",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Authentication",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "e",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "log",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "warn",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Update",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "for",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "failed",
                "insert"
            ],
            [
                "",
                "due",
                "insert"
            ],
            [
                "",
                "to",
                "insert"
            ],
            [
                "",
                "authentication",
                "insert"
            ],
            [
                "",
                "failure",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "scope",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "/",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "+",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Name",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "async",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Response",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "resume",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Response",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "status",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "Status",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "UNAUTHORIZED",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "build",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "Logger",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Helpers",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "trace",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Leave",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "log",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Update",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "trace",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enum",
                "Enum",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEALED",
                "SEALED",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Received",
                "Received",
                "equal"
            ],
            [
                "invalid",
                "invalid",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "from",
                "from",
                "equal"
            ],
            [
                "client",
                "client",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "/",
                "/",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "resume",
                "resume",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "BAD",
                "BAD",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "REQUEST",
                "REQUEST",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "controller",
                "controller",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Service",
                "Service",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "seal",
                "seal",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Apply",
                "Apply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SUCCESS",
                "SUCCESS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Successfully",
                "Successfully",
                "equal"
            ],
            [
                "sealed",
                "sealed",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "OK",
                "OK",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "entity",
                "entity",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Request",
                "Request",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SCOPE",
                "SCOPE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Update",
                "Update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STREAM",
                "STREAM",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Scope",
                "Scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "or",
                "or",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "not",
                "not",
                "equal"
            ],
            [
                "found",
                "found",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "scope",
                "scope",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "FOUND",
                "FOUND",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "INTERNAL",
                "INTERNAL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SERVER",
                "SERVER",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ERROR",
                "ERROR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "exceptionally",
                "exceptionally",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "warn",
                "warn",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "failed",
                "failed",
                "equal"
            ],
            [
                "with",
                "with",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "exception",
                "exception",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "status",
                "status",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Status",
                "Status",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "INTERNAL",
                "INTERNAL",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SERVER",
                "SERVER",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ERROR",
                "ERROR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Apply",
                "Apply",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "async",
                "async",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "resume",
                "resume",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "then",
                "then",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Accept",
                "Accept",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "x",
                "x",
                "equal"
            ],
            [
                "->",
                "->",
                "equal"
            ],
            [
                "Logger",
                "Logger",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Helpers",
                "Helpers",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Leave",
                "Leave",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "log",
                "log",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "update",
                "update",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Stream",
                "Stream",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "trace",
                "trace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    }
]